#line 2 "parameters_flexer.cc"

#line 4 "parameters_flexer.cc"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5
#define YY_FLEX_SUBMINOR_VERSION 35
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

    /* The c++ scanner is a mess. The FlexLexer.h header file relies on the
     * following macro. This is required in order to pass the c++-multiple-scanners
     * test in the regression suite. We get reports that it breaks inheritance.
     * We will address this in a future release of flex, or omit the C++ scanner
     * altogether.
     */
    #define yyFlexLexer MPFlexLexer

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */

/* end standard C headers. */

/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* begin standard C++ headers. */
#include <iostream> 
#include <errno.h>
#include <cstdlib>
#include <cstdio>
#include <cstring>
/* end standard C++ headers. */

#ifdef __cplusplus

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

/* C99 requires __STDC__ to be defined as 1. */
#if defined (__STDC__)

#define YY_USE_CONST

#endif	/* defined (__STDC__) */
#endif	/* ! __cplusplus */

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin  )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

extern int yyleng;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

    #define YY_LESS_LINENO(n)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, (yytext_ptr)  )

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{

	std::istream* yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */
    
	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)

/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

void *MPalloc (yy_size_t  );
void *MPrealloc (void *,yy_size_t  );
void MPfree (void *  );

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* Begin user sect3 */
#define YY_SKIP_YYWRAP

typedef unsigned char YY_CHAR;

#define yytext_ptr yytext
#define YY_INTERACTIVE

#include <FlexLexer.h>

int yyFlexLexer::yywrap() { return 1; }

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
	yyleng = (size_t) (yy_cp - yy_bp); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
	(yy_c_buf_p) = yy_cp;

#define YY_NUM_RULES 621
#define YY_END_OF_BUFFER 622
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static yyconst flex_int16_t yy_accept[6278] =
    {   0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  622,  621,  618,  616,  621,  620,  620,  612,
      612,  613,  615,  614,  610,  610,  610,  610,  610,  610,
      621,  526,  525,  525,  526,  526,  526,  523,  526,  526,
      526,  526,  523,  526,  526,  526,  526,  526,  526,  526,

      526,  526,  526,  526,  526,  526,  526,  526,  526,  526,
      526,  526,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,   24,  620,  620,   23,   23,
       21,   21,   21,   21,   21,   21,   21,   21,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  616,  621,  612,  612,  610,
      610,  610,  610,  610,  610,  621,  223,  222,  223,  223,
      223,  223,  223,  223,  223,  223,  222,  223,  223,  221,
      223,  221,  223,  223,  223,  220,  220,  223,  220,  213,
      212,  213,  213,  213,  213,  213,  213,  213,  213,  209,

      213,  209,  213,  213,  213,  213,  213,  213,  213,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  393,  620,  620,  384,
      386,  388,  392,  392,  390,  390,  390,  390,  390,  390,
      390,  390,  390,  390,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  478,  620,  620,  481,  481,
      478,  479,  479,  479,  479,  479,  479,  479,  479,  479,

      402,  620,  620,  401,  401,  399,  399,  399,  399,  399,
      399,  399,  399,  399,  621,  618,  617,  616,  621,  620,
      620,  612,  612,  613,  615,  614,  610,  610,  610,  610,
      610,  610,  621,  537,  612,  610,  610,  610,  610,  610,
        0,  612,  619,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  612,  612,  610,  610,  610,  610,
      610,  610,  610,    0,    0,    0,    0,    0,    0,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,

      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,   12,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
       26,  610,  610,   23,    0,   23,   23,   21,   21,   21,
       21,   21,   21,   21,   21,   21,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,   70,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,  610,  610,  610,  610,  610,  227,  227,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  227,  610,  219,  610,  214,  610,
      610,    0,  209,    0,    0,  209,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  293,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  303,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,  371,  610,  369,  610,  610,  392,    0,
      392,  382,  392,  390,  390,  390,  390,  390,  390,  390,
      390,  390,  390,  390,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  241,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  395,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  408,  610,  610,
      433,  610,  610,  610,  610,  610,  610,  610,  447,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,  610,  481,    0,  481,  481,  479,  479,
      479,  479,  479,  479,  479,  475,  479,  479,  401,    0,
      401,  401,  399,  399,  399,  399,  399,  399,  399,  399,
      399,  399,    0,  617,    0,  612,  619,  617,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  612,
      612,  610,  610,  610,  610,  610,  610,  610,    0,    0,
        0,    0,    0,    0,  612,  610,  610,  610,  610,  610,
      610,    0,    0,  563,  552,  545,  565,    0,  568,  554,
      556,    0,  550,  539,    0,  561,    0,  541,  570,    0,

      574,  548,    0,  576,  543,  558,    0,    0,    0,    0,
        0,    0,    0,  611,  612,  610,  610,  610,  610,  610,
      610,    0,    0,    0,    0,    0,    0,    0,  524,  509,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  502,  524,  524,  524,  524,  524,  524,
        8,  610,  610,  610,  610,   10,  610,  610,  610,  610,
      610,    6,    2,  610,  610,  610,  610,  610,   36,   44,
      610,  610,   28,   30,  610,  610,  610,   42,  610,  610,
      610,   18,   22,   23,   21,   21,   21,   21,   21,   20,

       21,   21,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,   78,  610,  610,  610,  610,  610,
      610,  610,  610,  119,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  144,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  190,  182,  200,
      198,  186,  184,  194,  188,  192,  164,  160,  168,  166,
      154,  162,  158,  156,  610,  610,  610,  152,  610,  610,
      610,  610,  610,  610,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  610,

      215,  610,  218,  211,  210,  610,  610,  610,  610,  610,
      610,  610,  610,  485,  610,  610,  610,  610,  610,  285,
      610,  610,  291,  610,  610,  610,  610,  299,  610,  610,
      610,  610,  331,  610,  610,  610,  301,  610,  610,  610,
      610,  610,  610,  610,  323,  610,  295,  319,  317,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  351,
      610,  610,  357,  610,  610,  610,  610,  343,  610,  339,
      337,  610,  610,  610,  610,  610,  363,  610,  610,  377,
      610,  610,  610,  610,  373,  610,  610,  391,  392,  390,
      390,  390,  390,  390,  390,  390,  385,  390,  390,  245,

      610,  269,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  229,  610,  233,  610,  237,  610,  610,  610,
      235,  610,  610,  610,  610,  610,  610,  610,  610,  257,
      610,  610,  610,  610,  610,  610,  610,  273,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  445,  610,  610,  610,  610,  416,  610,  610,  443,
      610,  410,  610,  610,  610,  226,  225,  454,  455,  456,
      610,  610,  610,  610,  453,  610,  610,  474,  610,  472,
      610,  610,  610,  610,  610,  462,  610,  610,  480,  481,
      479,  479,  479,  479,  479,  479,  479,  479,  400,  401,

      399,  399,  399,  399,  399,  399,  399,  399,  399,    0,
        0,  563,  552,  545,  565,    0,  568,  554,  556,    0,
      550,  539,    0,  561,    0,  541,  570,    0,  574,  548,
        0,  576,  543,  558,    0,    0,    0,    0,    0,    0,
        0,  611,  612,  610,  610,  610,  610,  610,  610,    0,
        0,    0,    0,    0,    0,    0,  530,  528,  610,  610,
      610,  610,  610,    0,    0,    0,    0,    0,    0,  567,
        0,    0,    0,    0,    0,    0,    0,  573,  547,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  610,  610,  610,  610,  610,  610,  610,    0,    0,

        0,    0,    0,    0,    0,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  520,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  610,  610,  610,
       16,   14,  610,  610,    4,  610,  610,  610,   40,  610,
      610,  610,   32,  610,  610,  610,  610,  610,  610,   21,
       21,   19,   19,   21,   21,   21,   21,   21,  610,  610,
      610,  610,   64,   99,  136,  142,  610,  610,  610,  107,
      610,  610,  610,  610,   84,   89,  610,  610,  610,  610,
       82,   80,  610,  610,  610,  610,  610,  610,  610,   86,

      610,   91,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,   56,
      610,  610,   66,   68,  610,  610,  610,  610,   88,   93,
      610,  201,  610,  610,  176,  174,  180,  178,  172,  196,
      610,  610,  150,  610,  610,  610,  203,  610,  610,  227,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  610,  216,  610,  610,  610,  610,
      610,  610,  610,  610,  483,  610,  610,  289,  610,  287,
      283,  610,  610,  311,  610,  610,  610,  325,  335,  333,
      327,  329,  610,  610,  610,  610,  610,  309,  610,  307,

      305,  315,  610,  610,  610,  610,  610,  610,  610,  345,
      355,  353,  347,  349,  610,  610,  610,  361,  610,  610,
      610,  610,  359,  610,  610,  365,  367,  610,  375,  610,
      610,  610,  610,  381,  610,  390,  390,  390,  390,  390,
      390,  390,  389,  390,  390,  610,  610,  610,  610,  610,
      610,  610,  610,  271,  610,  610,  610,  610,  239,  610,
      610,  231,  610,  610,  610,  610,  610,  610,  610,  263,
      261,  259,  610,  610,  610,  610,  610,  279,  610,  610,
      281,  610,  275,  610,  610,  610,  430,  610,  413,  610,
      610,  406,  424,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  418,  610,  610,  610,  432,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  464,
      610,  470,  610,  460,  610,  468,  479,  479,  479,  479,
      479,  479,  479,  476,  477,  399,  399,  399,  399,  399,
      399,  399,  396,  399,  397,    0,    0,    0,    0,    0,
        0,  567,    0,    0,    0,    0,    0,    0,    0,  573,
      547,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  610,  610,  610,  610,  610,  610,  610,
        0,    0,    0,    0,    0,    0,    0,  610,  610,  610,
      610,  610,  534,    0,    0,    0,    0,    0,    0,    0,

      555,    0,    0,    0,    0,  569,    0,    0,    0,    0,
      557,    0,  595,    0,    0,    0,  527,    0,    0,    0,
        0,    0,  610,  610,  610,  610,  610,  610,  610,    0,
        0,    0,    0,    0,    0,    0,    0,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  522,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  498,  503,  504,  505,  524,  524,  524,  524,  524,
      524,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,   38,  610,  610,  610,  610,   21,   21,
       21,   21,   21,   21,   21,  610,  132,  134,  610,  610,

      610,  610,  610,  610,  610,  610,  610,  610,  109,  113,
      610,  111,  610,  610,  610,  610,  610,  610,  610,  610,
       72,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  124,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  205,  610,  170,  610,  610,  610,  610,
      146,  148,  207,  610,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
      217,  610,  495,  610,  497,  487,  491,  489,  493,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      321,  610,  313,  610,  610,  610,  610,  610,  610,  610,
      341,  610,  610,  610,  610,  379,  610,  610,  610,  610,
      390,  390,  390,  390,  390,  390,  390,  390,  390,  247,
      251,  249,  610,  610,  610,  610,  610,  610,  265,  610,
      610,  610,  610,  610,  610,  610,  243,  610,  610,  610,
      267,  610,  253,  610,  610,  610,  610,  610,  610,  610,
      277,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  420,  610,  610,
      411,  610,  610,  610,  439,  610,  610,  610,  610,  610,

      610,  610,  449,  610,  451,  610,  457,  610,  610,  466,
      610,  479,  479,  479,  479,  479,  479,  479,  399,  399,
      399,  399,  399,  399,  399,  399,    0,    0,    0,    0,
        0,    0,    0,  555,    0,    0,    0,    0,  569,    0,
        0,    0,    0,  557,    0,  595,    0,    0,    0,  527,
        0,    0,    0,    0,    0,  610,  610,  610,  610,  610,
      610,  610,    0,    0,    0,    0,    0,    0,    0,    0,
      610,  610,  610,  610,  536,    0,  562,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  610,

      610,  610,  610,  610,  610,  610,  610,    0,    0,    0,
        0,    0,    0,    0,    0,  524,  524,  524,  511,  524,
      524,  524,  524,  524,  524,  524,  524,  508,  521,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  506,
      501,  510,  524,  499,  524,  524,  524,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,   33,  610,
      610,  610,  610,   21,   21,   21,   21,   21,   21,   21,
       21,  610,  610,  610,  610,   60,   62,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  115,  610,
      610,  140,  610,  610,  610,  610,  610,   76,   74,  610,

      610,   97,  610,  610,  610,   50,  610,  610,  610,  610,
      128,  126,  123,  130,  610,  117,  610,  127,  125,  122,
      129,  610,  610,  610,   58,  610,  610,  610,  610,  610,
      610,  138,  610,  610,  610,  610,  610,  610,  610,  610,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  227,  227,  227,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  390,  390,  390,  390,  390,  390,  390,  390,  387,
      390,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  255,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      404,  610,  610,  610,  610,  458,  610,  610,  610,  479,
      479,  479,  479,  479,  479,  479,  479,  399,  399,  399,
      399,  399,  399,  399,  399,  398,    0,  562,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      610,  610,  610,  610,  610,  610,  610,  610,    0,    0,
        0,    0,    0,    0,    0,    0,  531,  610,  610,  529,
      535,    0,    0,    0,  564,    0,    0,    0,    0,    0,
        0,    0,    0,  546,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  610,  610,  610,  610,  610,
      610,  610,  610,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  524,  524,  524,  524,  524,  524,  524,  518,
      514,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  507,  524,  524,  519,  515,

      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,   21,   21,   21,   21,   21,
       21,   21,   21,  610,  610,  610,  610,  610,  610,  103,
      610,  101,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,   54,   52,   48,   46,  610,  121,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,  610,  610,  610,  297,  296,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  390,  390,  390,
      390,  390,  390,  390,  390,  390,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  426,  428,  610,  610,  610,  610,  610,  610,  437,
      435,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      441,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,  610,  610,  479,  479,  479,  479,  479,
      479,  479,  479,  399,  399,  399,  399,  399,  399,  399,
      399,    0,    0,    0,  564,    0,    0,    0,    0,    0,
        0,    0,    0,  546,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  610,  610,  610,  610,  610,
      610,  610,  610,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  532,  533,    0,    0,    0,    0,    0,    0,
      538,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  597,    0,  610,
      610,  610,  610,  610,  610,  610,  610,    0,    0,    0,

        0,    0,    0,    0,    0,    0,  524,  524,  524,  524,
      524,  516,  512,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  500,  517,  513,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,   21,   21,   21,   21,   21,   21,
       21,   21,  610,  610,  610,  610,  610,  610,  105,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  227,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  390,  390,  390,  390,  390,  390,  390,  390,  390,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  394,  610,  610,  610,  610,

      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  479,  479,  479,  479,  479,
      479,  479,  479,  399,  399,  399,  399,  399,  399,  399,
      399,    0,    0,    0,    0,    0,    0,  538,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  597,    0,  610,  610,  610,  610,
      610,  610,  610,  610,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  551,  544,    0,    0,  549,  560,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,  610,  610,  610,  610,  610,
      610,  610,  610,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,   21,   21,   21,   21,   21,
       21,   21,   21,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,   95,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  374,  610,  610,  610,
      610,  368,  610,  390,  390,  390,  390,  390,  390,  390,
      390,  390,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  459,  610,  610,  479,  479,  479,  479,
      479,  479,  479,  479,  399,  399,  399,  399,  399,  399,
      399,  399,    0,  551,  544,    0,    0,  549,  560,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  610,  610,  610,  610,  610,  610,
      610,  610,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  609,    0,  566,    0,  540,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,  607,    0,
        0,  610,  610,  610,  610,  610,  610,  610,  610,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  610,  610,  610,  610,
      610,  610,  610,   11,  610,  610,  610,  610,  610,  610,
      610,  610,  610,   21,   21,   21,   21,   21,   21,   21,
       21,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  390,  390,  390,  390,
      390,  390,  390,  390,  390,  610,  610,  610,  610,  610,

      610,  610,  610,  248,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  479,  479,
      479,  479,  479,  479,  479,  479,  399,  399,  399,  399,
      399,  399,  399,  399,  609,    0,  566,    0,  540,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  607,    0,    0,  610,  610,  610,  610,  610,  610,
      610,  610,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,  571,    0,  575,    0,    0,    0,  601,
      600,    0,    0,  606,    0,    0,    0,    0,  610,  610,
      610,  610,  610,  610,  610,  610,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,   21,
       21,   21,   21,   21,   21,   21,   21,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  106,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  227,  227,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  227,  227,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  370,  610,  610,  390,  390,  390,  390,  390,

      390,  390,  390,  390,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  254,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  422,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  431,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  479,  479,  479,  479,
      479,  479,  479,  479,  399,  399,  399,  399,  399,  399,
      399,  399,    0,    0,  571,    0,  575,    0,    0,    0,
      601,  600,    0,    0,  606,    0,    0,    0,    0,  610,
      610,  610,  610,  610,  610,  610,  610,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  605,  606,  608,    0,    0,  598,
      579,  610,  610,  610,  610,  610,  610,  610,  610,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,   21,   21,   21,   21,   21,   21,   21,   21,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

       71,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,   69,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  227,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  390,  390,

      390,  390,  390,  390,  390,  390,  390,  610,  610,  610,
      610,  610,  610,  250,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  407,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  446,  448,  610,  610,
      610,  610,  610,  610,  610,  610,  479,  479,  479,  479,
      479,  479,  479,  479,  399,  399,  399,  399,  399,  399,
      399,  399,    0,    0,    0,    0,    0,    0,    0,    0,
      605,  606,  608,    0,    0,  598,  579,  610,  610,  610,
      610,  610,  610,  610,  610,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,  572,    0,    0,    0,
        0,    0,    0,  610,  610,  610,  610,  610,  610,  610,
      583,  588,    0,    0,    0,    0,    0,    0,    0,    0,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,   21,   21,   21,   21,   21,   21,   21,
       21,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,   49,  610,  610,  610,

      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  364,  366,  610,  610,  610,  610,  390,  390,
      390,  390,  390,  390,  390,  390,  390,  610,  610,  610,

      610,  610,  610,  610,  610,  610,  232,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  438,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  479,  479,  479,  479,  479,  479,  479,
      479,  399,  399,  399,  399,  399,  399,  399,  399,    0,
        0,  572,    0,    0,    0,    0,    0,    0,  610,  610,
      610,  610,  610,  610,  610,  583,  588,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  610,  610,  610,  610,  610,  610,  585,

        0,    0,    0,    0,    0,    0,    0,  592,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,   25,
      610,   21,   21,   21,   21,   21,   21,   21,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  139,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  143,  137,  610,  610,  610,  610,  610,
      610,  610,  610,  151,  610,  610,  610,  610,  227,  227,

      227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  610,  610,  610,  610,  610,  484,  610,
      610,  610,  610,  610,  610,  610,  298,  324,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  344,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  390,  390,  390,  390,  390,  390,  390,
      390,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  234,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,  610,  409,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  479,  479,  479,  479,  479,
      479,  479,  399,  399,  399,  399,  399,  399,  399,    0,
        0,    0,    0,    0,    0,    0,    0,  610,  610,  610,
      610,  610,  610,  585,    0,    0,    0,    0,    0,    0,
        0,  592,  553,  559,    0,    0,    0,    0,  604,    0,
      596,  577,  580,  610,  610,  578,  584,    0,    0,    0,
        0,    0,    0,  594,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  610,    9,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,  610,   21,   21,   21,   21,   21,   21,
      610,  610,  610,  610,  610,  610,  610,  610,   98,  610,
      610,  610,  610,  610,  610,  610,  610,  610,   77,   75,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  227,  227,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  330,  610,  610,  610,  610,  304,  610,  610,

      610,  610,  610,  610,  610,  610,  610,  610,  610,  350,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  378,
      610,  610,  390,  390,  390,  390,  390,  390,  390,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  236,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  479,  479,  479,  479,  479,  479,  399,  399,
      399,  399,  399,  399,  553,  559,    0,    0,    0,    0,
      604,    0,  596,  577,  580,  610,  610,  578,  584,    0,

        0,    0,    0,    0,    0,  594,  542,    0,  603,  599,
      582,  581,  586,  589,    0,    0,  587,  593,  524,  524,
      524,  524,  524,  524,  524,  524,  610,  610,  610,  610,
        5,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,   21,   21,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,   53,  610,  610,  610,
      610,  610,  118,  610,  610,   67,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  227,  227,  227,

      227,  227,  227,  227,  227,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  302,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  390,  390,  383,
      610,  610,  610,  610,  610,  264,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  479,  479,  399,  399,  542,    0,  603,

      599,  582,  581,  586,  589,    0,    0,  587,  593,  602,
      591,  590,  524,  524,  610,  610,  610,  610,    1,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,   73,  610,  610,
      610,  610,  610,  610,  610,  610,   57,  610,  610,  610,
      610,  610,  610,  189,  181,  610,  610,  610,  610,  183,
      193,  610,  610,  610,  610,  610,  610,  610,  610,  227,
      227,  610,  610,  486,  490,  488,  492,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  314,  306,  610,  610,  610,  294,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  376,  610,  610,  610,  610,  610,  252,  610,  610,
      610,  610,  242,  240,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      442,  610,  610,  610,  610,  610,  610,  224,  452,  610,
      610,  610,  610,  610,  610,  467,  602,  591,  590,  610,
      610,  610,  610,  610,   35,  610,  610,  610,  610,  610,
      610,  610,   17,  610,  610,  610,  610,   61,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,  610,   51,  610,  610,  116,  610,   65,
      610,  610,  610,  610,  610,  610,  610,  195,  185,  187,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  284,
      610,  610,  610,  610,  610,  328,  326,  300,  322,  610,
      610,  316,  610,  610,  610,  610,  348,  346,  610,  342,
      610,  610,  336,  610,  610,  610,  372,  610,  610,  610,
      246,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  272,  610,  610,  610,  610,  610,  610,
      444,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,  610,  610,  610,  610,  610,   39,  610,
       27,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  100,  135,  610,  610,  610,  610,  110,  610,
      610,   81,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  202,  610,  610,  199,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  204,  610,
      610,  610,  610,  610,  610,  610,  610,  290,  610,  610,
      610,  308,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  228,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  429,  610,

      610,  610,  610,  610,  610,  417,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,   29,  610,  610,  610,  610,  610,  610,  610,
       59,  610,  610,  610,  108,  610,  114,  610,  610,   79,
      610,  610,  610,   47,  610,  610,  610,  610,  206,  610,
      197,  191,  163,  159,  610,  610,  610,  161,  157,  610,
      149,  610,  610,  208,  610,  610,  610,  610,  610,  610,
      610,  610,  334,  332,  610,  610,  610,  354,  352,  610,
      610,  610,  358,  610,  362,  380,  610,  268,  610,  238,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,   13,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  112,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  153,
      155,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  318,  610,  312,  610,  610,  338,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  405,  610,  610,  610,  610,  415,  610,  610,
      403,  610,  610,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  610,   43,  610,   41,  610,  610,  610,  610,
      104,  610,  610,  610,  610,  610,  610,   45,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  167,  610,  610,
      610,  610,  610,  482,  292,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  258,
      610,  610,  280,  610,  610,  610,  610,  610,  610,  610,
      610,  414,  610,  610,  473,  471,  610,  610,  469,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  102,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  175,
      610,  173,  610,  610,  610,  165,  610,  610,  610,  496,

      610,  610,  610,  610,  320,  610,  610,  340,  610,  610,
      610,  610,  262,  610,  610,  278,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  465,  461,
      610,  610,    3,   31,  610,  610,  610,  610,   63,  141,
       83,  610,  610,  610,  610,  610,   87,  610,  610,  610,
      610,  171,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  230,  610,  610,  266,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,   37,  610,  610,  610,  610,  610,  610,  610,
       92,  610,  179,  610,  610,  610,  610,  610,  610,  610,

      610,  610,  360,  610,  610,  256,  260,  274,  610,  610,
      610,  412,  421,  610,  610,  610,  610,  610,  610,  463,
      610,  610,  610,  610,  610,  610,  610,   85,  610,  610,
      610,  177,  610,  610,  610,  610,  286,  610,  610,  610,
      244,  610,  610,  610,  610,  610,  610,  610,  610,  440,
      610,    7,  610,  610,  610,  610,  120,  610,   90,  610,
      610,  145,  147,  494,  610,  610,  610,  610,  610,  610,
      610,  610,  423,  610,  610,  610,  450,  610,  610,  610,
      133,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,   55,

      610,  288,  282,  610,  610,  270,  610,  610,  610,  610,
      610,  419,   15,  610,  610,  610,  610,  610,  356,  610,
      610,  610,  610,  610,   34,  131,  610,  610,  610,  276,
      610,  610,  610,  610,  610,  169,  310,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      434,  610,  610,  427,  610,  610,  425,  610,   96,  436,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,   94,    0
    } ;

static yyconst flex_int32_t yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    1,    4,    5,    1,    1,    1,    6,    1,
        1,    7,    8,    9,   10,   11,   12,   13,   14,   15,
       16,   17,   18,   19,   20,   19,   19,   21,   22,    1,
       23,    1,    1,    1,   24,   25,   26,   27,   28,   29,
       30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
       40,   41,   42,   43,   44,   33,   45,   46,   47,   33,
        1,    1,    1,    1,   48,    1,   49,   50,   51,   52,

       53,   54,   55,   56,   57,   58,   59,   60,   61,   62,
       63,   64,   65,   66,   67,   68,   69,   70,   71,   72,
       73,   74,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,   75,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static yyconst flex_int32_t yy_meta[76] =
    {   0,
        1,    1,    2,    1,    3,    1,    1,    1,    1,    3,
        3,    3,    4,    4,    4,    4,    4,    4,    4,    4,
        1,    1,    1,    4,    4,    4,    4,    4,    4,    4,
        4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
        4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
        4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
        4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
        4,    4,    4,    4,    1
    } ;

static yyconst flex_int16_t yy_base[6295] =
    {   0,
        0,   75,  150,    0,    0,    0,    0,    7,    5,   53,
        3,   45,  225,    0,    0,    0,  252,  271,    0,    0,
        0,    0,   59,   68,  338,  413,  488,    0,  563,  638,
       78,   79,  312,  315,  334,  343,  387,  397,  341,  393,
      713,    0,  415,  548,  553,  558,  613,  635, 9484, 9483,
       52,  318,   81,  389,  788,    0,  863,    0,  938, 1013,
     1036, 1041, 9550, 9553, 9553, 9553, 9526,  615, 1108,  689,
      974, 9553, 9553, 9553,    0, 9510, 9509, 9520,    0, 9517,
     1025, 9553, 9553, 9553,    0, 9521,  982, 9553,    0,    0,
      992, 1058, 9553, 9553, 9553,   23,  582, 1102, 1143, 1151,

     1168, 1159,  318, 1036, 1172, 1176,  299, 1194, 1198, 1206,
     1214, 1222,   39,  412, 9476,   85,    1,   41,  337,  419,
      916,    2,  408,  349,  418, 9553, 1231, 1251, 1265, 1275,
        0, 9504, 9503,  399, 9514, 1068, 9511,  565,  559,  266,
     1237,  424,   49, 9489,  263, 1249, 1257,  539,  614,  630,
      642,  997, 1029, 1013,  321,    0,    0, 1315, 1325,   35,
     1341, 1344, 1226, 1352, 1230, 1341, 9553, 9553, 9553, 9514,
     1378,    0, 1388, 1398, 9553, 9553, 9553,    0, 9498,  572,
     9497,  562, 1390, 9508,    3, 1101, 1026, 1403, 1018, 9553,
     1094,    0, 9553,    0, 9510, 1440,    0, 1450, 1460, 9530,

     9553, 9529,    0, 9492, 9491, 9502,    6, 9499, 1408,  539,
     1034,  603,  640,  377,  899, 1316,   84,  916,  912, 1067,
     1162, 1084, 1375, 1256, 1033,  618, 9455, 1251,  997, 1432,
     1021, 1328, 1251, 1102, 1433,  629, 9553, 1488, 1496, 1506,
     1516, 1526, 1536, 1546,    0, 9487, 9486, 9497,  449, 9494,
     9464, 9457, 9466, 9465,  902,  568, 1191, 1307, 9451, 1518,
     1193, 1080, 1518, 1526,   10,  991, 9463,  907, 1299, 1110,
      914, 1160, 1144, 1523, 1148, 1133, 1167, 1372, 1537, 9456,
     1223, 9451, 1319, 1546, 1373, 9553, 1602, 1610, 1620, 1630,
     9553,    0, 9475, 9474, 9485, 1235, 9482, 9446, 9440, 9458,

     9553, 1638, 1646, 1656, 1666,    0, 9468, 9467, 9478, 1362,
     9475, 9439, 9444, 9447, 9496, 9495, 9553, 9494,  364, 1675,
     1694, 1746, 1764, 9493, 9492, 9491, 1784, 1859, 9455, 1446,
     1424, 1275, 1794, 9553, 1799, 9432, 9428, 9439, 1434, 9436,
     9463, 1825, 9553, 1844, 1343, 1114, 1572, 9460, 1455, 9458,
     1399, 1283, 9453, 1549, 9440,    7, 1692, 9420, 9425, 9418,
     9417, 9416, 9429, 1859, 1872, 1896,    0, 9441, 9439, 9450,
     9437, 9438, 9426, 9453, 9432, 9431, 9442, 1575, 9439,    0,
     1904, 1922, 1932, 1729, 1817, 1820, 1920, 1948, 1951, 1959,
     1967, 1975, 1978, 1986, 1989, 2001, 9448, 9427, 9426, 9437,

     1663, 9434, 2004, 2012, 2015, 2026, 2037, 2040, 2048, 2051,
     2060, 2070, 9400, 9392, 9406, 9398, 9401, 9402, 1427, 9402,
     9393, 9381, 9385, 9383, 9389,    0, 9392, 9386, 9380, 9395,
     9380, 9394, 9380, 1683, 9380, 9372, 9391, 9373, 9381, 9377,
        0, 9374, 9381, 2090, 2108, 2118, 2128,    0, 9398, 9396,
     1456, 9407, 9394, 1529, 9395, 9383, 9364, 1552, 9375, 9361,
     9361, 9357, 9374, 9365, 1906, 1383, 9354, 9360, 9347, 9356,
     9366, 9345, 9348, 9363, 9351, 9361, 9343, 9359, 9339, 1648,
     9357, 1649, 9348, 9339, 9342, 1370, 1787, 9355, 9337, 9341,
     1670, 1508, 9329, 9336, 9344, 9337, 9329, 2100, 2108, 9328,

     9334, 9331, 9341, 9322, 9324, 9323, 9325, 1673,    0, 2164,
     2174, 2184, 2073, 2200, 2081, 2203, 2211, 2214, 2222, 9370,
     9349, 9348, 9359, 1731, 9356, 1712,    0, 1719,    0, 1707,
     1732, 1800, 9381, 9378, 9375, 9378, 9328, 9315, 9305, 9325,
     9314, 9317, 9316, 9321, 9305, 9317, 9307,    0, 9317, 9310,
     9302, 9298, 9313, 9297, 9301, 9295, 9294, 9292, 9291, 9301,
     9303, 2179, 9302, 9287, 9286, 1533, 9296, 9290, 1641, 9294,
     9283, 9281, 9279, 1676, 9285, 9279,    0, 9280, 9286, 1299,
     9289, 2188, 9288, 9278, 9272, 9271, 9273, 9276, 9269, 9267,
     1702, 9267, 9268, 9278, 9273, 9267, 9264, 1751, 9263, 9258,

     9253, 9269, 9261,    0, 9255,    0, 9260, 9260, 2256, 2264,
     2274, 2284, 2294,    0, 9283, 9281, 9292, 9279, 9280, 9268,
     9258, 9241, 9259, 9252, 9257, 9240, 9240, 9249, 9235, 9236,
     9249, 9239, 9234, 9251, 9227, 9234, 9235, 1791, 9232, 9234,
     9234, 9243, 1836, 9228, 9234, 9227, 9240, 1877, 9224, 9236,
     9229, 9233, 9231, 9226, 9216, 9214, 9223, 1361, 9226, 9225,
     9210, 9221, 9226, 1471, 9212, 9220, 9219, 9219, 9213, 9203,
     9204, 9201, 9200, 9199, 9199, 9201, 9197, 1707, 9195, 9199,
        0, 9193, 9198, 9199, 9204, 9191, 9186, 1960,    0, 9185,
     1895, 9186, 9184, 1742, 9180, 9196, 9197, 9181, 9193, 1786,

     9191, 9180, 9171, 9180, 2302, 2310, 2320, 2330,    0, 9205,
     9203, 9214, 9201, 9202, 9190,    0, 9172, 9168, 2338, 2346,
     2356, 2366,    0, 9197, 9195, 9206, 9193, 9194, 9182, 9165,
     9171, 9153, 9221, 9553, 1831, 2375, 9220, 9553, 2394, 2054,
     2031, 2214, 1902, 2215, 1821, 2073, 1992, 1088, 2074, 1598,
     2015, 2384, 1965, 2038, 2004, 2005, 2016, 2051, 2397, 2417,
     2446, 9184, 1857, 1861, 1460, 1955, 1763, 1983, 2098, 2127,
     2169, 1900, 2400, 2085, 2456, 9161, 9158, 9169, 9156, 9157,
     9144, 9187, 2150, 9182, 9171, 9180, 9174, 9167, 9168, 9553,
     9176, 9172, 9553, 9169, 9163, 9553, 9180, 9553, 9161, 2128,

     9553, 9159, 9158, 9553, 9553, 9168, 9158, 9132, 1282, 9147,
     9125, 2155, 9129, 2464, 2474, 9158, 9150, 9160, 9161, 2138,
     9147, 9172, 9152, 9150, 9161, 9148, 9149, 9137, 2482, 2492,
     2508, 2253, 2396, 2436, 2516, 2519, 2527, 2537, 2540, 2548,
     2551, 2561, 9165, 9145, 9143, 9154, 9141, 9142, 9130, 2569,
     2572, 2580, 2588, 2592, 2601, 2604, 2612, 2616, 2620, 2631,
        0, 9112, 9125, 9110, 9118,    0, 9104, 9122, 9105, 9114,
     9119,    0,    0, 9116, 9103, 9113, 9100, 9103,    0,    0,
     9093, 9093,    0,    0, 9105, 9101, 9091,    0, 9095, 9102,
     9086,    0, 2631, 2643, 9117, 9109, 2370, 9119, 9120,    0,

     2227, 9106, 9088, 9095, 9094, 9097, 9093, 9079, 9089, 9075,
     9076, 1944, 9071, 9074, 2176, 9086, 9085, 9066, 9066, 9119,
     9080, 2207, 9078, 9071, 2618, 2394, 9063, 9074, 9061, 9059,
     9064, 2174, 9075, 2467, 9062, 2336, 9073, 9067, 9053, 9055,
     2148, 9067, 2079, 9052, 9056, 9055, 9061,    0, 9047, 9064,
     9060, 9059, 9095, 9048, 9053, 9046, 2629,    0,    0,    0,
     9089,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 9040, 9040, 9034,    0, 9048, 9043,
     9042, 9038, 9043, 9028, 2679, 2689, 2705, 2708, 2716, 2719,
     2728, 2742, 9078, 9058, 9056, 9067, 9054, 9055, 9043, 2200,

        0, 2515,    0, 9553, 9553, 9029, 9026, 9038, 9031, 2359,
     9033, 9019, 9015,    0, 9033, 9026, 9026, 9010, 9014,    0,
     9023, 9026,    0, 9017, 9022, 9009, 9018, 9021, 9008, 9002,
     9001, 9004,    0, 9003, 8999, 9007,    0, 9003, 2373, 8995,
     9009, 8998, 8992, 8991,    0, 8988,    0,    0,    0, 9005,
     9003,   58,   80,  256,  271,  350,  616,  646,  942,    0,
      975, 1095,    0, 1481, 1547, 1562, 1572,    0, 1600,    0,
        0, 1653, 1756, 1842, 1871, 1929,    0, 1960, 1981, 2126,
     2021, 2066, 2192, 2214,    0, 2213, 2233, 2748, 2758, 2270,
     2289, 2310, 2338, 2605, 2362, 2366,    0, 2368, 2387, 2614,

     2380,    0, 2393, 2402, 2423, 2441, 2449, 2506, 2465, 2477,
     2469, 2498,    0, 2483,    0, 2487,    0, 2488, 2504, 2503,
        0, 2514, 2521, 2520, 2527, 2521, 2535, 2546, 2553, 2601,
     2560, 2546, 2551, 2551, 2556, 2587, 2621,    0, 2592, 2590,
     2617, 2611, 2608, 2617, 2632, 2623, 2641, 2635, 2660, 2661,
     2666,    0, 2663, 2668, 2659, 2684,    0, 2677, 2680, 2696,
     2683,    0, 2669, 2695, 2688, 2698,    0,    0,    0,    0,
     2697, 2695, 2702, 2715, 2762, 2714, 2727,    0, 2716,    0,
     2721, 2733, 2725, 2725, 2721,    0, 2723, 2730, 2778, 2794,
     2763, 2757, 2769, 2772, 2787, 2760, 2740, 2754, 2807, 2817,

     2781, 2775, 2797, 2808, 2811, 2797, 2788, 2782, 2777, 2843,
     2845, 2846, 2847, 2848, 2849, 2850, 2851, 2853, 2855, 2856,
     2854, 2857, 2858, 2859, 2860, 2861, 2863, 2865, 2864, 2866,
     2869, 2867, 2870, 2871, 2872, 2873, 2874, 2876, 2878, 2879,
     2880, 2901, 2939, 2852, 2858, 2870, 2868, 2895, 2893, 2882,
     2925, 2904, 2922, 2908, 2929, 2919, 2955,    0, 2829, 2867,
     2879, 2910, 2867, 2907, 2908, 2915, 2909, 2908, 2936, 2934,
     2933, 2949, 2950, 2948, 2953, 2955, 2958, 9553, 2944, 2953,
     2949, 2962, 2933, 2933, 2937, 2989, 2927, 2933, 2925, 2946,
     2954, 2959, 2960, 2961, 2972, 2955, 2975, 2956, 2957, 2971,

     2965, 2977, 2980, 2983, 2970, 2972, 3011, 3014, 3022, 3025,
     3033, 3036, 3045, 3048, 3056, 3059, 3067, 3070, 3081, 3090,
     2969, 2982, 2977, 2996, 2999, 3056, 2988, 3093, 3103, 3106,
     3116, 3130, 3133, 3141, 3144, 3152, 3155, 2978, 2978, 2973,
        0,    0, 2984, 3006,    0, 2998, 3012, 3006,    0, 3026,
     3037, 3022,    0, 3042, 3033, 3038, 3059, 3058, 3043, 3081,
     3082,    0, 9553, 3085, 3096, 3079, 3106, 3086, 3063, 3086,
     3096, 3081, 3110, 3121,    0,    0, 3102, 3108, 3119,    0,
     3103, 3123, 3121, 3117,    0,    0, 3112, 3126, 3160, 3123,
        0,    0, 3118, 3132, 3131, 3120, 3135, 3125, 3133,    0,

     3142,    0, 3149, 3132, 3134, 3148, 3142, 3153, 3141, 3139,
     3140, 3142, 3158, 3152, 3147, 3157, 3152, 3156, 3159,    0,
     3163, 3164,    0,    0, 3165, 3175, 3173, 3164,    0,    0,
     3206,    0, 3176, 3180, 3162,    0,    0,    0,    0,    0,
     3161, 3161,    0, 3165, 3170, 3171,    0, 3185, 3189, 3196,
     3234, 3237, 3245, 3248, 3256, 3259, 3268, 3192, 3205, 3200,
     3219, 3222, 3249, 3211, 3234,    0, 3213, 3205, 3207, 3214,
     3270, 3274, 3231, 3243,    0, 3227, 3236,    0, 3246,    0,
        0, 3247, 3245,    0, 3249, 3231, 3242,    0,    0,    0,
        0,    0, 3252, 3253, 3255, 3243, 3256,    0, 3257,    0,

        0,    0, 3234, 3255, 3256, 3261, 3257, 3256, 3264,    0,
        0,    0,    0,    0, 3267, 3257, 3270,    0, 3262, 3247,
     3273, 3273,    0, 3269, 3253,    0,    0, 3265,    0, 3277,
     3274, 3264, 3266,    0, 3258, 3293, 3296, 3297, 3308, 3291,
     3311, 3291,    0, 3271, 3290, 3274, 3283, 3284, 3284, 3294,
     3281, 3294, 3283,    0, 3286, 3299, 3299, 3302,    0, 3294,
     3294,    0, 3293, 3307, 3309, 3296, 3312, 3301, 3294,    0,
        0,    0, 3295, 3301, 3304, 3309, 3314,    0, 3300, 3322,
        0, 3323,    0, 3319, 3307, 3326, 3323, 3304,    0, 3317,
     3326,    0, 3332, 3328, 3333, 3330, 3321, 3338, 3334, 3320,

     3334, 3324,    0, 3332, 3341, 3341, 3347, 3348, 3335, 3335,
     3336, 3341, 3333, 3353, 3353, 3340, 3346, 3342, 3361,    0,
     3352,    0, 3352,    0, 3360,    0, 3376, 3377, 3378, 3389,
     3372, 3392, 3372,    0,    0, 3383, 3384, 3385, 3396, 3379,
     3399, 3379,    0, 3379,    0, 3426, 3427, 3430, 3428, 3429,
     3431, 3432, 3433, 3434, 3435, 3437, 3438, 3440, 3445, 3436,
     3439, 3442, 3441, 3446, 3443, 3444, 3448, 3451, 3447, 3449,
     3456, 3458, 3461, 3433, 3437, 3441, 3452, 3443, 3456, 3444,
     3481, 3482, 3483, 3484, 3485, 3492, 3488, 3433, 3434, 3446,
     3430, 3452,    0, 3473, 3469, 3472, 3471, 3479, 3474, 3488,

     9553, 3480, 3478, 3479, 3481, 9553, 3486, 3503, 3484, 3501,
     9553, 3500, 9553, 3473, 3470, 3533, 9553, 3467, 3480, 3490,
     3479, 3513, 3505, 3502, 3513, 3504, 3522, 3499, 3507, 3508,
     3513, 3514, 3515, 3526, 3509, 3530, 3510, 3531, 3555, 3558,
     3566, 3569, 3577, 3585, 3596, 3600, 3616, 3624, 3633, 3636,
     3644, 3519, 3524, 3526, 3534, 3545, 3529, 3556, 3536, 3647,
     3655, 3658, 3666, 3669, 3682, 3690, 3693, 3701, 3704, 3712,
     3716, 3536, 3538, 3525, 3531, 3530, 3532, 3536, 3555, 3540,
     3550, 3546, 3566,    0, 3567, 3555, 3563, 3574, 3586, 3584,
     3653, 3589, 3607, 3585, 3597, 3594,    0,    0, 3582, 3590,

     3588, 3602, 3611, 3630, 3675, 3620, 3603, 3627,    0,    0,
     3646,    0, 3654, 3642, 3693, 3666, 3669, 3677, 3681, 3682,
        0, 3677, 3678, 3666, 3667, 3671, 3683, 3673, 3688, 3692,
     3679, 3695, 3684, 3687, 3703, 3697, 3699, 3687, 3703, 3692,
     3694,    0, 3710, 3694, 3713, 3716, 3704, 3705, 3700, 3710,
     3714, 3714, 3756,    0, 3726,    0, 3706, 3725, 3723, 3732,
        0,    0,    0, 3731, 3755, 3780, 3783, 3791, 3794, 3803,
     3818, 3826, 3744, 3749, 3751, 3759, 3770, 3754, 3780, 3761,
        0, 3747,    0, 3743,    0,    0,    0,    0,    0, 3746,
     3745, 3749, 3753, 3783, 3771, 3753, 3774, 3785, 3783, 3790,

     3773, 3782, 3792, 3779, 3780, 3785, 3802, 3785, 3790, 3785,
        0, 3801,    0, 3804, 3803, 3796, 3796, 3812, 3802, 3794,
        0, 3806, 3811, 3817, 3812,    0, 3799, 3817, 3820, 3823,
     3836, 3833, 3844, 3835, 3853, 3830, 3838, 3820, 3814,    0,
        0,    0, 3834, 3816, 3836, 3832, 3836, 3839,    0, 3841,
     3827, 3838, 3823, 3839, 3828, 3828,    0, 3843, 3844, 3841,
        0, 3833,    0, 3836, 3840, 3849, 3854, 3856, 3852, 3853,
        0, 3854, 3847, 3848, 3860, 3844, 3859, 3847, 3847, 3901,
     3867, 3850, 3851, 3871, 3850, 3855, 3874,    0, 3857, 3871,
        0, 3872, 3877, 3874,    0, 3864, 3872, 3868, 3864, 3880,

     3882, 3864,    0, 3888,    0, 3877,    0, 3883, 3891,    0,
     3891, 3904, 3901, 3912, 3903, 3921, 3898, 3906, 3912, 3909,
     3920, 3911, 3929, 3906, 3914, 3897, 3955, 3956, 3958, 3957,
     3959, 3960, 3962, 3961, 3963, 3964, 3965, 3967, 3966, 3969,
     3968, 3970, 3972, 3971, 3977, 3973, 3974, 3976, 3979, 3975,
     3980, 3981, 3982, 3983, 3987, 3960, 3972, 3981, 3979, 3965,
     3973, 3980, 4001, 3992, 4020, 4021, 4022, 4023, 4024, 4025,
     3963, 3976, 3967, 3986,    0, 4000, 9553, 4016, 4010, 4015,
     4005, 4004, 4024, 4028, 4010, 4026, 4028, 4019, 4014, 4028,
     4024, 3989, 3994, 4016, 4016, 4002, 4007, 4015, 4027, 4023,

     4024, 4034, 4035, 4028, 4029, 4036, 4051, 4052, 4044, 4042,
     4053, 4044, 4062, 4039, 4047, 4047, 4086, 4089, 4097, 4100,
     4108, 4111, 4119, 4133, 4142, 4145, 4153, 4156, 4164, 4172,
     4064, 4056, 4054, 4097, 4062, 4080, 4058, 4072, 4175, 4186,
     4194, 4197, 4205, 4208, 4216, 4219, 4227, 4047, 4049, 4077,
     4062, 4074, 4070, 4087, 4084, 4082, 4079, 4083,    0, 4102,
     4090, 4109, 4105, 4123, 4124, 4138, 4139, 4133, 4140, 4147,
     4164, 4127, 4135, 4146, 4154,    0,    0, 4165, 4163, 4169,
     4165, 4169, 4185, 4173, 4173, 4176, 4193, 4194,    0, 4196,
     4197,    0, 4198, 4198, 4198, 4185, 4178,    0,    0, 4202,

     4191, 4191, 4205, 4206, 4188,    0, 4202, 4203, 4208, 4210,
        0,    0,    0,    0, 4195,    0, 4199,    0,    0,    0,
        0, 4204, 4212, 4194,    0, 4210, 4216, 4196, 4209, 4223,
     4211,    0, 4218, 4213, 4229, 4230, 4218, 4225, 4225, 4220,
     4240, 4283, 4286, 4295, 4298, 4306, 4309, 4317, 4332, 4257,
     4249, 4246, 4295, 4248, 4266, 4251, 4259, 4240, 4255, 4243,
     4257, 4258, 4262, 4255, 4262, 4271, 4264, 4288, 4276, 4276,
     4273, 4281, 4283, 4280, 4299, 4300, 4295, 4295, 4285, 4305,
     4289, 4308, 4290, 4301, 4311, 4300, 4297, 4298, 4317, 4305,
     4302, 4308, 4310, 4319, 4302, 4318, 4310, 4322, 4316, 4314,

     4322, 4331, 4332, 4341, 4342, 4335, 4336, 4343, 4358,    0,
     4339, 4320, 4332, 4335, 4343, 4339, 4327, 4334, 4333, 4334,
     4336, 4350, 4346, 4332, 4352, 4336, 4341, 4343,    0, 4352,
     4344, 4335, 4355, 4337, 4338, 4362, 4363, 4362, 4347, 4358,
     4368, 4369, 4365, 4368, 4368, 4353, 4354, 4361, 4371, 4372,
     4359, 4364, 4379, 4379, 4377, 4359, 4363, 4367, 4372, 4387,
        0, 4384, 4384, 4382, 4388,    0, 4387, 4392, 4390, 4395,
     4397, 4406, 4407, 4400, 4401, 4408, 4423, 4404, 4407, 4416,
     4417, 4410, 4411, 4419, 4434,    0, 4460, 4461, 4462, 4463,
     4464, 4465, 4466, 4467, 4468, 4469, 4470, 4472, 4471, 4473,

     4475, 4474, 4476, 4477, 4478, 4479, 4480, 4481, 4483, 4482,
     4452, 4455, 4464, 4475, 4472, 4476, 4463, 4489, 4493, 4485,
     4515, 4516, 4520, 4528, 4486, 4526,    0, 4465, 4467,    0,
        0, 4520, 4500, 4500, 9553, 4500, 4501, 4504, 4507, 4519,
     4521, 4503, 4526, 9553, 4517, 4543, 4491, 4509, 4509, 4500,
     4498, 4506, 4497, 4564, 4524, 4527, 4528, 4523, 4524, 4531,
     4532, 4547, 4534, 4535, 4531, 4532, 4541, 4542, 4535, 4536,
     4543, 4558, 4545, 4584, 4587, 4595, 4598, 4607, 4610, 4620,
     4623, 4643, 4646, 4654, 4657, 4547, 4543, 4545, 4561, 4562,
     4556, 4563, 4571, 4586, 4665, 4668, 4679, 4682, 4691, 4694,

     4559, 4562, 4558, 4579, 4570, 4586, 4575, 4590, 4580, 4588,
     4593, 4593, 4592, 4598, 4583, 4618, 4619, 4615, 4623, 4630,
     4632, 4653, 4640, 4627, 4642, 4635, 4636, 4635, 4646,    0,
     4656,    0, 4646, 4659, 4649, 4653, 4666, 4662, 4649, 4658,
     4656, 4654, 4655, 4674, 4676, 4677, 4666, 4679, 4665, 4665,
     4658, 4665,    0,    0,    0,    0, 4679,    0, 4680, 4686,
     4675, 4675, 4674, 4690, 4686, 4676, 4684, 4693, 4691, 4692,
     4680, 4685, 4695, 4702, 4700, 4710, 4751, 4754, 4762, 4765,
     4773, 4776, 4789, 4792, 4711, 4707, 4709, 4728, 4729, 4723,
     4731, 4738, 4754, 4736, 4724, 4731, 4729, 4744, 4749, 4737,

     4745, 4754, 4740, 4756, 4750, 4759,    0,    0, 4744, 4748,
     4749, 4753, 4772, 4769, 4775, 4768, 4772, 4763, 4779, 4775,
     4770, 4760, 4763, 4765, 4766, 4786, 4783, 4784, 4785, 4771,
     4787, 4792, 4794, 4777, 4795, 4779, 4797, 4805, 4806, 4801,
     4802, 4809, 4810, 4825, 4811, 4804, 4799, 4796, 4805, 4798,
     4812, 4793, 4809, 4795, 4809, 4817, 4802, 4818, 4820, 4818,
     4822, 4807, 4824, 4807, 4811, 4827, 4804, 4809, 4810, 4827,
     4814,    0,    0, 4814, 4815, 4822, 4816, 4825, 4838,    0,
        0, 4824, 4822, 4825, 4834, 4822, 4840, 4845, 4830, 4842,
        0, 4843, 4849, 4846, 4842, 4848, 4852, 4839, 4855, 4834,

     4836, 4857, 4853, 4855, 4847, 4868, 4869, 4864, 4865, 4872,
     4873, 4888, 4874, 4876, 4877, 4872, 4873, 4880, 4881, 4896,
     4882, 4924, 4925, 4926, 4927, 4928, 4929, 4932, 4930, 4931,
     4933, 4935, 4937, 4936, 4938, 4939, 4940, 4941, 4942, 4943,
     4944, 4945, 4946, 4950, 4951, 4920, 4932, 4921, 4923, 4934,
     4939, 4950, 4941, 4953, 4947, 4979, 4980, 4982, 4983, 4984,
     4986, 4988,    0,    0, 4970, 4951, 4969, 4974, 4960, 4976,
     9553, 4962, 4980, 4986, 4963, 4985, 4988, 4962, 4957, 4965,
     4956, 4958, 4966, 4967, 4957, 4973, 5027, 9553, 4998, 5005,
     5006, 4993, 4994, 5009, 5010, 4996, 4997, 4998, 5000, 5001,

     4996, 4997, 5004, 5005, 5020, 5006, 5019, 5047, 5050, 5058,
     5061, 5069, 5072, 5080, 5083, 5094, 5102, 5010, 5012, 5014,
     5016, 5017, 5025, 5034, 5058, 5044, 5105, 5113, 5116, 5038,
     5032, 5044, 5034, 5050, 5049, 5055, 5051, 5068, 5074, 5065,
     5071, 5065, 5073, 5084, 5106, 5107, 5094, 5096, 5111, 5112,
     5098, 5099, 5086, 5076, 5089, 5095, 5100, 5101,    0, 5087,
     5103, 5081, 5080, 5090, 5089, 5107, 5104, 5101, 5103, 5097,
     5108, 5095, 5096, 5111, 5109, 5107, 5118, 5121, 5122, 5114,
     5105, 5126, 5122, 5123, 5108, 5107, 5128, 5114, 5125, 5121,
     5117, 5129, 5113, 5133, 5126, 5125, 5128, 5130, 5138, 5126,

     5138, 5162, 5190, 5193, 5201, 5204, 5212, 5220, 5223, 5239,
     5153, 5155, 5157, 5159, 5160, 5168, 5177, 5192, 5183, 5162,
     5161, 5183, 5177, 5179, 5171, 5178, 5179, 5179, 5184, 5200,
     5189, 5188, 5202, 5208, 5204, 5190, 5203, 5193, 5197, 5205,
     5199, 5210, 5199, 5197, 5220, 5216, 5222, 5223, 5204, 5217,
     5210, 5209, 5206, 5221, 5218, 5215, 5216, 5221, 5215, 5231,
     5234, 5258, 5259, 5246, 5247, 5262, 5263, 5249, 5250, 5231,
     5244, 5243, 5249, 5229, 5235, 5238, 5239, 5245, 5235, 5238,
     5256, 5247, 5243, 5252, 5257, 5261, 5245, 5257, 5252, 5263,
     5247, 5263, 5264, 5270, 5260,    0, 5258, 5272, 5308, 5259,

     5263, 5263, 5260, 5274, 5265, 5265, 5263, 5269, 5281, 5267,
     5280, 5269, 5270, 5271, 5290, 5271, 5278, 5290, 5289, 5279,
     5272, 5285, 5279, 5286, 5299, 5321, 5322, 5309, 5310, 5325,
     5326, 5312, 5313, 5329, 5330, 5317, 5318, 5333, 5334, 5320,
     5321, 5362, 5363, 5364, 5365, 5366, 5367, 5368, 5369, 5370,
     5372, 5371, 5373, 5374, 5375, 5376, 5377, 5378, 5379, 5380,
     5381, 5383, 5386, 5385, 5387, 5389, 5365, 5373, 5360, 5367,
     5376, 5378, 5375, 5377, 5414, 5419, 5420, 5421, 5422, 5423,
     5424, 5426, 5428, 5425, 9553, 9553, 5405, 5387, 9553, 5403,
     5398, 5402, 5399, 5417, 5422, 5383, 5391, 5382, 5387, 5391,

     5385, 5393, 5399, 5392, 5422, 5417, 5420, 5436, 5439, 5425,
     5430, 5431, 5443, 5444, 5449, 5450, 5437, 5438, 5453, 5454,
     5440, 5441, 5448, 5481, 5484, 5492, 5495, 5503, 5506, 5520,
     5523, 5455, 5460, 5462, 5456, 5457, 5473, 5481, 5467, 5469,
     5471, 5473, 5473, 5469, 5476, 5469, 5489, 5485, 5477, 5490,
     5493, 5492, 5487, 5496, 5485, 5504, 5505, 5522, 5523, 5509,
     5510, 5511, 5526, 5498, 5509, 5500, 5499, 5511, 5498, 5507,
     5501, 5507, 5521, 5508, 5506, 5509, 5509, 5513, 5519, 5517,
     5530, 5526, 5523, 5519, 5516, 5515, 5531, 5528,    0, 5519,
     5534, 5538, 5542, 5521, 5530, 5531, 5533, 5547, 5536, 5549,

     5541, 5530, 5533, 5552, 5534, 5536, 5540, 5545, 5542, 5554,
     5556, 5542, 5561, 5574, 5607, 5610, 5618, 5621, 5629, 5632,
     5646, 5649, 5581, 5586, 5588, 5582, 5583, 5599, 5607, 5593,
     5595, 5576, 5596, 5600, 5599, 5607, 5605, 5602, 5600, 5617,
     5605, 5610, 5599, 5621, 5603, 5622, 5623, 5601, 5607, 5620,
     5626, 5612, 5629, 5636, 5632, 5633, 5624, 5623, 5640, 5640,
     5620, 5645, 5642, 5649, 5645, 5651,    0, 5652, 5649, 5654,
     5647,    0, 5646, 5664, 5665, 5681, 5682, 5668, 5669, 5670,
     5682, 5663, 5668, 5669, 5650, 5659, 5654, 5668, 5667, 5668,
     5668, 5672, 5659, 5679, 5679, 5681, 5677, 5664, 5679, 5680,

     5677, 5672, 5683, 5675, 5676, 5686, 5692, 5677, 5670, 5695,
     5691, 5696, 5714, 5690, 5699, 5683, 5685, 5703, 5699, 5690,
     5688, 5698, 5703, 5694, 5705, 5699, 5703, 5693, 5699, 5697,
     5704, 5699, 5698,    0, 5703, 5707, 5726, 5727, 5743, 5744,
     5730, 5731, 5732, 5744, 5734, 5735, 5751, 5752, 5738, 5739,
     5740, 5752, 5782, 5783, 5784, 5785, 5787, 5788, 5789, 5790,
     5792, 5791, 5794, 5793, 5795, 5796, 5797, 5798, 5799, 5800,
     5801, 5805, 5803, 5802, 5769, 5771, 5782, 5787, 5773, 5780,
     5781, 5797, 5823, 5824, 5828, 5825, 5834, 5837, 5838, 5827,
     5839, 9553, 5796, 9553, 5801, 9553, 5807, 5821, 5805, 5821,

     5795, 5781, 5782, 5799, 5801, 5784, 5803, 5818, 9553, 5818,
     5843, 5831, 5832, 5834, 5836, 5837, 5838, 5851, 5847, 5849,
     5844, 5845, 5861, 5862, 5848, 5849, 5850, 5862, 5865, 5891,
     5894, 5902, 5905, 5913, 5916, 5928, 5931, 5860, 5855, 5857,
     5880, 5881, 5868, 5876, 5877, 5890, 5868, 5876, 5879, 5868,
     5873, 5877, 5878,    0, 5894, 5900, 5901, 5883, 5890, 5890,
     5905, 5892, 5900, 5915, 5918, 5919, 5920, 5921, 5922, 5934,
     5930, 5921, 5914, 5902, 5901, 5907, 5925, 5918, 5903, 5914,
     5930, 5911, 5920, 5918, 5934, 5914, 5927, 5913, 5933, 5936,
     5940, 5915, 5938, 5928, 5919, 5939, 5939, 5938, 5934, 5931,

     5930, 5935, 5947, 5949, 5953, 5955, 5944, 5948, 5945, 5935,
     5947, 5961, 5946, 5943, 5943, 5947, 5954, 5967, 5949, 5950,
     5970, 5955, 5990, 6016, 6019, 6027, 6030, 6038, 6041, 6053,
     6056, 5985, 5980, 5982, 6005, 6006, 5993, 6001, 6002, 6015,
     5997, 6006, 5995, 6009, 5994, 6006, 6022, 6009, 6007, 6026,
     6008, 6009, 6022, 6011, 6014, 6029, 6034, 6033, 6020, 6040,
     6039, 6028, 6026, 6028, 6046, 6028, 6032, 6038, 6037, 6032,
     6035, 6049, 6054, 6051, 6048, 6058, 6040, 6059, 6056, 6050,
     6055, 6049, 6048, 6051, 6047, 6070, 6076, 6077, 6078, 6079,
     6080, 6081, 6093, 6089, 6064, 6062, 6072, 6074, 6063, 6079,

     6067, 6066, 6068,    0, 6087, 6070, 6078, 6072, 6076, 6073,
     6075, 6094, 6082, 6094, 6084, 6085, 6081, 6082, 6078, 6096,
     6104, 6105, 6091, 6104, 6090, 6113, 6106, 6091, 6092, 6092,
     6098, 6106, 6102, 6102, 6094, 6100, 6104, 6118, 6107, 6119,
     6115, 6103, 6125, 6118, 6123, 6120, 6118, 6126, 6137, 6138,
     6139, 6140, 6141, 6142, 6154, 6150, 6145, 6146, 6147, 6148,
     6149, 6150, 6162, 6158, 6193, 6194, 6195, 6196, 6197, 6198,
     6199, 6200, 6201, 6202, 6203, 6204, 6205, 6206, 6207, 6208,
     6209, 6210, 6211, 6212, 6178, 6179, 6181, 6182, 6188, 6190,
     6202, 6192, 6215, 6234, 6236, 6240, 6241, 6242, 6243, 6244,

     6229, 6206, 6206, 9553, 6209, 9553, 6217, 6185, 6181, 9553,
     9553, 6188, 6206, 6237, 6197, 6209, 6265, 6228, 6241, 6242,
     6232, 6233, 6249, 6250, 6246, 6254, 6259, 6247, 6248, 6249,
     6250, 6251, 6252, 6264, 6260, 6256, 6295, 6298, 6306, 6309,
     6321, 6324, 6332, 6335, 6269, 6258, 6259, 6269, 6270, 6272,
     6279, 6291, 6287, 6272, 6271, 6271, 6286, 6273, 6300, 6294,
     6280, 6287, 6298, 6291, 6305, 6297, 6298, 6299, 6294, 6331,
     6332, 6323, 6324, 6336, 6338, 6334, 6342, 6322, 6326, 6314,
     6328, 6311, 6314, 6324, 6331, 6322, 6334,    0, 6311, 6319,
     6332, 6334, 6327, 6375, 6318, 6331, 6341, 6340, 6346, 6333,

     6348, 6329, 6342, 6325, 6348, 6338, 6354, 6350, 6353, 6357,
     6346, 6342, 6355, 6345, 6361, 6397, 6364, 6349, 6366, 6354,
     6356, 6364, 6355, 6367, 6363, 6364, 6358, 6375, 6382, 6420,
     6423, 6431, 6434, 6446, 6449, 6457, 6460, 6396, 6384, 6386,
     6394, 6395, 6397, 6404, 6416, 6412, 6399, 6402, 6406, 6413,
     6397, 6411, 6407, 6416, 6422, 6412, 6425, 6430, 6435, 6424,
     6437, 6438, 6416, 6427, 6427, 6424, 6427, 6447, 6435, 6431,
     6445, 6431, 6444, 6432, 6454, 6455, 6443, 6456, 6457, 6435,
     6446, 6445, 6455, 6445, 6456, 6445, 6465, 6467, 6454, 6468,
     6465, 6468,    0, 6467, 6460, 6490, 6491, 6481, 6483, 6495,

     6496, 6492, 6500, 6469, 6479, 6471, 6468, 6478, 6469, 6485,
     6482, 6491, 6488, 6488, 6479, 6476, 6495, 6492,    0, 6494,
     6496, 6500, 6481, 6483, 6494, 6495, 6485, 6505, 6498, 6503,
     6495,    0, 6499, 6520, 6507, 6494, 6514, 6514, 6511, 6510,
     6498, 6501,    0, 6499, 6512, 6502, 6516, 6509, 6518, 6521,
     6520, 6525, 6528, 6514, 6530, 6520, 6549, 6550, 6540, 6541,
     6553, 6554, 6550, 6558, 6557, 6558, 6548, 6549, 6561, 6562,
     6558, 6566, 6594, 6595, 6596, 6598, 6597, 6599, 6600, 6601,
     6602, 6603, 6604, 6605, 6606, 6608, 6607, 6611, 6609, 6583,
     6584, 6580, 6581, 6588, 6593, 6590, 6602, 6614, 6627, 6634,

     6638, 6639, 6640, 6642, 6644, 6632, 6614, 6616, 6612, 6625,
     6595, 6601, 6598, 6606, 9553, 6633, 9553, 6598, 6657, 9553,
     9553, 6623, 6624, 6630, 6631, 6628, 6629, 6637, 6629, 6636,
     6647, 6652, 6643, 6644, 6656, 6657, 6653, 6661,    0, 6687,
     6690, 6698, 6701, 6709, 6724, 6727, 6737, 6651, 6662, 6664,
     6661, 6662, 6675, 6683, 6679, 6687, 6657, 6662, 6675, 6665,
     6678, 6661, 6665, 6689, 6688, 6683, 6695, 6674, 6697, 6696,
     6692, 6680, 6717, 6718, 6724, 6726, 6722, 6723, 6732, 6721,
     6708, 6696, 6701, 6719, 6708, 6706, 6722, 6709, 6723, 6720,
     6722, 6727, 6709, 6711, 6716, 6711, 6761, 6733, 6726, 6724,

        0, 6730, 6718, 6719, 6740, 6721, 6737, 6743, 6730, 6740,
     6729, 6728, 6746, 6738, 6730, 6738,    0, 6734, 6782, 6743,
     6751, 6751, 6742, 6739, 6741, 6740, 6754, 6750, 6751, 6761,
     6761,    0, 6811, 6814, 6822, 6825, 6833, 6848, 6851, 6861,
     6775, 6786, 6788, 6785, 6786, 6799, 6807, 6803, 6811, 6783,
     6790, 6785, 6786, 6790, 6804, 6798, 6791, 6803, 6810, 6806,
     6821, 6807, 6818, 6802, 6807, 6816, 6817, 6827, 6829, 6830,
     6818, 6833, 6834, 6836, 6841, 6824, 6834, 6835, 6843, 6837,
     6821, 6826, 6835, 6836, 6846, 6843, 6848, 6849, 6856, 6839,
     6849, 6859, 6836, 6847, 6848, 6858, 6864, 6864, 6877, 6878,

     6884, 6885, 6881, 6882, 6890, 6879, 6867, 6859, 6876, 6872,
     6862, 6874, 6875,    0, 6865, 6882, 6864, 6869, 6885, 6867,
     6884, 6888, 6864, 6874, 6882, 6883, 6878, 6879, 6890, 6880,
     6883, 6880, 6899, 6900, 6926, 6903,    0, 6886, 6893, 6888,
     6899, 6899, 6890, 6898, 6897, 6907,    0,    0, 6913, 6896,
     6910, 6915, 6913, 6917, 6899, 6915, 6932, 6933, 6939, 6940,
     6936, 6937, 6945, 6934, 6940, 6941, 6947, 6948, 6944, 6945,
     6953, 6942, 6982, 6983, 6984, 6985, 6986, 6987, 6988, 6989,
     6990, 6993, 6991, 6992, 6995, 6996, 6997, 6964, 6966, 6973,
     6974, 6970, 6982, 6979, 6984, 7020, 7010, 7021, 7022, 7024,

     7025, 7026, 7027, 7029, 6994, 7007, 9553, 6996, 6967, 6987,
     6980, 6972, 6988, 7015, 7016, 7010, 7011, 7019, 7020, 7009,
        0, 9553, 7017, 7018, 7024, 7028, 7024, 7026, 7036, 7026,
     7064, 7067, 7075, 7078, 7088, 7091, 7099, 7112,    0, 7033,
     7034, 7041, 7049, 7045, 7047, 7061, 7050, 7032, 7052, 7056,
     7050, 7047, 7056, 7061, 7053, 7054, 7072, 7068, 7078, 7058,
     7071, 7056, 7082, 7101, 7103, 7097, 7099, 7107, 7108, 7097,
        0, 7083, 7080, 7074, 7079, 7092, 7080, 7093, 7099, 7082,
     7078, 7102, 7085, 7105, 7091, 7104, 7095, 7140, 7110, 7095,
     7103, 7112, 7114, 7107, 7113, 7117,    0, 7111, 7099, 7106,

     7103, 7122, 7108, 7112, 7110, 7125, 7120, 7117, 7160, 7125,
     7122, 7114, 7124, 7116, 7135, 7115, 7132, 7120, 7132, 7133,
     7123, 7133, 7186, 7189, 7197, 7200, 7210, 7213, 7221, 7234,
        0, 7155, 7156, 7163, 7171, 7167, 7169, 7183, 7172, 7154,
     7174, 7168, 7167, 7177, 7168, 7187, 7180, 7187, 7196, 7193,
     7183, 7194, 7189, 7179, 7180, 7191, 7192, 7207, 7193, 7194,
     7210, 7199, 7212, 7193, 7213, 7212, 7200, 7205, 7219, 7207,
     7197, 7198, 7209, 7210, 7225, 7207, 7212, 7210, 7227, 7220,
     7219, 7218,    0,    0, 7234, 7222, 7218, 7214, 7257, 7258,
     7252, 7253, 7261, 7262, 7252,    0, 7246, 7243, 7230, 7231,

     7239, 7238, 7237, 7249, 7243, 7256,    0, 7241, 7243, 7240,
     7240, 7257, 7262, 7262, 7257, 7250, 7252, 7253, 7254, 7269,
     7251, 7253, 7269, 7268, 7296, 7257, 7271, 7277, 7278, 7277,
     7273,    0, 7261, 7264, 7279, 7265, 7284, 7286, 7267, 7274,
     7270, 7285, 7277, 7310, 7311, 7305, 7306, 7314, 7315, 7304,
        0, 7317, 7318, 7312, 7313, 7321, 7322, 7311,    0, 7351,
     7352, 7353, 7354, 7355, 7356, 7357, 7358, 7359, 7333, 7334,
     7328, 7330, 7339, 7343, 7332, 7337, 7373, 7376, 7379, 7377,
     7383, 7380, 7381, 7390, 7382, 7357, 7347, 7353, 7334, 7326,
     7333, 7347, 7396, 7355, 7357, 7370, 7371, 7360, 7361,    0,

     7374, 7376, 7370, 7371, 7380, 7381, 7379, 9553, 7417, 7420,
     7428, 7431, 7439, 7442, 7455, 7404, 7405, 7400, 7408, 7416,
     7418, 7413,    0, 7390, 7390, 7390, 7402, 7415, 7395, 7421,
     7409, 7403, 7419, 7421, 7405, 7414, 7427, 7411, 7417,    0,
     7426, 7440, 7441, 7455, 7456, 7445, 7446,    0, 7428, 7431,
     7442, 7423, 7431, 7427, 7429, 7436, 7444, 7449, 7435, 7432,
     7452, 7441, 7450, 7456,    0, 7450, 7458, 7443, 7444, 7454,
     7444, 7451, 7461, 7464, 7466, 7463, 7453, 7461, 7452, 7462,
     7449, 7461, 7454,    0,    0, 7469, 7469, 7477, 7466, 7474,
     7479, 7469, 7465,    0, 7472, 7476, 7489, 7478, 7534, 7543,

     7547, 7551, 7555, 7559, 7563, 7511, 7512, 7506, 7512, 7521,
     7542, 7536,    0, 7509, 7532, 7529, 7526, 7516,    0, 7530,
     7539, 7535, 7529, 7542, 7543, 7539,    0,    0, 7527, 7528,
     7529, 7530, 7530, 7535, 7547, 7534, 7540, 7552, 7554, 7543,
     7558, 7559, 7556, 7562, 7560,    0, 7546, 7547, 7548, 7549,
     7548, 7568, 7565, 7571, 7557, 7572, 7549, 7575, 7571, 7565,
     7558, 7576, 7575, 7587, 7588, 7601, 7602, 7591, 7592,    0,
     7571, 7587, 7584, 7582, 7582, 7589, 7573, 7576, 7590, 7580,
     7578, 7584,    0, 7590, 7591, 7599, 7582, 7603, 7590, 7605,
     7606, 7588, 7606, 7589, 7595, 7599, 7588, 7610, 7613, 7614,

     7610, 7610, 7604, 7615,    0, 7616, 7622, 7614, 7617, 7622,
     7621, 7626, 7609, 7629, 7623, 7637, 7638, 7651, 7652, 7641,
     7642,    0, 7643, 7644, 7657, 7658, 7647, 7648,    0, 7688,
     7689, 7690, 7691, 7692, 7693, 7694, 7696, 7662, 7663, 7672,
     7673, 7670, 7671, 7668, 7704, 7711, 7712, 7713, 7714, 7717,
     7719, 7718, 9553, 9553, 7695, 7654, 7676, 7671, 9553, 7728,
     9553,    0,    0, 7686, 7687,    0,    0, 7690, 7691, 7705,
     7706, 7695, 7696, 9553, 7747, 7757, 7760, 7768, 7771, 7779,
     7697, 7698, 7712, 7715, 7704, 7711,    0, 7681,    0, 7708,
     7710, 7703, 7713, 7722, 7707, 7728, 7719, 7724, 7734, 7726,

     7743, 7744, 7739, 7738,    0,    0, 7754, 7755,    0,    0,
     7745, 7747, 7740, 7752, 7748, 7756, 7742, 7758,    0, 7754,
     7740, 7743, 7751, 7764, 7765, 7754, 7760, 7766,    0,    0,
     7768, 7765, 7762, 7761, 7758, 7768, 7776, 7763, 7777, 7779,
     7764, 7776, 7773, 7775, 7764, 7777, 7774, 7775, 7769, 7786,
     7789, 7790, 7791, 7773, 7793, 7793, 7786, 7779, 7800, 7796,
     7797, 7791, 7792, 7848, 7851, 7859, 7862, 7870, 7873, 7812,
     7813, 7827, 7835, 7824, 7826,    0, 7823, 7823, 7817, 7825,
     7830, 7822, 7838, 7824, 7838, 7841, 7832, 7824, 7842, 7843,
     7836, 7837,    0, 7842, 7851, 7845, 7837,    0, 7837, 7836,

     7839, 7856, 7857, 7853, 7852, 7859, 7860, 7853, 7854,    0,
     7856, 7868, 7854, 7849, 7852, 7873, 7865, 7857, 7856,    0,
     7862, 7860,    0,    0, 7885, 7886,    0,    0, 7862, 7862,
     7880, 7869, 7880, 7881, 7879, 7888, 7875, 7885,    0, 7879,
     7877, 7874, 7882, 7890, 7888, 7895, 7898, 7890, 7877, 7892,
     7901, 7898, 7886, 7896, 7903, 7892, 7888, 7905, 7895, 7893,
     7894, 7899, 7902, 7896, 7891, 7913, 7904, 7920, 7908, 7909,
     7907, 7904,    0,    0, 7931, 7932,    0,    0,    0,    0,
     7933, 7934,    0,    0, 7974, 7975, 7976, 7977, 7978, 7979,
     7980, 7982, 7983, 7949, 7950, 7951, 7952, 7953, 7954, 7993,

     7994, 7992, 7995, 7996, 7997, 7998, 9553, 7949, 9553, 9553,
        0,    0, 9553, 9553, 7961, 7964, 9553, 9553, 8002, 8005,
        0,    0, 7966, 7967,    0,    0, 7963, 7962, 7971, 7957,
        0, 7954, 7966, 7964, 7963, 7973, 7963, 7981, 7980, 7977,
     7985, 7977,    0,    0, 7974, 7988, 7985, 7983, 7976, 7996,
     7985, 7988, 7987, 7987, 7998, 7992, 8000, 7994, 8002, 8005,
     8008, 7992, 7995, 7993, 7997, 8005,    0, 8014, 8013, 7997,
     7999, 8007,    0, 8016, 8001,    0, 8022, 8003, 8015, 8022,
     8005, 8022, 8022, 8010, 8014, 8025, 8019, 8027, 8015, 8011,
     8029, 8037, 8018, 8019, 8020, 8032, 8039, 8086, 8089,    0,

        0, 8050, 8051,    0,    0, 8029, 8045, 8089, 8091, 8052,
     8055, 8046, 8062, 8043, 8049, 8050, 8061, 8051, 8052, 8068,
     8069, 8057, 8052, 8058, 8049, 8066, 8071, 8068, 8059,    0,
     8065, 8078, 8065, 8066, 8082, 8083, 8085, 8066, 8082, 8083,
     8080, 8079, 8077, 8089, 8068, 8076, 8077,    0,    0,    0,
     8096, 8082, 8086, 8081, 8100,    0, 8085, 8095, 8085, 8079,
     8091, 8086, 8106, 8107, 8103, 8089, 8102, 8098, 8104, 8099,
     8096, 8115, 8117, 8102, 8107, 8106, 8112, 8103, 8105, 8109,
     8125, 8108, 8123, 8109, 8114, 8125, 8131, 8110, 8115, 8129,
     8134, 8118, 8129,    0,    0,    0,    0, 8183, 8184, 8185,

     8186, 8152, 8153, 8189, 8190, 8191, 8192, 8193, 8194, 9553,
     9553, 9553,    0,    0, 8137, 8150, 8133, 8135,    0, 8147,
     8136, 8143, 8137, 8146, 8146, 8149, 8156, 8144, 8158, 8163,
     8145, 8146, 8158, 8160, 8157, 8170, 8166, 8168, 8155, 8154,
     8160, 8162, 8172, 8172, 8155, 8177, 8166,    0, 8174, 8183,
     8168, 8171, 8176, 8190, 8183, 8187,    0, 8168, 8191, 8195,
     8182, 8189, 8186,    0,    0, 8179, 8231, 8233, 8190,    0,
        0, 8183, 8197, 8204, 8193, 8189, 8190, 8199, 8206,    0,
        0, 8203, 8204,    0,    0,    0,    0, 8218, 8200, 8206,
     8206, 8203, 8209, 8221, 8208, 8222, 8223, 8217, 8218, 8224,

     8213,    0,    0, 8218, 8216, 8220,    0, 8230, 8222, 8233,
     8234, 8228, 8229, 8228, 8224, 8226, 8227, 8231, 8238, 8242,
     8244,    0, 8245, 8236, 8248, 8239, 8250,    0, 8240, 8255,
     8237, 8258,    0,    0, 8241, 8257, 8243, 8253, 8254, 8250,
     8265, 8252, 8253, 8263, 8265, 8252, 8255, 8251, 8254, 8259,
        0, 8275, 8255, 8260, 8278, 8260, 8277,    0, 8281, 8260,
     8278, 8279, 8273, 8270, 8272,    0, 8333, 8334, 8335, 8290,
     8273, 8273, 8269, 8276,    0, 8277, 8289, 8297, 8294, 8298,
     8301, 8297,    0, 8299, 8299, 8280, 8286,    0, 8295, 8303,
     8295, 8291, 8292, 8309, 8290, 8310, 8301, 8296, 8310, 8307,

     8305, 8305, 8303, 8322,    0, 8314, 8321,    0, 8319,    0,
     8314, 8324, 8323, 8328, 8310, 8330, 8328,    0,    0,    0,
     8321, 8331, 8334, 8335, 8336, 8318, 8338, 8337, 8325, 8334,
     8335, 8340, 8345, 8346, 8336, 8330, 8342, 8331, 8330,    0,
     8333, 8349, 8336, 8355, 8356,    0,    0,    0,    0, 8344,
     8358,    0, 8345, 8347, 8361, 8362,    0,    0, 8349,    0,
     8365, 8365,    0, 8355, 8353, 8355,    0, 8352, 8366, 8368,
        0, 8367, 8355, 8367, 8373, 8368, 8367, 8376, 8366, 8369,
     8382, 8367, 8380,    0, 8366, 8386, 8386, 8379, 8370, 8385,
        0, 8373, 8376, 8372, 8377, 8374, 8381, 8391, 8397, 8381,

     8399, 8396, 8386, 8401, 8390, 8397, 8401, 8407,    0, 8388,
        0, 8393, 8410, 8396, 8403, 8412, 8409, 8412, 8416, 8392,
     8403, 8405,    0,    0, 8402, 8413, 8417, 8404,    0, 8424,
     8425,    0, 8406, 8415, 8423, 8411, 8414, 8419, 8412, 8424,
     8422,    0, 8417, 8436,    0, 8436, 8433, 8434, 8434, 8422,
     8426, 8430, 8438, 8426, 8422, 8428, 8434, 8435,    0, 8432,
     8435, 8432, 8450, 8439, 8446, 8451, 8448,    0, 8453, 8439,
     8440,    0, 8454, 8456, 8458, 8444, 8445, 8448, 8465, 8461,
     8457, 8464, 8451, 8453, 8453, 8455, 8475, 8457,    0, 8462,
     8476, 8467, 8472, 8477, 8478, 8467, 8483, 8470, 8486, 8469,

     8468, 8475, 8481, 8477, 8479,    0, 8492, 8473, 8481, 8478,
     8482, 8486, 8498, 8496, 8487, 8493, 8491, 8503, 8505, 8490,
     8501, 8490,    0, 8503, 8496, 8497, 8508, 8493, 8494, 8512,
        0, 8493, 8513, 8509,    0, 8515,    0, 8517, 8505,    0,
     8518, 8506, 8519,    0, 8516, 8511, 8511, 8519,    0, 8528,
        0,    0,    0,    0, 8510, 8563, 8521,    0,    0, 8517,
        0, 8522, 8523,    0, 8540, 8532, 8541, 8531, 8537, 8527,
     8539, 8547,    0,    0, 8543, 8540, 8531,    0,    0, 8538,
     8531, 8548,    0, 8545,    0,    0, 8550,    0, 8539,    0,
     8543, 8537, 8550, 8560, 8556, 8542, 8562, 8545, 8542, 8561,

     8562, 8563, 8562, 8555, 8552, 8570, 8561, 8573, 8563, 8572,
     8560, 8558, 8573, 8567, 8575, 8569, 8579, 8578, 8580,    0,
     8569, 8587, 8574, 8585, 8575, 8573, 8588, 8585, 8583, 8591,
     8578, 8591,    0, 8587, 8582, 8601, 8581, 8586, 8588, 8583,
     8606, 8591, 8605, 8608, 8609, 8610, 8592, 8612, 8610,    0,
        0, 8597, 8598, 8605, 8606, 8606, 8617, 8622, 8620, 8624,
     8622,    0, 8614,    0, 8626, 8622,    0, 8617, 8627, 8610,
     8612, 8613, 8615, 8616, 8618, 8628, 8619, 8620, 8640, 8619,
     8637, 8627,    0, 8644, 8631, 8625, 8647,    0, 8636, 8644,
        0, 8650, 8646, 8647, 8652, 8634, 8648, 8643, 8652, 8640,

     8654, 8651, 8643,    0, 8661,    0, 8660, 8649, 8656, 8662,
        0, 8659, 8659, 8654, 8664, 8662, 8651,    0, 8668, 8654,
     8675, 8671, 8658, 8672, 8660, 8664, 8668,    0, 8681, 8668,
     8669, 8676, 8681,    0,    0, 8682, 8687, 8684, 8675, 8686,
     8680, 8687, 8689, 8675, 8695, 8688, 8689, 8679, 8680,    0,
     8688, 8683,    0, 8691, 8700, 8701, 8702, 8692, 8709, 8691,
     8691,    0, 8694, 8694,    0,    0, 8701, 8707,    0, 8697,
     8704, 8713, 8714, 8706, 8718, 8703, 8703, 8710, 8709,    0,
     8706, 8711, 8726, 8714, 8712, 8722, 8714, 8718, 8714,    0,
     8720,    0, 8716, 8768, 8726,    0, 8729, 8730, 8727,    0,

     8738, 8731, 8740, 8732,    0, 8737, 8742,    0, 8739, 8737,
     8743, 8736,    0, 8737, 8748,    0, 8749, 8754, 8742, 8753,
     8757, 8754, 8759, 8761, 8761, 8756, 8744, 8760,    0,    0,
     8761, 8750,    0,    0, 8763, 8750, 8761, 8768,    0,    0,
        0, 8760, 8755, 8769, 8757, 8776,    0, 8762, 8759, 8778,
     8776,    0, 8776, 8777, 8771, 8775, 8773, 8777, 8771, 8769,
     8771, 8775, 8782,    0, 8778, 8777,    0, 8780, 8771, 8796,
     8795, 8778, 8796, 8782, 8800, 8795, 8798, 8803, 8786, 8792,
     8786, 8802,    0, 8794, 8798, 8806, 8812, 8809, 8809, 8812,
        0, 8808,    0, 8817, 8816, 8817, 8816, 8802, 8804, 8804,

     8813, 8825,    0, 8813, 8808,    0,    0,    0, 8824, 8817,
     8816,    0,    0, 8827, 8820, 8829, 8828, 8832, 8817,    0,
     8818, 8834, 8825, 8827, 8833, 8830, 8839,    0, 8841, 8834,
     8833,    0, 8828, 8829, 8836, 8842,    0, 8843, 8848, 8834,
        0, 8846, 8838, 8836, 8838, 8858, 8845, 8843, 8853,    0,
     8844,    0, 8850, 8847, 8863, 8851,    0, 8854,    0, 8860,
     8863,    0,    0,    0, 8857, 8858, 8860, 8865, 8870, 8858,
     8865, 8870,    0, 8865, 8861, 8867,    0, 8879, 8882, 8872,
        0, 8865, 8870, 8875, 8881, 8882, 8885, 8876, 8873, 8878,
     8874, 8876, 8889, 8892, 8891, 8874, 8888, 8892, 8893,    0,

     8898,    0,    0, 8890, 8891,    0, 8888, 8898, 8888, 8890,
     8893,    0,    0, 8899, 8896, 8895, 8894, 8895,    0, 8897,
     8914, 8900, 8914, 8900,    0,    0, 8916, 8903, 8904,    0,
     8909, 8924, 8909, 8902, 8928,    0,    0, 8917, 8916, 8911,
     8916, 8915, 8913, 8931, 8911, 8932, 8933, 8926, 8921, 8925,
        0, 8941, 8929,    0, 8939, 8941,    0, 8927, 8947,    0,
     8934, 8928, 8937, 8949, 8947, 8935, 8954, 8940, 8950, 8957,
     8956, 8958, 8941, 8956, 8943,    0, 9553, 9010, 9014, 9018,
     9022, 9023, 9025, 9027, 9028, 9030, 9032, 9036, 9040, 9034,
     9038, 9041, 9045, 9049

    } ;

static yyconst flex_int16_t yy_def[6295] =
    {   0,
     6278, 6278, 6277,    3,    2,    2,    2,    2,    2,    2,
        2,    2, 6277,   13,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2, 6279, 6279, 6277,   27, 6280, 6280,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
     6277,   41,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2, 6277,   55, 6277,   57, 6281, 6281,
        2,    2, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6282, 6282, 6282, 6282, 6282, 6282,
     6277, 6277, 6277, 6277, 6283, 6277, 6277, 6277,   69, 6283,
     6283, 6283, 6277, 6277, 6277, 6284, 6284, 6284, 6284, 6284,

     6284, 6283, 6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284,
     6284, 6284, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6277, 6277,   69, 6277, 6277,
     6285, 6285, 6285, 6285, 6285, 6285, 6285, 6285, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6286, 6286, 6286, 6286, 6287,
     6287, 6287, 6287, 6287, 6287, 6286, 6277, 6277, 6277, 6277,
     6277,   69, 6277, 6277, 6277, 6277, 6277, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6277, 6282, 6277,
     6277, 6288, 6277, 6289, 6277, 6277,   69, 6277, 6277, 6277,

     6277, 6277, 6282, 6282, 6282, 6282, 6282, 6282, 6277, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6277, 6277,   69, 6277,
     6277, 6277, 6277, 6277, 6290, 6290, 6290, 6290, 6290, 6290,
     6290, 6290, 6290, 6290, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6277, 6277,   69, 6277, 6277,
     6277, 6291, 6291, 6291, 6291, 6291, 6291, 6291, 6291, 6291,

     6277, 6277,   69, 6277, 6277, 6292, 6292, 6292, 6292, 6292,
     6292, 6292, 6292, 6292, 6293, 6293, 6277, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6294, 6294,  328,  328,
      328,  328, 6293, 6277, 6277, 6282, 6282, 6282, 6282, 6282,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6277, 6277, 6277, 6277, 6277, 6277, 6283,
     6283, 6283, 6283, 6284, 6284, 6284, 6284, 6284, 6284, 6284,
     6284, 6284, 6284, 6284, 6284, 6284, 6283, 6283, 6283, 6283,

     6283, 6283, 6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284,
     6284, 6284, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6277, 6277, 6277, 6277, 6285, 6285, 6285,
     6285, 6285, 6285, 6285, 6285, 6285, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6286, 6286,
     6286, 6286, 6287, 6287, 6287, 6287, 6287, 6287, 6287, 6286,
     6286, 6286, 6286, 6286, 6286, 6282, 6282, 6282, 6282, 6282,
     6282, 6277, 6277, 6277, 6277, 6277, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6277, 6277,
     6277, 6277, 6277, 6290, 6290, 6290, 6290, 6290, 6290, 6290,
     6290, 6290, 6290, 6290, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6277, 6277, 6277, 6277, 6291, 6291,
     6291, 6291, 6291, 6291, 6291, 6291, 6291, 6291, 6277, 6277,
     6277, 6277, 6292, 6292, 6292, 6292, 6292, 6292, 6292, 6292,
     6292, 6292, 6293, 6277, 6293, 6293, 6293, 6277, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293,  328,  328,  328,  328,  328,  328,  328, 6293, 6293,
     6293, 6293, 6293, 6293, 6277, 6282, 6282, 6282, 6282, 6282,
     6282, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,

     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6282, 6282, 6282, 6282, 6282,
     6282, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6283, 6283,
     6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284,
     6284, 6284, 6283, 6283, 6283, 6283, 6283, 6283, 6283, 6284,
     6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6277, 6277, 6285, 6285, 6285, 6285, 6285, 6285,

     6285, 6285, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6286, 6286, 6287, 6287, 6287, 6287,
     6287, 6287, 6286, 6286, 6286, 6286, 6286, 6286, 6286, 6282,

     6282, 6282, 6282, 6277, 6277, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6277, 6277, 6290,
     6290, 6290, 6290, 6290, 6290, 6290, 6290, 6290, 6290, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6277, 6277,
     6291, 6291, 6291, 6291, 6291, 6291, 6291, 6291, 6277, 6277,

     6292, 6292, 6292, 6292, 6292, 6292, 6292, 6292, 6292, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293,  328,  328,  328,  328,  328,  328, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6277, 6282, 6282, 6282,
     6282, 6282, 6282, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6277, 6277,

     6277, 6277, 6277, 6277, 6277, 6283, 6284, 6284, 6284, 6284,
     6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284,
     6283, 6283, 6283, 6283, 6283, 6283, 6283, 6284, 6284, 6284,
     6284, 6284, 6284, 6284, 6284, 6284, 6284, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6285,
     6285, 6285, 6277, 6285, 6285, 6285, 6285, 6285, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6286,
     6287, 6287, 6287, 6287, 6287, 6287, 6287, 6286, 6286, 6286,
     6286, 6286, 6286, 6286, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6290, 6290, 6290, 6290, 6290,
     6290, 6290, 6290, 6290, 6290, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6291, 6291, 6291, 6291,
     6291, 6291, 6291, 6291, 6291, 6292, 6292, 6292, 6292, 6292,
     6292, 6292, 6292, 6292, 6292, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293,  328,  328,  328,  328,  328,  328,  328,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6282, 6282, 6282,
     6282, 6282, 6282, 6277, 6277, 6277, 6277, 6277, 6277, 6277,

     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6283, 6284, 6284,
     6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284,
     6284, 6283, 6283, 6283, 6283, 6283, 6283, 6283, 6283, 6284,
     6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284,
     6284, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6285, 6285,
     6285, 6285, 6285, 6285, 6285, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6286, 6287, 6287, 6287, 6287, 6287,
     6287, 6287, 6286, 6286, 6286, 6286, 6286, 6286, 6286, 6286,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6290, 6290, 6290, 6290, 6290, 6290, 6290, 6290, 6290, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6291, 6291, 6291, 6291, 6291, 6291, 6291, 6292, 6292,
     6292, 6292, 6292, 6292, 6292, 6292, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293,  328,  328,  328,  328,  328,
      328,  328, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6282, 6282, 6282, 6282, 6282, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6283, 6284, 6284, 6284, 6284,
     6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284,
     6283, 6283, 6283, 6283, 6283, 6283, 6283, 6283, 6284, 6284,
     6284, 6284, 6284, 6284, 6284, 6284, 6284, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6285, 6285, 6285, 6285, 6285, 6285, 6285,
     6285, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6286, 6287, 6287, 6287, 6287, 6287, 6287, 6287, 6287, 6286,
     6286, 6286, 6286, 6286, 6286, 6286, 6286, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6290, 6290, 6290, 6290, 6290, 6290, 6290, 6290, 6290,
     6290, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6291,
     6291, 6291, 6291, 6291, 6291, 6291, 6291, 6292, 6292, 6292,
     6292, 6292, 6292, 6292, 6292, 6292, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,

     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
      328,  328,  328,  328,  328,  328,  328,  328, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6282, 6282, 6282, 6282,
     6282, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6283, 6284, 6284, 6284, 6284, 6284, 6284, 6284,
     6284, 6284, 6284, 6284, 6284, 6283, 6283, 6283, 6283, 6283,
     6283, 6283, 6283, 6283, 6284, 6284, 6284, 6284, 6284, 6284,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6285, 6285, 6285, 6285, 6285,
     6285, 6285, 6285, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6286, 6287, 6287, 6287, 6287,
     6287, 6287, 6287, 6287, 6286, 6286, 6286, 6286, 6286, 6286,
     6286, 6286, 6286, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6290, 6290, 6290,
     6290, 6290, 6290, 6290, 6290, 6290, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6291, 6291, 6291, 6291, 6291,
     6291, 6291, 6291, 6292, 6292, 6292, 6292, 6292, 6292, 6292,
     6292, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293,  328,  328,  328,  328,  328,
      328,  328,  328, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6282, 6282, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6277, 6277, 6277,

     6277, 6277, 6277, 6277, 6277, 6277, 6283, 6284, 6284, 6284,
     6284, 6284, 6284, 6284, 6284, 6284, 6284, 6283, 6283, 6283,
     6283, 6283, 6283, 6283, 6283, 6283, 6284, 6284, 6284, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6285, 6285, 6285, 6285, 6285, 6285,
     6285, 6285, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6286, 6287, 6287, 6287, 6287, 6287, 6287, 6287, 6287,
     6286, 6286, 6286, 6286, 6286, 6286, 6286, 6286, 6286, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6290, 6290, 6290, 6290, 6290, 6290, 6290, 6290, 6290,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6291, 6291, 6291, 6291, 6291,
     6291, 6291, 6291, 6292, 6292, 6292, 6292, 6292, 6292, 6292,
     6292, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293,  328,  328,  328,  328,
      328,  328,  328,  328, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,

     6277, 6277, 6277, 6277, 6277, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6283, 6284, 6284, 6284, 6284, 6284, 6284, 6284,
     6284, 6283, 6283, 6283, 6283, 6283, 6283, 6283, 6283, 6283,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6285, 6285, 6285, 6285, 6285,
     6285, 6285, 6285, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6286, 6287, 6287, 6287, 6287, 6287, 6287,
     6287, 6287, 6286, 6286, 6286, 6286, 6286, 6286, 6286, 6286,
     6286, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6290, 6290, 6290, 6290, 6290, 6290, 6290,
     6290, 6290, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6291, 6291, 6291, 6291,
     6291, 6291, 6291, 6291, 6292, 6292, 6292, 6292, 6292, 6292,
     6292, 6292, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293,  328,  328,  328,  328,  328,  328,
      328,  328, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,

     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6283, 6284,
     6284, 6284, 6284, 6284, 6284, 6284, 6284, 6283, 6283, 6283,
     6283, 6283, 6283, 6283, 6283, 6283, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6285, 6285, 6285, 6285, 6285, 6285, 6285,
     6285, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6286, 6287, 6287, 6287, 6287, 6287, 6287, 6287,
     6287, 6286, 6286, 6286, 6286, 6286, 6286, 6286, 6286, 6286,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6290, 6290, 6290, 6290,
     6290, 6290, 6290, 6290, 6290, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6291, 6291,
     6291, 6291, 6291, 6291, 6291, 6291, 6292, 6292, 6292, 6292,
     6292, 6292, 6292, 6292, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293,  328,  328,  328,  328,  328,  328,
      328,  328, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,

     6293, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6283, 6284, 6284, 6284, 6284,
     6284, 6284, 6284, 6284, 6283, 6283, 6283, 6283, 6283, 6283,
     6283, 6283, 6283, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6285,
     6285, 6285, 6285, 6285, 6285, 6285, 6285, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6286, 6287,
     6287, 6287, 6287, 6287, 6287, 6287, 6287, 6286, 6286, 6286,
     6286, 6286, 6286, 6286, 6286, 6286, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6290, 6290, 6290, 6290, 6290,

     6290, 6290, 6290, 6290, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6291, 6291, 6291, 6291,
     6291, 6291, 6291, 6291, 6292, 6292, 6292, 6292, 6292, 6292,
     6292, 6292, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,  328,
      328,  328,  328,  328,  328,  328,  328, 6293, 6293, 6293,

     6293, 6293, 6293, 6293, 6293, 6293, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6283, 6284,
     6284, 6284, 6284, 6284, 6284, 6284, 6284, 6283, 6283, 6283,
     6283, 6283, 6283, 6283, 6283, 6283, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6285, 6285, 6285, 6285, 6285, 6285, 6285, 6285,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6286, 6287, 6287, 6287, 6287, 6287, 6287, 6287, 6287,
     6286, 6286, 6286, 6286, 6286, 6286, 6286, 6286, 6286, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6290, 6290,

     6290, 6290, 6290, 6290, 6290, 6290, 6290, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6291, 6291, 6291, 6291,
     6291, 6291, 6291, 6291, 6292, 6292, 6292, 6292, 6292, 6292,
     6292, 6292, 6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293,  328,  328,  328,
      328,  328,  328,  328,  328, 6293, 6293, 6293, 6293, 6293,

     6293, 6293, 6293, 6293, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6284, 6284, 6284, 6284, 6284, 6284, 6284, 6284, 6283, 6283,
     6283, 6283, 6283, 6283, 6283, 6283, 6283, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6285, 6285, 6285, 6285, 6285, 6285, 6285,
     6285, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6287, 6287, 6287, 6287, 6287, 6287, 6287, 6287,
     6286, 6286, 6286, 6286, 6286, 6286, 6286, 6286, 6286, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6290, 6290,
     6290, 6290, 6290, 6290, 6290, 6290, 6290, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6291, 6291, 6291, 6291, 6291, 6291, 6291,
     6291, 6292, 6292, 6292, 6292, 6292, 6292, 6292, 6292, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293, 6293,  328,  328,
      328,  328,  328,  328,  328,  328, 6293, 6293, 6293, 6293,
     6293, 6293, 6293, 6293, 6293, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6284, 6284,
     6284, 6284, 6284, 6284, 6284, 6283, 6283, 6283, 6283, 6283,
     6283, 6283, 6283, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6285, 6285, 6285, 6285, 6285, 6285, 6285, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6287, 6287,

     6287, 6287, 6287, 6287, 6287, 6286, 6286, 6286, 6286, 6286,
     6286, 6286, 6286, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6290, 6290, 6290, 6290, 6290, 6290, 6290,
     6290, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6291, 6291, 6291, 6291, 6291,
     6291, 6291, 6292, 6292, 6292, 6292, 6292, 6292, 6292, 6293,
     6293, 6293, 6293, 6293, 6293, 6293, 6293,  328,  328,  328,
      328,  328,  328,  328, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6282, 6282, 6282, 6282, 6282, 6282, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6284, 6284, 6284, 6284, 6284, 6284,
     6283, 6283, 6283, 6283, 6283, 6283, 6283, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6285, 6285, 6285, 6285, 6285, 6285,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6287, 6287, 6287, 6287, 6287, 6287, 6286,
     6286, 6286, 6286, 6286, 6286, 6286, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6290, 6290, 6290, 6290, 6290, 6290, 6290, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6291, 6291, 6291, 6291, 6291, 6291, 6292, 6292,
     6292, 6292, 6292, 6292, 6293, 6293, 6293, 6293, 6293, 6293,
     6293, 6293, 6293,  328,  328,  328,  328,  328,  328, 6293,

     6293, 6293, 6293, 6293, 6293, 6293, 6277, 6277, 6277, 6277,
     6282, 6282, 6277, 6277, 6277, 6277, 6277, 6277, 6284, 6284,
     6283, 6283, 6283, 6283, 6283, 6283, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6285, 6285, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6287, 6287, 6286,

     6286, 6286, 6286, 6286, 6286, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6290, 6290, 6290,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6291, 6291, 6292, 6292, 6293, 6293, 6293,

     6293,  328,  328, 6293, 6293, 6293, 6293, 6293, 6293, 6277,
     6277, 6277, 6283, 6283, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6286,
     6286, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6293, 6293, 6293, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,

     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282, 6282,
     6282, 6282, 6282, 6282, 6282, 6282,    0, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277

    } ;

static yyconst flex_int16_t yy_nxt[9629] =
    {   0,
       64,   65,   65,   64,   66,   64,   67,   68,   64,   69,
       64,   64,   70,   70,   70,   70,   71,   70,   70,   70,
       72,   73,   74,  371, 6277,   76,  371,  380, 6277,  371,
      803,   77,  380,  380,  380,  804, 6277,  372,   78,  509,
      372,   79,   80,  372,  509,  509,  509,   81,  113,  422,
      114,  436,  115,  120,  121,  113,  124,  114,  116,  115,
      117,  118,  654,  119,  423,  116,  655,  117,  118,  437,
      119,  122,  123,  125,   64,   64,   65,   65,   64,   66,
       64,   67,   68,   64,   69,   64,   64,   70,   70,   70,
       70,   71,   70,   70,   70,   72,   73,   74,  124,  413,

       76,  120,  121,  424,  279,  468,   77,  414,  280,  425,
     1506,  281,  469,   78,  151,  125,   79,   80,  282,  122,
      123,  152,   81,  151,  153,  154,  155,  210,  210,  283,
      152,  284,  553,  153,  154,  155, 1507,  420,  211,  211,
      554,  285,  212,  212,  213,  213,  214,  214,  421,   64,
       82,   83,   84,   82,   85,   82,   86,   87,   88,   89,
       90,   90,   91,   91,   91,   91,   92,   91,   91,   91,
       93,   94,   95,   96,   96,   97,   96,   96,   96,   96,
       96,   98,   96,   96,   96,   96,   96,   96,   99,   96,
       96,  100,  101,   96,   96,   96,   96,  102,  103,   96,

       96,  104,  105,   96,  106,   96,  107,   96,   96,   96,
      108,  109,   96,  110,   96,   96,  111,  112,   96,   96,
       96,   96,   96,   96,   82,   64,   65,  126,   64,   66,
       64,   67,  127,   64,  128,   64,   64,  129,  129,  129,
      129,  130,  129,  129,  129,   72,   73,   74,  131,  131,
      132,  131,  131,  131,  131,  131,  133,  131,  131,  131,
      131,  134,  131,  135,  131,  131,  136,  137,  131,  131,
      131,  131,   81,  131,  131,  131,  131,  131,  131,  131,
      131,  131,  131,  131,  131,  131,  134,  131,  131,  131,
      131,  138,  131,  131,  131,  131,  131,  131,  131,   64,

      139,  140,  141,  380,  142,  143, 1508,  144,  380,  380,
      380,  145,  146,  471,  459,  147,  148,  149,  150,  139,
      140,  141,  380,  142,  143,  472,  144,  380,  380,  380,
      145,  146,  460, 1509,  147,  148,  149,  150,   64,   65,
       65,   64,  156,   64,   67,   68,   64,   69,  157,  157,
      158,  158,  158,  158,  159,  158,  158,  158,   72,   73,
       74,  408,  215,  161,  216,  215,  734,  216,  403,  162,
      279,  507,  217,  508,  280,  217,  163,  281,  218,  164,
      165,  218,  219,  220,  282,  166,  735,  221,  426,  222,
      233,  219,  220,  234,  223,  224,  221,  225,  222,  226,

      227,  235,  427,  223,  224,  440,  225,  236,  226,  227,
     1510,  441,   64,   64,   65,   65,   64,  156,   64,   67,
       68,   64,   69,  157,  157,  158,  158,  158,  158,  159,
      158,  158,  158,   72,   73,   74,  451,  283,  161,  284,
      228,  545,  233,  546,  162,  234,  229,  230,  231,  285,
      228,  163,  232,  235,  164,  165,  229,  230,  231,  236,
      166,  451,  232,  255,  256,  257,  442,  258,  428,  259,
      438,  415,  618,  439,  416,  260,  261,  417,  429,  418,
      262,  263,  443,  264,  466,  467,  619,   64,  167,  168,
       65,  167,  169,  167,  170,  171,  167,  172,  167,  167,

      173,  173,  173,  173,  174,  173,  173,  173,  175,  176,
      177,  178,  178,  179,  178,  178,  180,  178,  178,  181,
      178,  178,  178,  178,  182,  183,  184,  178,  178,  185,
      186,  178,  178,  178,  187,  188,  178,  178,  178,  178,
      178,  180,  178,  178,  178,  178,  178,  178,  178,  182,
      183,  178,  178,  178,  178,  189,  178,  178,  178,  178,
      187,  178,  167,  190,  191,   65,  192,  193,  194,  195,
      196,  190,  197,  190,  190,  198,  198,  198,  198,  199,
      198,  198,  198,  200,  201,  202,  380,  537,  204,  487,
      454,  380,  380,  380,  205,  526,  255,  256,  257,  527,

      258,  206,  259,  538,  207,  208,  265,  488,  260,  261,
      209,  265,  266,  262,  263,  454,  264,  266,  267,  385,
      526,  268,  457,  267,  527,  458,  268,  342,  342,  342,
      342,  342,  342,  342,  342,  627,  628,  190,  190,  191,
       65,  192,  193,  194,  195,  196,  190,  197,  190,  190,
      198,  198,  198,  198,  199,  198,  198,  198,  200,  201,
      202,  269,  489,  204,  270,  271,  272,  273,  541,  205,
      578,  542,  490,  274,  275,  276,  206,  579,  277,  207,
      208, 1511,  491,  269,  607,  209,  270,  271,  272,  273,
      492,  608,  494,  493,  495,  274,  275,  276,  543,  364,

      277,  365,  365,  365,  365,  365,  365,  365,  365,  496,
      544, 1512,  190,   64,   65,  237,   64,   66,   64,   67,
      238,   64,  239,   64,   64,  240,  241,  242,  243,  244,
      243,  243,  243,   72,   73,   74,  245,  245,  246,  245,
      245,  245,  245,  245,  247,  245,  245,  245,  245,  245,
      245,  248,  245,  245,  249,  250,  245,  245,  245,  245,
       81,  245,  245,  245,  245,  245,  245,  245,  251,  245,
      245,  245,  252,  253,  245,  245,  245,  245,  254,  245,
      245,  245,  245,  245,  245,  245,  245,   64,   64,  286,
       65,   64,   66,   64,   67,  287,   64,  288,   64,   64,

      289,  289,  289,  289,  290,  289,  289,  289,   72,   73,
      291,  292,  292,  293,  292,  292,  292,  292,  292,  294,
      292,  292,  292,  292,  292,  292,  295,  292,  292,  296,
      297,  292,  292,  292,  292,   81,  292,  292,  292,  292,
      292,  292,  292,  292,  292,  292,  292,  292,  292,  298,
      292,  292,  292,  292,  299,  292,  292,  292,  300,  292,
      292,  292,   64,   64,   65,  301,   64,   66,   64,   67,
      302,   64,  303,   64,   64,  304,  304,  304,  304,  305,
      304,  304,  304,   72,   73,   74,  306,  306,  307,  306,
      306,  306,  306,  306,  308,  306,  306,  306,  306,  306,

      306,  309,  306,  306,  310,  311,  306,  306,  306,  306,
       81,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  312,  306,  306,  306,  306,  313,
      314,  306,  306,  306,  306,  306,  306,   64,  315,  316,
      317,  315,  318,  315,  319,  320,  315,  321,  315,  315,
      322,  322,  322,  322,  323,  322,  322,  322,  324,  325,
      326,  547,  557,  328,  430,  431,  548,  625,  555,  329,
      626,  558,  659,  660,  667,  668,  330,  432,  433,  331,
      332,  434,  435,  556,  364,  333,  365,  365,  365,  365,
      365,  366,  365,  365,  342,  342,  342,  342,  342,  342,

      342,  342,  381, 1513,  382,  382,  382,  382,  382,  382,
      382,  382,  315,  315,  316,  317,  315,  318,  315,  319,
      320,  315,  321,  315,  315,  322,  322,  322,  322,  323,
      322,  322,  322,  324,  325,  326, 1514,  334,  328,  656,
      380,  374,  334,  657,  329,  380,  380,  380,  584,  497,
      375,  330,  335,  531,  331,  332,  376,  335,  530,  585,
      333,  504,  498,  377,  499,  500,  378,  379,  381,  590,
      382,  382,  382,  382,  382,  383,  382,  382,  531,  505,
      506,  501,  539,  530,  336,  576,  591,  315,  404,  336,
      734,  453,  337,  454,  502,  532,  503,  337,  577,  338,

      540,  405,  339,  340,  338,  455,  380,  339,  340,  343,
      343,  380,  380,  380,  533,  559,  533,  344,  454, 1227,
      342,  342,  342,  342,  342,  342,  342,  342,  373,  641,
      560,  345,  564,  346,  347,  348,  349,  350,  351,  386,
      642,  530,  352,  353,  354,  355,  356,  380,  786,  357,
      565,  787,  380,  380,  380,  380,  599,  358,  665, 1515,
      380,  380,  380,  359,  387,  360,  530,  361,  388,  362,
      666,  363,  380,  600,  391,  397,  380,  380,  380,  380,
      380,  380,  380,  380,  398,  380,  380,  380,  392,  682,
      399,  389,  671,  390,  683,  395,  680,  400,  380,  393,

      401,  402,  380,  380,  380,  380,  672,  380,  380,  380,
      380,  681,  561,  394,  562,  380,  380,  380,  380,  684,
      396,  669,  670,  380,  380,  380,  380,  563,  407,  685,
      509,  380,  380,  380,  509,  509,  509,  509,  406,  509,
      509,  509,  409,  444,  444,  444,  444,  444,  444,  444,
      444,  516,  461,  629,  411,  639,  412,  519,  713,  630,
      410,  640,  393,  444,  444,  444,  444,  444,  444,  444,
      444,  692,  714,  693,  396,  445,  394,  446,  446,  446,
      446,  446,  446,  446,  446,  445,  462,  446,  446,  446,
      446,  446,  447,  446,  446,  463,  464,  473,  474,  596,

      465,  581,  768,  582,  572,  475,  480,  597,  476,  481,
      482,  598,  762,  477,  478,  479,  583,  483,  573,  484,
      797,  574,  485,  798,  575,  510,  486,  511,  511,  511,
      511,  511,  511,  511,  511,  510, 1284,  511,  511,  511,
      511,  511,  512,  511,  511,  509, 1054, 1285,  509, 1055,
      509,  509,  509,  509,  509,  509,  509,  520,  661,  662,
      663,  509,  509,  509,  549,  664,  521,  550,  631,  695,
      632,  551,  522,  633,  552,  517,  592,  784,  514,  523,
      593,  515,  524,  525,  785,  727,  594,  595,  696,  518,
      342,  342,  342,  342,  342,  342,  342,  342,  364,  728,

      365,  365,  365,  365,  365,  365,  365,  365,  364, 1136,
      365,  365,  365,  365,  365,  366,  365,  365,  528,  374,
      941,  703,  795,  566,  374,  567,  529,  568,  375,  942,
      569, 1137,  686,  375,  376,  570,  571,  687,  704,  376,
      796,  377,  916,  528,  378,  379,  377,  766,  917,  378,
      379,  529,  342,  342,  342,  342,  342,  342,  342,  342,
      364,  767,  365,  365,  365,  365,  365,  365,  365,  365,
      364,  765,  365,  365,  365,  365,  365,  366,  365,  365,
      586,  601,  779,  762, 1246,  602,  792,  587,  588,  603,
      867,  793,  897,  589,  868,  604,  780,  762,  605,  606,

      609,  609,  609,  609,  609,  609,  609,  609,  609,  609,
      609,  609,  609,  609,  609,  609,  610,  897,  611,  611,
      611,  611,  611,  611,  611,  611,  610, 1143,  612,  611,
      611,  611,  611,  611,  611,  611,  610, 1144,  611,  611,
      611,  611,  611,  611,  611,  611,  610, 1516,  611,  611,
      611,  611,  611,  611,  611,  611,  610,  900,  611,  611,
      611,  611,  611,  613,  611,  611,  635,  951,  636,  643,
      644,  673,  800,  952,  637,  674,  645,  675,  648,  676,
      649,  646,  900,  638,  677,  647,  650,  651,  678,  679,
      688,  652,  653,  801,  697,  788,  689,  698,  826, 1038,

      734,  699,  904,  789, 1039, 1517,  700,  701,  690,  905,
      790, 1518,  827,  702,  705,  705,  705,  705,  705,  705,
      705,  705,  705,  705,  705,  705,  705,  705,  705,  705,
      706, 1519,  707,  707,  707,  707,  707,  707,  707,  707,
      706, 1230,  707,  707,  707,  707,  707,  708,  707,  707,
      719,  719,  719,  719,  719,  719,  719,  719,  719,  719,
      719,  719,  719,  719,  719,  719,  720, 1520,  721,  721,
      721,  721,  721,  721,  721,  721,  720,  734,  721,  721,
      721,  721,  721,  722,  721,  721,  847,  736,  736,  736,
      736,  736,  736,  736,  736,  737,  738, 1042,  931,  935,

      848,  932,  936,  739, 1043, 1521,  736,  736,  736,  736,
      736,  736,  736,  736,  933,  937,  805,  740,  949,  741,
      742,  743,  744,  745,  746,  806, 1048,  983,  747,  748,
      749,  750,  751,  380,  807,  752,  882,  950,  380,  380,
      380, 1049,  883,  753,  984,  884, 1000, 1001,  734,  754,
     1002,  755, 1070,  756,  997,  757,  759,  758,  760,  760,
      760,  760,  760,  760,  760,  760,  734, 1071,  998, 1158,
     1159, 1000, 1001, 1003,  759, 1002,  760,  760,  760,  760,
      760,  761,  760,  760,  733,  733,  734,  733,  733,  733,
      733,  733,  733,  733,  733,  733,  734, 1248, 1003, 1078,

      762,  532, 1176, 1177,  733,  733,  733, 1079, 1522,  364,
      769,  365,  365,  365,  365,  365,  775,  365,  365,  770,
      533,  380,  533,  734,  380,  771,  380,  380,  380,  380,
      380,  380,  772,  734,  943,  773,  774,  342,  342,  342,
      342,  342,  342,  342,  342,  343,  343,  944, 1222, 1183,
     1113, 1184,  831,  783, 1114, 1210,  832,  945,  733,  733,
      733,  734,  733,  733,  733,  733,  733,  733,  733,  733,
      733,  814,  814,  814,  814,  814,  814,  814,  814,  733,
      733,  733,  364, 1119,  365,  365,  365,  365,  365,  365,
      365,  365, 1244,  358,  762, 1120,  763, 1245,  762,  359,

     1523,  360,  734,  361,  734,  362,  364,  363,  365,  365,
      365,  365,  815,  365,  365,  365,  829,  829,  829,  829,
      829,  829,  829,  829,  380, 1253, 1125, 1524, 1219,  380,
      380,  380,  381,  733,  382,  382,  382,  382,  382,  382,
      382,  382,  381, 1126,  382,  382,  382,  382,  830,  382,
      382,  382,  380,  912,  913,  380, 1172,  380,  380,  380,
      380,  380,  380,  380,  914, 1173,  915,  734,  380,  380,
      380,  380,  834, 1168, 1169, 1170,  380,  380,  380,  380,
     1525,  833,  380,  836,  380,  380,  380,  380,  380,  380,
      380, 1247,  762,  380,  734,  380,  380,  380,  380,  380,

      380,  835, 1378,  837, 1379,  380,  734,  734,  380,  838,
      380,  380,  380,  380,  380,  380,  380,  734,  734,  380,
      762,  380,  380,  380,  380,  380,  380, 1236, 1249, 1225,
      380, 1526, 1226,  734,  841,  380,  380,  380, 1231,  839,
      734,  380, 1527, 1232,  380,  840,  380,  380,  380,  380,
      380,  380,  380,  734,  850,  380,  734,  380,  380,  380,
      380,  380,  380,  852,  380, 1214, 1238, 1239, 1215,  380,
      380,  380,  842,  851,  380,  734,  734,  509, 1240,  380,
      380,  380,  509,  509,  509,  509, 1530,  734, 1212,  853,
      509,  509,  509,  854, 1237, 1213, 1223, 1228,  855, 1241,

      734,  856,  444,  444,  444,  444,  444,  444,  444,  444,
      859,  857, 1256, 1531, 1224, 1250,  858,  988, 1229,  860,
      893,  893,  893,  893,  893,  893,  893,  893,  445,  734,
      446,  446,  446,  446,  446,  446,  446,  446,  445, 1421,
      446,  446,  446,  446,  894,  446,  446,  446,  958, 1422,
      959,  343,  343,  960,  961,  962,  967, 1277,  968,  783,
      963,  969,  970,  971, 1251, 1296,  964,  965,  972, 1297,
      966,  734, 1278, 1528,  973,  974,  985,  985,  985,  985,
      985,  985,  985,  985,  510, 1529,  511,  511,  511,  511,
      511,  511,  511,  511,  510, 1418,  511,  511,  511,  511,

      986,  511,  511,  511,  509, 1288, 1252,  509, 1419,  509,
      509,  509,  509,  509,  509,  509,  734,  734,  509, 1289,
      509,  509,  509,  509,  509,  509,  509,  989, 1382, 1030,
     1383,  509,  509,  509, 1031,  987, 1405, 1216, 1057, 1406,
     1032, 1465, 1384, 1058, 1033, 1217, 1220,  990,  991, 1059,
     1034, 1221, 1218, 1060, 1366, 1532, 1391,  380, 1367, 1061,
     1392, 1533,  380,  380,  380, 1534, 1465,  992,  609,  609,
      609,  609,  609,  609,  609,  609, 1088, 1088, 1088, 1088,
     1088, 1088, 1088, 1088,  610, 1535,  611,  611,  611,  611,
      611,  611,  611,  611,  610, 1308,  611,  611,  611,  611,

      611,  611,  611,  611,  610, 1536,  611,  611,  611,  611,
     1089,  611,  611,  611,  705,  705,  705,  705,  705,  705,
      705,  705, 1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189,
      706, 1537,  707,  707,  707,  707,  707,  707,  707,  707,
      706, 1538,  707,  707,  707,  707, 1190,  707,  707,  707,
      719,  719,  719,  719,  719,  719,  719,  719, 1199, 1199,
     1199, 1199, 1199, 1199, 1199, 1199,  720, 1539,  721,  721,
      721,  721,  721,  721,  721,  721,  720,  734,  721,  721,
      721,  721, 1200,  721,  721,  721,  734,  736,  736,  736,
      736,  736,  736,  736,  736,  737,  738, 1362, 1412,  734,

      380, 1413,  734, 1211, 1542,  380,  380,  380, 1233, 1242,
     1242, 1242, 1242, 1242, 1242, 1242, 1242, 1234, 1471,  734,
     1496, 1543, 1362, 1254, 1544, 1472, 1235,  759, 1497,  760,
      760,  760,  760,  760,  760,  760,  760, 1255, 1309, 1545,
      380, 1398, 1549,  753, 1363,  380,  380,  380,  734,  754,
     1399,  755, 1550,  756, 1551,  757,  759,  758,  760,  760,
      760,  760, 1243,  760,  760,  760,  364, 1310,  365,  365,
      365,  365, 1257,  365,  365,  365,  814,  814,  814,  814,
      814,  814,  814,  814,  364, 1552,  365,  365,  365,  365,
      365,  365,  365,  365,  829,  829,  829,  829,  829,  829,

      829,  829,  381, 1553,  382,  382,  382,  382,  382,  382,
      382,  382,  380, 1554, 1408, 1557, 1409,  380,  380,  380,
      380, 1291, 1410,  380, 1558,  380,  380,  380,  380,  380,
      380,  380, 1559, 1562, 1563, 1564,  380,  380,  380, 1306,
     1311,  380, 1466, 1307,  380, 1560,  380,  380,  380,  380,
      380,  380,  380, 1555, 1561,  380, 1313,  380,  380,  380,
      380,  380,  380, 1565, 1314,  380, 1566, 1466, 1315, 1556,
      380,  380,  380,  380, 1567, 1312,  380, 1568,  380,  380,
      380,  380,  380,  380,  380, 1569, 1570, 1571, 1572,  380,
      380,  380,  380, 1319, 1316, 1573,  380,  380,  380,  380,

     1317,  380,  380,  380, 1318,  380, 1574, 1577,  380, 1578,
      380,  380,  380,  380,  380,  380,  380, 1579, 1580, 1581,
      380,  380,  380,  380,  380,  380,  380,  380, 1320,  380,
      380,  380, 1540, 1330, 1329,  380, 1541, 1328, 1582, 1585,
      380,  380,  380,  893,  893,  893,  893,  893,  893,  893,
      893, 1575, 1586,  445, 1331,  446,  446,  446,  446,  446,
      446,  446,  446, 1332, 1546, 1395, 1587, 1576, 1547, 1336,
     1588, 1333, 1396, 1589, 1548, 1334, 1335, 1435, 1397, 1436,
     1583, 1584, 1437, 1438, 1439, 1590, 1591, 1337, 1592, 1593,
     1291,  985,  985,  985,  985,  985,  985,  985,  985,  510,

     1594,  511,  511,  511,  511,  511,  511,  511,  511,  509,
     1595, 1596,  509, 1597,  509,  509,  509,  509,  509,  509,
      509, 1598, 1599,  509, 1600,  509,  509,  509,  509,  509,
      509, 1601,  509, 1602, 1603, 1607, 1450,  509,  509,  509,
     1451, 1608, 1609, 1604, 1610, 1611,  509, 1453, 1454, 1612,
     1452,  509,  509,  509, 1605, 1455, 1606, 1613, 1614, 1456,
     1088, 1088, 1088, 1088, 1088, 1088, 1088, 1088,  610, 1615,
      611,  611,  611,  611,  611,  611,  611,  611, 1616, 1617,
     1618, 1619, 1620, 1621, 1457, 1622, 1623, 1624, 1625, 1626,
     1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189, 1627, 1628,

     1629, 1630, 1633, 1634,  706, 1291,  707,  707,  707,  707,
      707,  707,  707,  707, 1631, 1635, 1636, 1637, 1632, 1199,
     1199, 1199, 1199, 1199, 1199, 1199, 1199,  720, 1638,  721,
      721,  721,  721,  721,  721,  721,  721, 1639, 1640, 1642,
     1643, 1291, 1641, 1644, 1645,  734,  737,  738,  734,  734,
      734,  734,  734,  734, 1211,  734,  734,  734,  734,  734,
      734,  734,  734,  734, 1291,  734,  734,  734,  734,  734,
     1646,  734,  734,  734,  734,  734,  734, 1647,  734, 1649,
      734,  734,  734, 1657,  734, 1650, 1653, 1674, 1648,  762,
     1654, 1652, 1651, 1655, 1659,  762, 1688, 1677, 1681, 1656,

     1675, 1676, 1663,  734, 1658,  762,  734,  762, 1661, 1660,
      734, 1662, 1664, 1242, 1242, 1242, 1242, 1242, 1242, 1242,
     1242,  734, 1678, 1689,  734, 1668, 1679,  734, 1666, 1670,
      762,  734,  762, 1690, 1693, 1680, 1694, 1695, 1665, 1667,
     1683,  734, 1696, 1671, 1685, 1672, 1684, 1697, 1669,  759,
     1698,  760,  760,  760,  760,  760,  760,  760,  760, 1699,
     1682, 1700, 1691, 1686, 1687,  364, 1692,  365,  365,  365,
      365,  365,  365,  365,  365, 1701, 1702, 1703, 1704, 1705,
     1706, 1707, 1709, 1710, 1711, 1712, 1673, 1713, 1714, 1715,
     1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,

     1727, 1728, 1291, 1729, 1730, 1708, 1731, 1732, 1733, 1734,
     1735, 1717, 1737, 1738, 1736,  380, 1752, 1753,  380, 1754,
      380,  380,  380,  380,  380,  380,  380, 1755, 1756,  380,
     1759,  380,  380,  380,  380,  380,  380,  380, 1772, 1773,
      380, 1774,  380,  380,  380,  380,  380,  380, 1739,  380,
     1775, 1740,  380, 1776,  380,  380,  380,  380,  380,  380,
      380, 1777, 1742,  380, 1778,  380,  380,  380,  380,  380,
      380,  380, 1745, 1779,  380, 1780,  380,  380,  380,  380,
      380,  380, 1747, 1757, 1741,  380, 1781, 1758, 1782, 1743,
      380,  380,  380, 1746,  380, 1783, 1784,  380, 1744,  380,

      380,  380,  380,  380,  380, 1785, 1786,  380, 1787, 1788,
      380, 1748,  380,  380,  380,  380,  380,  380, 1789, 1790,
      380, 1750, 1791, 1792, 1793,  380,  380,  380, 1751, 1763,
     1764, 1765, 1794, 1795,  380, 1796, 1797,  380, 1749,  380,
      380,  380,  380,  380,  380,  380, 1798, 1799,  380, 1805,
      380,  380,  380,  380,  380,  380,  380, 1800, 1760,  380,
     1806,  380,  380,  380,  380,  380,  380, 1807, 1803, 1809,
     1801, 1810, 1761, 1762, 1811, 1808, 1812, 1813, 1814, 1815,
     1802, 1804, 1816, 1817, 1818, 1819, 1821, 1822, 1823, 1824,
     1766, 1820, 1769, 1825, 1826, 1767, 1827, 1768, 1831, 1832,

     1833, 1834, 1835, 1828, 1836, 1837, 1838, 1839, 1770, 1829,
     1840, 1841, 1842, 1843, 1844, 1830, 1845, 1771, 1846, 1847,
     1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
     1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,  509, 1873,
     1874,  509, 1875,  509,  509,  509,  509,  509,  509,  509,
     1876, 1877,  509, 1880,  509,  509,  509,  509,  509,  509,
      509, 1881, 1882,  509, 1883,  509,  509,  509,  509,  509,
      509, 1866,  509, 1884, 1867, 1869, 1878,  509,  509,  509,
     1879, 1885, 1868, 1886, 1887, 1871, 1881, 1888, 1889, 1890,
     1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900,

     1901, 1870, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910,
     1911, 1912, 1905, 1913, 1914, 1872, 1915, 1916, 1917, 1918,
     1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1930,
     1931, 1928, 1929, 1932, 1933, 1934, 1935, 1936, 1937, 1938,
     1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
     1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
     1959, 1960, 1961, 1962, 1963, 1964, 1965, 1968, 1966, 1969,
     1970, 1971, 1972, 1973, 1967, 1974, 1976, 1977, 1978, 1979,
     1981, 1982, 1984, 1985, 1975, 1986, 1987, 1988, 1989, 1991,
     1992, 1994, 1993, 1995, 1996, 1997, 1983, 1998, 1980, 1990,

     1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
     2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
     2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,  734,  734,
      734,  734,  734,  734,  734,  734,  734,  734,  734,  734,
      734,  734,  734,  734,  734,  734,  734,  734,  734,  734,
      734,  734, 2049,  734, 2032, 2027, 2028, 2029,  734, 2033,
      734, 2035, 2036,  734, 2038, 2039, 2030, 2037, 2040, 2045,
     2056, 2031, 2043, 2050, 2057, 2034, 2044, 2042, 2058, 2059,
      762,  762, 2061,  734,  734,  734,  734,  734, 2060,  762,
      734, 2062, 2041,  762,  734, 2071, 2072, 2046, 2073, 2047,

     2048, 2074, 2055, 2075, 2076, 2077, 2054, 2078, 2052, 2079,
     2080, 2051, 2081, 2082, 2067, 2066, 2083, 2064, 2084, 2068,
     2085, 2086, 2087, 2069, 2053, 2065, 2088, 2089, 2063, 2090,
     2070, 2091, 2092, 2094, 1716, 2095, 2096, 2093, 2097, 2098,
     2099, 2100, 2101, 2102, 2104, 2105, 2106, 2103, 2107, 2108,
     2109, 2110, 2111, 2112, 2113, 1717, 2114, 2115, 2116,  380,
     2131, 2132,  380, 2133,  380,  380,  380,  380,  380,  380,
      380, 2134, 2135,  380, 2136,  380,  380,  380,  380,  380,
      380,  380, 2137, 2138, 2148, 2149,  380,  380,  380,  380,
     2150, 2117, 2151, 2152,  380,  380,  380, 2153, 2118, 2120,

      380, 2154, 2155, 2121,  380,  380,  380,  380, 2156,  380,
      380,  380, 2157, 2158, 2159, 2123, 2160, 2161, 2162, 2124,
      380, 2163, 2164, 2126, 2165,  380,  380,  380,  380, 2168,
     2169, 2119, 2170,  380,  380,  380, 2125,  380, 2171, 2122,
      380, 2172,  380,  380,  380,  380,  380,  380,  380, 2173,
     2174,  380, 2176,  380,  380,  380,  380,  380,  380,  380,
     2175, 2177,  380, 2127,  380,  380,  380,  380,  380,  380,
      380, 2178, 2186,  380, 2187,  380,  380,  380,  380,  380,
      380, 2129, 2179, 2166, 2180, 2130,  380, 2167, 2188, 2128,
     2182,  380,  380,  380,  380, 2139, 2181,  380, 2189,  380,

      380,  380,  380,  380,  380,  380, 2190, 2191,  380, 2192,
      380,  380,  380,  380,  380,  380,  380, 2140, 2193, 2194,
      380,  380,  380,  380, 2183,  380,  380,  380, 2195, 2196,
     2197, 2198, 2199, 2184, 2200, 2201, 2202, 2203, 2185, 2206,
     2207, 2208, 2141, 2204, 2209, 2210, 2211, 2212, 2213, 2205,
     2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2142, 2222,
     2223, 2224, 2143, 2144, 2225, 2226, 2227, 2228, 2229, 2230,
     2231, 2146, 2232, 2235, 2145, 2147, 2233, 2236, 2234, 2237,
     2238, 2239, 2241, 2240,  509, 2250, 2251,  509, 2252,  509,
      509,  509,  509,  509,  509,  509, 2253, 2254,  509, 2255,

      509,  509,  509,  509,  509,  509, 2256,  509, 2257, 2258,
     2259, 2260,  509,  509,  509, 2261, 2242, 2262, 2263, 2267,
     2268, 2244,  509, 2243, 2269, 2245, 2247,  509,  509,  509,
      509, 2264, 2270, 2271, 2246,  509,  509,  509, 2265, 2275,
     2273, 2266, 2274, 2276, 2277, 2278, 2272, 2279, 2280, 2281,
     2282, 2283, 2284, 2285, 2286, 2288, 2287, 2289, 2290, 2291,
     2292, 2293, 2294, 2295, 2296, 2248, 2297, 2249, 2298, 2299,
     2300, 2301, 2302, 2303, 2304, 2306, 2307, 2308, 2305, 2309,
     2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319,
     2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329,

     2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339,
     2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349,
     2350, 2351, 2352, 2353, 2355, 2356, 2357, 2358, 2359, 2360,
     2361, 2354, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369,
     2370, 2371, 2372, 2374, 2375, 2376, 2373, 2377, 2378, 2379,
     2380, 2382, 2383, 2384, 2381, 2385, 2386,  734,  734,  734,
      734,  734,  734,  734,  734,  734,  734,  734,  734,  734,
      734,  734,  734,  734,  734,  734,  734,  734,  734,  734,
     2049,  734,  734,  734,  734,  734, 2387, 2393, 2416,  734,
     2391, 2399, 2388, 2389,  734, 2390, 2411,  762, 2392, 2394,

     2401, 2050,  762,  734, 2395, 2398, 2396, 2397, 2402,  762,
      762, 2413, 2412, 2400, 2410, 2414,  762,  762,  762, 2415,
     2417, 2418,  734,  734,  734,  734,  734,  734, 2427, 2420,
     2408, 2428, 2430, 2403, 2431, 2429, 2432, 2407, 2404, 2405,
     2433, 2434, 2419, 2409, 2435, 2436, 2437, 2438, 2406, 2423,
     2425, 2439, 2440, 2441, 2442, 2443, 2444, 2421, 2422, 2445,
     2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2424, 2455,
     2456, 2457, 2426, 2458, 2459, 2460, 2461, 2462, 2463, 2464,
     2465, 2454, 2466, 2467, 2469, 2470, 2471, 2468, 2472, 2473,
      380, 2486, 2487,  380, 2488,  380,  380,  380,  380,  380,

      380,  380, 2491, 2492,  380, 2493,  380,  380,  380,  380,
      380,  380,  380, 2494, 2501,  380, 2502,  380,  380,  380,
      380,  380,  380,  380, 2503, 2504, 2505, 2489,  380,  380,
      380, 2490, 2506, 2474, 2507, 2508, 2475,  380, 2509, 2476,
     2510, 2478,  380,  380,  380, 2479,  380, 2477, 2511,  380,
     2512,  380,  380,  380,  380,  380,  380,  380, 2480, 2513,
      380, 2514,  380,  380,  380,  380,  380,  380,  380, 2515,
     2516, 2517, 2481,  380,  380,  380,  380, 2518, 2519,  380,
     2520,  380,  380,  380,  380,  380,  380, 2521, 2522, 2482,
      380, 2523, 2483, 2524, 2484,  380,  380,  380,  380, 2485,

     2525,  380, 2526,  380,  380,  380,  380,  380,  380,  380,
     2527, 2530,  380, 2528,  380,  380,  380,  380,  380,  380,
      380, 2529, 2531,  380, 2532,  380,  380,  380,  380,  380,
      380,  380, 2533, 2534, 2535, 2536,  380,  380,  380, 2537,
     2538, 2539, 2495, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
     2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2496,
     2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565,
     2566, 2497, 2567, 2568, 2569, 2498, 2570, 2571, 2572, 2573,
     2574, 2575, 2576, 2499, 2585, 2586, 2587,  509, 2590, 2591,
      509, 2500,  509,  509,  509,  509,  509,  509, 2592,  509,

     2593, 2594,  509, 2595,  509,  509,  509,  509,  509,  509,
      509, 2596, 2597,  509, 2598,  509,  509,  509,  509,  509,
      509,  509, 2599, 2600, 2601, 2588,  509,  509,  509, 2589,
     2577, 2602, 2603, 2578, 2579, 2604,  509, 2580, 2605, 2606,
     2607,  509,  509,  509, 2608, 2609, 2610, 2611, 2612, 2613,
     2614, 2615, 2616, 2581, 2617, 2618, 2582, 2619, 2583, 2584,
     2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629,
     2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
     2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
     2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659,

     2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
     2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
     2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
     2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
     2700, 2705, 2706, 2701, 2707, 2708, 2709, 2710, 2711, 2712,
     2713, 2714, 2702, 2703, 2715, 2716, 2717, 2718, 2719, 2704,
     2720, 2721,  734,  734,  734,  734,  734,  734,  734,  734,
      734,  734,  734,  734,  734,  734,  734,  734,  734,  734,
      734,  734,  734,  734,  734,  734, 2723,  734,  734,  762,
     2728, 2729,  762, 2725, 2724,  734, 2722, 2731, 2732, 2746,

      762,  762, 2747, 2748, 2752, 2726, 2735, 2733, 2727,  762,
     2736, 2730,  762,  762, 2749, 2734, 2753,  734,  734, 2750,
     2754, 2755,  734, 2751, 2745, 2739,  762, 2740,  734, 2763,
      734, 2764, 2765, 2761, 2766, 2743, 2767, 2768, 2769, 2770,
     2742, 2771, 2772, 2741, 2773, 2738, 2757, 2774, 2737, 2744,
     2758, 2760, 2775, 2776, 2777, 2756, 2778, 2779, 2780, 2783,
     2759, 2784, 2785, 2781, 2786, 2787, 2789, 2762, 2790, 2791,
     2792, 2793, 2794, 2795, 2796, 2782, 2797, 2798, 2799, 2800,
     2801, 2802, 2803, 2804, 2805, 2806, 2788, 2807,  380, 2818,
     2819,  380, 2820,  380,  380,  380,  380,  380,  380,  380,

     2821, 2822,  380, 2823,  380,  380,  380,  380,  380,  380,
     2824,  380, 2825, 2826,  380, 2830,  380,  380,  380,  380,
      380,  380, 2831, 2832,  380, 2808, 2833,  380, 2809,  380,
      380,  380,  380,  380,  380, 2834, 2835, 2836, 2837, 2838,
     2839, 2840, 2810, 2841, 2842, 2811, 2812,  380, 2843, 2813,
      380, 2844,  380,  380,  380,  380,  380,  380,  380, 2845,
     2846,  380, 2847,  380,  380,  380,  380,  380,  380,  380,
     2848, 2849,  380, 2850,  380,  380,  380,  380,  380,  380,
     2851, 2816, 2852,  380, 2814, 2853,  380, 2815,  380,  380,
      380,  380,  380,  380, 2854,  380, 2855, 2856,  380, 2817,

      380,  380,  380,  380,  380,  380, 2857, 2858, 2859, 2860,
     2861, 2862, 2863, 2864, 2865, 2867, 2866, 2827, 2868, 2869,
     2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879,
     2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889,
     2890, 2891, 2892, 2828, 2893, 2896, 2829, 2897, 2898, 2899,
     2900, 2901, 2902, 2911, 2912,  509, 2913, 2894,  509, 2895,
      509,  509,  509,  509,  509,  509,  509, 2914, 2915,  509,
     2916,  509,  509,  509,  509,  509,  509,  509, 2917, 2918,
      509, 2919,  509,  509,  509,  509,  509,  509, 2920, 2921,
     2922, 2923, 2903,  509, 2924, 2904,  509, 2925,  509,  509,

      509,  509,  509,  509, 2926, 2927, 2928, 2929, 2930, 2905,
     2931, 2932, 2906, 2933, 2907, 2934, 2909, 2908, 2935, 2936,
     2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946,
     2947, 2948, 2949, 2950, 2910, 2951, 2952, 2953, 2954, 2955,
     2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965,
     2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975,
     2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985,
     2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995,
     2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005,
     3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015,

     3016, 3017, 3018, 3019, 3020, 3021, 3023, 3024, 3025, 3026,
     3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036,
     3037, 3038, 3039, 3040, 3041, 3022,  734,  734,  734,  734,
      734,  734,  734,  734,  734,  734, 3042,  734,  734,  734,
      734,  734,  734,  734,  734,  734,  734,  734,  734,  734,
     3054, 3064,  734,  734, 3049,  734, 3050,  762,  762, 3043,
      762, 3067, 3044, 3052, 3048, 3045, 3046, 3047, 3069,  762,
     3070,  762, 3065, 3068, 3053, 3071,  762, 3073,  762, 3051,
     3072,  734,  734, 3074,  734,  734,  734,  762,  734, 3056,
      734, 3057, 3084, 3066, 3076, 3075, 3058, 3085, 3086, 3087,

     3088, 3062, 3060, 3089, 3090, 3055, 3091, 3061, 3059, 3092,
     3093, 3094, 3095, 3063, 3096, 3083, 3097, 3098, 3099, 3078,
     3100, 3079, 3101, 3102, 3103, 3104, 3077, 3082, 2787, 3105,
     3080, 3081, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113,
     3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 2788,
     3123,  380, 3132, 3133,  380, 3134,  380,  380,  380,  380,
      380,  380,  380, 3135, 3136,  380, 3137,  380,  380,  380,
      380,  380,  380,  380, 3124, 3138,  380, 3125,  380,  380,
      380,  380,  380,  380,  380, 3139, 3140,  380, 3141,  380,
      380,  380,  380,  380,  380, 3142, 3143, 3144,  380, 3126,

     3145, 3146, 3127,  380,  380,  380,  380, 3128, 3147,  380,
     3129,  380,  380,  380,  380,  380,  380,  380, 3148, 3149,
      380, 3150,  380,  380,  380,  380,  380,  380, 3151, 3152,
     3153, 3154, 3155, 3156, 3157, 3158, 3130, 3159, 3160, 3161,
     3162, 3163, 3164, 3165, 3131, 3166, 3167, 3168, 3169, 3170,
     3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180,
     3181, 3182, 3183, 3184, 3185, 3186, 3187, 3189, 3190, 3191,
     3192, 3193, 3188, 3194, 3195, 3196, 3197, 3198, 3199, 3200,
     3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208, 3209, 3210,
     3211, 3212, 3213, 3214,  509, 3223, 3224,  509, 3225,  509,

      509,  509,  509,  509,  509,  509, 3226, 3227,  509, 3228,
      509,  509,  509,  509,  509,  509,  509, 3215, 3229, 3230,
     3216,  509,  509,  509,  509, 3231, 3232,  509, 3233,  509,
      509,  509,  509,  509,  509, 3234, 3235, 3236, 3237, 3219,
     3238, 3239, 3217,  509, 3240, 3218, 3241, 3220,  509,  509,
      509, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250,
     3251, 3252, 3253, 3254, 3255, 3221, 3256, 3257, 3258, 3259,
     3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269,
     3270, 3222, 3271, 3272, 3273, 3274, 3275, 3276, 3277, 3278,
     3279, 3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3288,

     3289, 3290, 3291, 3292, 3293, 3294, 3295, 3296, 3297, 3298,
     3299, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3308,
     3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3317, 3318,
     3319, 3320, 3321, 3322, 3323, 3324, 3325, 3326, 3327, 3328,
     3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338,
     3339, 3340, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3348,
     3349, 3350, 3351, 3352,  734,  734,  734,  734,  734,  734,
      734,  734,  734,  734,  734,  734,  734,  734,  734,  734,
      734,  734,  734,  734, 3353,  734, 3064,  734,  734,  734,
     3356,  734, 3375, 3355, 3358, 3361, 3360,  762, 3364, 3363,

     3376, 3377,  762, 3379,  762, 3380, 3357, 3065, 3378, 3354,
      762, 3359,  762,  762,  762,  762,  734, 3381, 3362, 3382,
     3374,  734,  734,  734,  734,  734,  734, 3365,  734, 3367,
      734, 3392, 3393, 3394, 3395, 3366, 3370, 3371, 3373, 3396,
     3368, 3369, 3397, 3398, 3399, 3400, 3401, 3402, 3403, 3404,
     3372, 3405, 3406, 3390, 3407, 3408, 3383, 3410, 3411, 3412,
     3384, 3385, 3413, 3414, 3388, 3389, 3415, 3416, 3386, 3387,
     3391, 3409, 3417, 3418, 3419, 3420, 3421, 3422, 3423, 3424,
     3425, 3426, 3427, 3428, 3429,  380, 3438, 3439,  380, 3440,
      380,  380,  380,  380,  380,  380,  380, 3441, 3442,  380,

     3443,  380,  380,  380,  380,  380,  380,  380, 3444, 3445,
      380, 3446,  380,  380,  380,  380,  380,  380, 3447, 3432,
     3448, 3449, 3433, 3430,  380, 3450, 3431,  380, 3451,  380,
      380,  380,  380,  380,  380, 3452, 3453, 3454, 3455, 3456,
     3459, 3460, 3461, 3462, 3463, 3434, 3464, 3465, 3435, 3466,
     3467, 3468, 3469, 3470, 3437, 3457, 3458, 3471, 3472, 3473,
     3474, 3475, 3436, 3476, 3478, 3477, 3479, 3480, 3481, 3482,
     3483, 3484, 3485, 3486, 3487, 3488, 3489, 3490, 3491, 3492,
     3493, 3494, 3495, 3496, 3497, 3498, 3499, 3500, 3501, 3502,
     3503, 3504, 3505, 3506, 3507, 3508, 3509, 3510, 3511, 3512,

     3513, 3514, 3515, 3516, 3517, 3518, 3519, 3520, 3521, 3522,
     3523,  509, 3532, 3533,  509, 3534,  509,  509,  509,  509,
      509,  509,  509, 3535, 3536,  509, 3537,  509,  509,  509,
      509,  509,  509,  509, 3538, 3539,  509, 3540,  509,  509,
      509,  509,  509,  509, 3541, 3526, 3542, 3543, 3527, 3524,
      509, 3544, 3525,  509, 3545,  509,  509,  509,  509,  509,
      509, 3546, 3547, 3548, 3549, 3550, 3551, 3552, 3553, 3554,
     3559, 3528, 3555, 3560, 3529, 3561, 3562, 3556, 3563, 3564,
     3531, 3565, 3557, 3566, 3567, 3568, 3569, 3558, 3530, 3570,
     3571, 3575, 3576, 3577, 3578, 3572, 3579, 3580, 3581, 3582,

     3573, 3583, 3584, 3585, 3586, 3574, 3587, 3588, 3589, 3590,
     3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599, 3600,
     3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610,
     3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 3620,
     3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3630,
     3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639, 3640,
     3641, 3642, 3643, 3644, 3645, 3646, 3647, 3648, 3649, 3650,
     3651, 3652, 3653, 3654, 3655, 3656, 3657, 3658, 3659, 3660,
     3661, 3662, 3663, 3664,  734,  734,  734,  734, 3665,  734,
      734,  734,  734,  734,  734,  734,  734,  734,  734,  734,

      734,  734,  734,  734,  734,  734,  762,  734,  762, 3687,
      762, 3685, 3666, 3686, 3688, 3689, 3673,  762,  762,  762,
     3668, 3672, 3690, 3691,  762,  734,  734,  734, 3692,  734,
      734, 3669, 3670, 3667,  762, 3671,  734, 3702, 3684,  734,
      734,  734, 3703, 3704, 3705, 3706, 3707, 3708, 3709, 3710,
     3711, 3694, 3675, 3712, 3693, 3695, 3713, 3714, 3674, 3678,
     3677, 3681, 3680, 3676, 3698, 3699, 3696, 3679, 3683, 3700,
     3715, 3716, 3718, 3719, 3720, 3697, 3721, 3682, 3722, 3723,
     3724, 3701, 3725, 3726, 3717, 3727, 3728, 3729, 3730, 3731,
     3732, 3733, 3734, 3735, 3736,  380, 3745, 3746,  380, 3747,

      380,  380,  380,  380,  380,  380,  380, 3748, 3749,  380,
     3750,  380,  380,  380,  380,  380,  380,  380, 3751, 3752,
      380, 3753,  380,  380,  380,  380,  380,  380, 3754, 3755,
     3756, 3757,  380, 3737, 3758,  380, 3738,  380,  380,  380,
      380,  380,  380, 3759, 3739, 3760, 3761, 3740, 3762, 3763,
     3764, 3765, 3766, 3767, 3768, 3741, 3769, 3770, 3742, 3743,
     3771, 3772, 3773, 3774, 3775, 3776, 3777, 3744, 3778, 3779,
     3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789,
     3790, 3791, 3792, 3793, 3794, 3795, 3796, 3797, 3798, 3799,
     3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809,

     3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819,
     3820, 3821, 3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829,
      509, 3838, 3839,  509, 3840,  509,  509,  509,  509,  509,
      509,  509, 3841, 3842,  509, 3843,  509,  509,  509,  509,
      509,  509,  509, 3844, 3845,  509, 3846,  509,  509,  509,
      509,  509,  509, 3847, 3848, 3849, 3850,  509, 3830, 3851,
      509, 3831,  509,  509,  509,  509,  509,  509, 3852, 3832,
     3853, 3854, 3833, 3855, 3856, 3857, 3858, 3859, 3860, 3861,
     3834, 3862, 3863, 3835, 3836, 3865, 3866, 3867, 3868, 3869,
     3864, 3870, 3837, 3871, 3872, 3873, 3874, 3875, 3876, 3877,

     3878, 3879, 3880, 3882, 3883, 3884, 3885, 3886, 3887, 3888,
     3881, 3889, 3891, 3892, 3893, 3890, 3894, 3895, 3896, 3897,
     3898, 3899, 3900, 3901, 3902, 3903, 3904, 3905, 3906, 3907,
     3908, 3909, 3910, 3911, 3912, 3913, 3914, 3915, 3916, 3917,
     3918, 3919, 3920, 3921, 3922, 3923, 3924, 3925, 3926, 3927,
     3928, 3929, 3930, 3931, 3932, 3933, 3934, 3935, 3936, 3937,
     3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947,
     3948, 3949, 3950, 3951, 3952, 3953, 3954, 3955, 3956, 3957,
     3958, 3959, 3960, 3961, 3962, 3963, 3964, 3965, 3966, 3967,
     3968, 3969, 3970, 3971, 3972,  734,  734,  734,  734,  734,

      734,  734,  734,  734,  734,  734,  734,  734,  734,  734,
      734,  734,  734,  734,  734,  762,  762,  734,  762,  762,
     3990, 3991, 3976, 3992, 3993,  762, 3978,  762, 3997,  762,
     3994,  734, 3995, 3996, 3975, 3973,  734, 3974,  734,  762,
     3977, 3989,  734,  734,  734,  734,  734, 4007, 4008, 4009,
     4010, 3998, 4011, 4012, 3979, 4013, 3982, 4014, 3983, 4015,
     4006, 3986, 3985, 4017, 3987, 4018, 4019, 4001, 4002, 4021,
     3980, 3981, 4022, 4023, 4024, 4025, 3999, 3988, 4000, 3984,
     4026, 4027, 4028, 4029, 4003, 4004, 4005, 4020, 4030, 4031,
     4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039, 4048,  380,

     4049, 4050,  380, 4016,  380,  380,  380,  380,  380,  380,
      380, 4051, 4052,  380, 4053,  380,  380,  380,  380,  380,
      380, 4054, 4055, 4056, 4057,  380, 4040, 4058,  380, 4041,
      380,  380,  380,  380,  380,  380,  380, 4059, 4060,  380,
     4061,  380,  380,  380,  380,  380,  380, 4062, 4042, 4063,
     4064, 4043, 4044, 4065, 4066, 4045, 4067, 4068, 4069, 4070,
     4071, 4072, 4073, 4074, 4047, 4075, 4076, 4077, 4046, 4078,
     4079, 4080, 4081, 4083, 4084, 4085, 4086, 4087, 4088, 4082,
     4089, 4090, 4091, 4092, 4093, 4094, 4095, 4096, 4097, 4098,
     4099, 4100, 4101, 4102, 4103, 4104, 4105, 4106, 4107, 4108,

     4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118,
     4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128,
     4129, 4130, 4131, 4132,  509, 4141, 4142,  509, 4143,  509,
      509,  509,  509,  509,  509,  509, 4144, 4145,  509, 4146,
      509,  509,  509,  509,  509,  509, 4147, 4148, 4149, 4150,
      509, 4133, 4151,  509, 4134,  509,  509,  509,  509,  509,
      509,  509, 4152, 4153,  509, 4154,  509,  509,  509,  509,
      509,  509, 4155, 4135, 4156, 4157, 4136, 4137, 4158, 4159,
     4138, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4140,
     4168, 4169, 4170, 4139, 4171, 4172, 4173, 4174, 4175, 4176,

     4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186,
     4187, 4188, 4189, 4190, 4191, 4192, 4193, 4195, 4196, 4197,
     4198, 4199, 4200, 4201, 4194, 4202, 4203, 4204, 4205, 4206,
     4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216,
     4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226,
     4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236,
     4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246,
     4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256,
     4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266,
     4267, 4268, 4269, 4270, 4271, 4272,  734,  734,  734,  734,

      734,  734,  734,  734,  734,  734,  734,  734,  734,  734,
      734,  734, 4285,  734, 4288, 4289,  734,  762,  762, 4292,
      762,  762, 4290, 4291, 4293,  762, 4294,  762, 4281,  734,
      762, 4295, 4276, 4286,  734, 4273,  734, 4274, 4275,  762,
      734,  734,  734, 4296,  734, 4305,  734, 4306, 4307, 4308,
     4287, 4309, 4310, 4311, 4312, 4015, 4280, 4313, 4019, 4314,
     4315, 4316, 4317, 4284, 4318, 4319, 4320, 4277, 4304, 4297,
     4321, 4279, 4282, 4278, 4283, 4303, 4298, 4322, 4323, 4020,
     4299, 4300, 4301, 4324, 4302, 4325, 4326, 4327, 4328, 4329,
     4330,  380, 4339, 4340,  380, 4341,  380,  380,  380,  380,

      380,  380,  380, 4342, 4343,  380, 4344,  380,  380,  380,
      380,  380,  380,  380, 4345, 4346, 4347, 4348,  380,  380,
      380, 4349, 4350, 4331, 4351, 4352, 4332, 4353,  380, 4333,
     4354,  380, 4334,  380,  380,  380,  380,  380,  380, 4355,
     4356,  380, 4357, 4358, 4359, 4335,  380,  380,  380, 4360,
     4361, 4362, 4363, 4364, 4365, 4366, 4337, 4367, 4368, 4369,
     4336, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377, 4378,
     4379, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4338, 4387,
     4388, 4389, 4390, 4391, 4392, 4393, 4394, 4395, 4396, 4397,
     4398, 4399, 4400, 4401, 4402, 4403, 4404, 4405, 4406, 4407,

     4408, 4409, 4410, 4412, 4413, 4414, 4415, 4416, 4411, 4417,
     4418, 4419, 4420, 4421, 4422,  509, 4431, 4432,  509, 4433,
      509,  509,  509,  509,  509,  509,  509, 4434, 4435,  509,
     4436,  509,  509,  509,  509,  509,  509,  509, 4437, 4438,
     4439, 4440,  509,  509,  509, 4441, 4442, 4423, 4443, 4444,
     4424, 4445,  509, 4425, 4446,  509, 4426,  509,  509,  509,
      509,  509,  509, 4447, 4448,  509, 4449, 4450, 4451, 4427,
      509,  509,  509, 4452, 4453, 4454, 4455, 4456, 4457, 4458,
     4429, 4459, 4460, 4461, 4428, 4462, 4463, 4464, 4465, 4466,
     4467, 4468, 4469, 4470, 4471, 4472, 4473, 4474, 4475, 4476,

     4477, 4478, 4430, 4479, 4480, 4481, 4482, 4483, 4484, 4485,
     4486, 4487, 4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495,
     4496, 4497, 4498, 4499, 4500, 4501, 4502, 4503, 4504, 4505,
     4507, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4515, 4516,
     4517, 4518, 4519, 4520, 4521, 4522, 4523, 4524, 4506, 4525,
     4526, 4527, 4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535,
     4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 4544, 4545,
     4546, 4547, 4548, 4549, 4550, 4551, 4552, 4553, 4554, 4555,
     4556, 4557, 4558, 4559,  734,  734,  734,  734,  734,  734,
      734,  734,  734,  734,  734,  734, 4285,  734,  734,  734,

     4569,  762, 4570,  762, 4571, 4572, 4573,  762, 4575, 4563,
      762,  762,  734, 4560, 4561, 4281,  762, 4286, 4574,  762,
     4562,  762,  734,  734,  734, 4576,  734,  734,  734,  734,
     4586,  734, 4587, 4588, 4589, 4590, 4591, 4567, 4565, 4592,
     4593, 4578, 4564, 4566, 4594, 4595, 4596, 4597, 4598, 4599,
     4600, 4568, 4579, 4601, 4602, 4603, 4582, 4583, 4585, 4604,
     4605, 4577, 4606, 4584, 4580, 4607, 4581, 4608,  380, 4616,
     4617,  380, 4618,  380,  380,  380,  380,  380,  380,  380,
     4619, 4620,  380, 4621,  380,  380,  380,  380,  380,  380,
     4622, 4623,  380, 4609, 4624,  380, 4610,  380,  380,  380,

      380,  380,  380,  380, 4625, 4626, 4627, 4628,  380,  380,
      380, 4611, 4629, 4630, 4612, 4631,  380, 4613, 4632, 4633,
     4614,  380,  380,  380, 4636, 4637, 4638, 4639, 4640, 4641,
     4642, 4634, 4643, 4644, 4635, 4645, 4646, 4647, 4648, 4649,
     4615, 4650, 4651, 4652, 4653, 4654, 4655, 4656, 4657, 4658,
     4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 4667, 4668,
     4669, 4670, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4678,
     4679, 4680, 4681, 4682, 4683, 4684, 4685, 4686, 4687, 4688,
     4689, 4690, 4691, 4692, 4693, 4694, 4695, 4696, 4697, 4698,
      509, 4706, 4707,  509, 4708,  509,  509,  509,  509,  509,

      509,  509, 4709, 4710,  509, 4711,  509,  509,  509,  509,
      509,  509, 4712, 4713,  509, 4699, 4714,  509, 4700,  509,
      509,  509,  509,  509,  509,  509, 4715, 4716, 4718, 4719,
      509,  509,  509, 4701, 4717, 4720, 4702, 4721,  509, 4703,
     4722, 4723, 4704,  509,  509,  509, 4724, 4725, 4726, 4727,
     4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737,
     4738, 4739, 4705, 4740, 4742, 4743, 4744, 4745, 4746, 4747,
     4748, 4749, 4750, 4751, 4752, 4753, 4754, 4755, 4741, 4757,
     4758, 4759, 4760, 4761, 4762, 4763, 4764, 4765, 4766, 4767,
     4768, 4769, 4756, 4770, 4771, 4772, 4773, 4774, 4775, 4776,

     4777, 4778, 4779, 4780, 4781, 4782, 4783, 4784, 4785, 4786,
     4787, 4788, 4789, 4790, 4791, 4792, 4793, 4794, 4795, 4796,
     4797, 4798, 4799, 4800, 4801, 4802, 4803, 4804, 4805, 4806,
     4807, 4808, 4809, 4810, 4811, 4812, 4813, 4814, 4815, 4816,
     4817, 4818, 4819, 4820, 4821, 4822, 4823, 4824, 4825, 4826,
     4827, 4828, 4829,  734,  734,  734,  734,  734,  734,  734,
      734,  734, 4838, 4839, 4840,  762, 4841,  762, 4842,  762,
      762,  762, 4843, 4844,  762,  734,  762, 4831,  734,  734,
      762,  734,  734,  734,  734,  734, 4853, 4830, 4854, 4855,
     4856, 4832,  734, 4857, 4858, 4859, 4862, 4860, 4863, 4864,

     4865, 4866, 4867, 4868, 4834, 4869, 4870, 4871, 4847, 4872,
     4873, 4837, 4845, 4835, 4848, 4846, 4849, 4850, 4861, 4851,
     4874,  380, 4833, 4852,  380, 4836,  380,  380,  380,  380,
      380,  380,  380, 4881, 4882,  380, 4883,  380,  380,  380,
      380,  380,  380,  380, 4884, 4885,  380, 4886,  380,  380,
      380,  380,  380,  380, 4887, 4888, 4889, 4877, 4875,  380,
     4878, 4876, 4890, 4891,  380,  380,  380, 4892, 4893, 4894,
     4895, 4896, 4897, 4898, 4899, 4900, 4901, 4902, 4903, 4904,
     4879, 4905, 4906, 4880, 4907, 4908, 4909, 4910, 4911, 4912,
     4913, 4914, 4915, 4916, 4917, 4918, 4919, 4920, 4921, 4922,

     4923, 4924, 4925, 4926, 4927, 4928, 4929, 4930, 4931, 4932,
     4933, 4934, 4935, 4936, 4937, 4938, 4939, 4940, 4941, 4942,
     4943, 4944, 4945, 4946, 4947, 4948, 4949, 4950, 4958, 4951,
     4959, 4960, 4952, 4953, 4954, 4961, 4962, 4963,  509, 4955,
     4970, 4971, 4972,  509,  509,  509, 4956,  509, 4973, 4957,
     4974,  509,  509,  509,  509,  509,  509,  509,  509,  509,
      509,  509,  509,  509,  509,  509,  509,  509,  509,  509,
      509, 4975,  509,  509,  509, 4964, 4966, 4976, 4977, 4978,
     4967, 4979, 4980, 4981, 4965, 4982, 4983, 4984, 4985, 4986,
     4987, 4988, 4989, 4990, 4991, 4992, 4968, 4993, 4994, 4995,

     4969, 4996, 4997, 4998, 4999, 5000, 5001, 5002, 5003, 5004,
     5005, 5006, 5007, 5008, 5009, 5010, 5011, 5012, 5013, 5014,
     5015, 5016, 5017, 5018, 5019, 5020, 5021, 5022, 5023, 5024,
     5025, 5026, 5027, 5028, 5029, 5030, 5031, 5032, 5033, 5034,
     5035, 5036, 5037, 5038, 5039, 5040, 5041, 5042, 5043, 5045,
     5046, 5047, 5048, 5049, 5050, 5051, 5052, 5053, 5054, 5055,
     5056, 5057, 5058, 5059, 5060, 5044, 5061, 5062, 5063, 5064,
     5065, 5066, 5067, 5068, 5069, 5070, 5071, 5072, 5073, 5074,
     5075, 5076, 5077, 5078, 5079, 5080, 5081, 5082, 5083, 5084,
      734,  734,  734,  734,  734,  734,  734, 5092,  734,  762,

      762, 5096, 5097, 5094, 5095,  762,  734,  762,  762,  762,
      762, 5098, 5099,  734,  734,  734,  734, 5085, 5093,  734,
      734,  734, 5107, 5108, 5109, 5110, 5087, 5111, 5112, 4860,
     5086, 5113, 5114, 5100, 5115, 5116, 5117, 5118, 5121, 5122,
     5101, 5123, 5091, 5104, 5124, 5125, 5105, 5088, 5102, 5103,
     4861,  380, 5126, 5127, 5090, 5128,  380,  380,  380, 5089,
     5106,  380, 5129, 5130,  380, 5131,  380,  380,  380,  380,
      380,  380,  380, 5132, 5133,  380, 5134,  380,  380,  380,
      380,  380,  380,  380, 5135, 5136, 5137, 5138,  380,  380,
      380, 5139, 5140, 5141, 5142, 5143, 5144, 5145, 5146, 5147,

     5148, 5119, 5149, 5150, 5151, 5152, 5153, 5154, 5155, 5120,
     5156, 5157, 5158, 5159, 5160, 5161, 5163, 5164, 5165, 5162,
     5166, 5167, 5168, 5169, 5170, 5171, 5172, 5173, 5174, 5175,
     5176, 5177, 5178, 5179, 5180, 5181, 5182, 5183, 5184, 5185,
     5187, 5188, 5191, 5189, 5186, 5190, 5192, 5193, 5194, 5195,
     5196, 5197,  509, 5200, 5201,  509, 5202,  509,  509,  509,
      509,  509,  509,  509, 5203, 5204,  509, 5205,  509,  509,
      509,  509,  509,  509,  509, 5206, 5207,  509, 5208,  509,
      509,  509,  509,  509,  509, 5209, 5210, 5211, 5212, 5213,
     5214, 5215, 5216, 5217, 5218, 5219, 5220, 5221, 5222, 5223,

     5198, 5224, 5225, 5199, 5226, 5227, 5228, 5229, 5230, 5231,
     5232, 5233, 5234, 5235, 5236, 5237, 5238, 5239, 5240, 5241,
     5242, 5243, 5244, 5245, 5246, 5247, 5248, 5249, 5250, 5251,
     5252, 5253, 5254, 5255, 5256, 5257, 5258, 5259, 5260, 5261,
     5262, 5263, 5264, 5265, 5266, 5267, 5268, 5269, 5270, 5271,
     5272, 5273, 5274, 5275, 5276, 5277, 5278, 5279, 5280, 5281,
     5283, 5284, 5282, 5285, 5286, 5287, 5288, 5289, 5290, 5291,
     5292, 5293, 5294, 5295, 5296, 5297,  734,  734,  734,  734,
      734,  734,  734, 5092,  734,  734,  762,  762,  762,  762,
      762,  762, 5302, 5303,  734,  734,  734,  734,  734,  734,

      734, 5310, 5311, 5298, 5093, 5312,  380, 5313, 5314,  380,
     5315,  380,  380,  380,  380,  380,  380, 5316, 5317, 5318,
     5319, 5306, 5320, 5321, 5307, 5322, 5300, 5323, 5324, 5325,
     5326, 5327, 5328, 5301, 5304, 5305, 5329, 5308, 5309, 5330,
     5331, 5332, 5333, 5334, 5335, 5336, 5299, 5337, 5338, 5339,
     5340, 5341, 5342, 5343, 5344, 5345, 5346, 5347, 5348, 5349,
     5350, 5351, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359,
     5360, 5361, 5362, 5363, 5364, 5365, 5366, 5367, 5368, 5369,
     5370, 5371, 5372, 5373, 5374, 5375, 5376, 5377, 5378, 5379,
      509, 5380, 5381,  509, 5382,  509,  509,  509,  509,  509,

      509, 5383, 5384, 5385, 5386, 5387, 5388, 5389, 5390, 5391,
     5392, 5393, 5394, 5395, 5396, 5397, 5398, 5399, 5400, 5401,
     5402, 5403, 5404, 5405, 5406, 5407, 5408, 5409, 5410, 5411,
     5412, 5413, 5414, 5415, 5416, 5417, 5418, 5419, 5420, 5421,
     5422, 5423, 5424, 5425, 5426, 5427, 5428, 5429, 5430, 5431,
     5432, 5433, 5434, 5435, 5436, 5437, 5438, 5439, 5440, 5441,
     5442, 5443, 5444, 5445, 5446, 5447, 5448, 5449, 5450, 5451,
     5452, 5453, 5454, 5455, 5456, 5457, 5458, 5459, 5460, 5461,
     5462, 5463, 5464, 5465, 5466,  734,  734,  734,  734,  762,
      762,  734,  734,  734,  734,  734,  734, 5470, 5471, 5472,

     5473, 5474, 5475, 5476, 5477, 5478, 5479, 5480, 5481, 5482,
     5483, 5484, 5485, 5486, 5487, 5488, 5489, 5490, 5491, 5492,
     5493, 5494, 5495, 5496, 5497, 5498, 5499, 5500, 5501, 5502,
     5503, 5504, 5468, 5469, 5505, 5506, 5467, 5507, 5508, 5509,
     5510, 5511, 5512, 5513, 5514, 5515, 5516, 5517, 5518, 5519,
     5520, 5521, 5522, 5529, 5523, 5530, 5531, 5524, 5525, 5526,
     5532, 5533, 5534, 5535, 5527, 5536, 5537, 5538, 5539, 5540,
     5541, 5528, 5542, 5543, 5544, 5545, 5546, 5547, 5548, 5549,
     5550, 5551, 5552, 5553, 5554, 5555, 5556, 5557, 5558, 5559,
     5560, 5561, 5562, 5563, 5564, 5565, 5566, 5567, 5568, 5569,

     5570, 5571, 5572, 5573, 5574, 5575, 5576, 5577, 5578, 5579,
     5580, 5581, 5582, 5583, 5584, 5585, 5586, 5587, 5588, 5589,
     5590, 5591, 5592, 5593, 5594, 5595, 5596, 5597, 5598, 5599,
     5600, 5601, 5602, 5603, 5604,  734,  734,  734, 5605, 5606,
     5607, 5608, 5609, 5610, 5611, 5612, 5613, 5614, 5615, 5616,
     5617, 5618, 5619, 5620, 5621, 5622, 5623, 5624, 5625, 5626,
     5627, 5628, 5629, 5630, 5631, 5632, 5633, 5634, 5635, 5636,
     5637, 5638, 5639, 5640, 5641, 5642, 5643, 5644, 5645, 5646,
     5647, 5648, 5649, 5650, 5651, 5652, 5653, 5654, 5656, 5655,
     5657, 5658, 5659, 5660, 5661, 5662, 5663, 5664, 5665, 5666,

     5667, 5668, 5669, 5670, 5671, 5672, 5673, 5674, 5675, 5676,
     5677, 5678, 5679, 5680, 5681, 5682, 5683, 5684, 5685, 5686,
     5687, 5688, 5689, 5690, 5691, 5692, 5693, 5694, 5695, 5696,
     5697, 5698, 5699, 5700, 5701, 5702, 5703, 5704, 5705, 5706,
     5707, 5708, 5709, 5710, 5711, 5712, 5713, 5714, 5715, 5716,
     5717, 5718, 5719, 5720, 5721, 5722, 5723, 5724, 5725, 5726,
     5727, 5728, 5729, 5730, 5731, 5732, 5733, 5734, 5735, 5736,
     5737, 5738, 5739, 5740, 5741, 5742, 5743, 5744, 5745, 5746,
     5747, 5748, 5749, 5750, 5751, 5752, 5753, 5754, 5755, 5756,
     5757, 5758, 5759, 5760, 5761, 5762, 5763, 5764, 5765, 5766,

     5767, 5768, 5769, 5770, 5771, 5772, 5773, 5774, 5775, 5776,
     5777, 5778, 5779, 5780, 5781, 5782, 5783, 5784, 5785, 5786,
     5787, 5788, 5789, 5790, 5791, 5792, 5793, 5794, 5795, 5796,
     5797, 5798, 5799, 5800, 5801, 5802, 5803, 5804, 5805, 5806,
     5807, 5808, 5809, 5810, 5811, 5812, 5813, 5814, 5815, 5816,
     5817, 5818, 5819, 5820, 5821, 5822, 5823, 5824, 5825, 5826,
     5827, 5828, 5829, 5830, 5831, 5832, 5833, 5834, 5835, 5836,
     5837, 5838, 5839, 5840, 5841, 5842, 5843, 5848, 5844, 5849,
     5850, 5845, 5846, 5847, 5851, 5852, 5853, 5854, 5855, 5856,
     5857, 5858, 5859, 5860, 5861, 5862, 5863, 5864, 5865, 5866,

     5867, 5868, 5869, 5870, 5871, 5872, 5873, 5874, 5875, 5876,
     5877, 5878, 5879, 5880, 5882, 5883, 5884, 5885, 5886, 5887,
     5888, 5889, 5881, 5890, 5891, 5892, 5893, 5894, 5895, 5896,
     5897, 5898, 5899, 5900, 5901, 5902, 5903, 5904, 5905, 5906,
     5907, 5908, 5909, 5910, 5911, 5912, 5913, 5914, 5915, 5916,
     5917, 5918, 5919, 5920, 5921, 5922, 5924, 5925, 5926, 5927,
     5928, 5929, 5930, 5931, 5923, 5932, 5933, 5934, 5935, 5936,
     5937, 5938, 5939, 5940, 5941, 5942, 5943, 5944, 5945, 5946,
     5947, 5948, 5949, 5950, 5951, 5952, 5953, 5954, 5955, 5956,
     5957, 5958, 5959, 5960, 5961, 5962, 5963, 5964, 5965, 5966,

     5967, 5968, 5969, 5970, 5971, 5972, 5973, 5974, 5975, 5976,
     5977, 5978, 5979, 5980, 5981, 5982, 5983, 5984, 5985, 5986,
     5987, 5988, 5989, 5990, 5991, 5992, 5993, 5994, 5995, 5996,
     5997, 5998, 5999, 6000, 6001, 6002, 6003, 6004, 6005, 6006,
     6007, 6008, 6009, 6010, 6011, 6012, 6013, 6014, 6015, 6016,
     6017, 6018, 6019, 6020, 6021, 6022, 6023, 6024, 6025, 6026,
     6027, 6028, 6029, 6030, 6031, 6032, 6033, 6034, 6035, 6036,
     6037, 6038, 6039, 6040, 6041, 6042, 6043, 6044, 6045, 6046,
     6047, 6048, 6049, 6050, 6051, 6052, 6053, 6054, 6055, 6056,
     6057, 6058, 6059, 6060, 6061, 6062, 6063, 6064, 6065, 6066,

     6067, 6068, 6069, 6070, 6071, 6072, 6073, 6074, 6075, 6076,
     6077, 6078, 6079, 6080, 6081, 6082, 6083, 6084, 6085, 6086,
     6087, 6088, 6089, 6090, 6091, 6092, 6093, 6094, 6095, 6096,
     6097, 6098, 6099, 6100, 6101, 6102, 6103, 6104, 6105, 6106,
     6107, 6108, 6109, 6110, 6111, 6112, 6113, 6114, 6115, 6117,
     6118, 6119, 6120, 6121, 6122, 6123, 6124, 6125, 6126, 6127,
     6128, 6129, 6130, 6116, 6131, 6132, 6133, 6134, 6135, 6136,
     6137, 6138, 6139, 6140, 6141, 6142, 6143, 6144, 6145, 6146,
     6147, 6148, 6149, 6150, 6151, 6152, 6153, 6154, 6155, 6156,
     6157, 6158, 6159, 6160, 6161, 6162, 6163, 6164, 6165, 6166,

     6167, 6168, 6169, 6170, 6171, 6172, 6173, 6174, 6175, 6176,
     6177, 6178, 6179, 6180, 6181, 6182, 6183, 6184, 6185, 6186,
     6187, 6188, 6189, 6190, 6191, 6192, 6193, 6194, 6195, 6196,
     6197, 6198, 6199, 6200, 6201, 6202, 6203, 6204, 6205, 6206,
     6207, 6208, 6209, 6210, 6211, 6212, 6213, 6214, 6215, 6216,
     6217, 6218, 6219, 6220, 6221, 6222, 6223, 6224, 6225, 6226,
     6227, 6228, 6229, 6230, 6231, 6232, 6233, 6234, 6235, 6236,
     6237, 6238, 6239, 6240, 6241, 6242, 6243, 6244, 6245, 6246,
     6247, 6248, 6249, 6250, 6251, 6252, 6253, 6254, 6255, 6256,
     6257, 6258, 6259, 6260, 6261, 6262, 6263, 6264, 6265, 6266,

     6267, 6268, 6269, 6270, 6271, 6272, 6273, 6274, 6275, 6276,
       75,   75,   75,   75,  160,  160,  160,  160,  203,  203,
      203,  203,  327,  327,  327,  327,  367,  380,  380,  384,
      384,  448,  509,  509,  513,  513,  534,  614,  534,  534,
      535,  709,  535,  535,  723,  733,  733,  733,  733,  762,
      762,  762,  762, 1505, 1504, 1503, 1502, 1501, 1500, 1499,
     1498, 1495, 1494, 1493, 1492, 1491, 1490, 1489, 1488, 1487,
     1486, 1485, 1484, 1483, 1482, 1481, 1480, 1479, 1478, 1477,
     1476, 1475, 1474, 1473, 1470, 1469, 1468, 1467, 1464, 1463,
     1462, 1461, 1460, 1459, 1458, 1449, 1448, 1447, 1446, 1445,

     1444, 1443, 1442, 1441, 1440, 1434, 1433, 1432, 1431, 1430,
     1429, 1428, 1427, 1426, 1425, 1424, 1423, 1420, 1417, 1416,
     1415, 1414, 1411, 1407, 1404, 1403, 1402, 1401, 1400, 1394,
     1393, 1390, 1389, 1388, 1387, 1386, 1385, 1381, 1380, 1377,
     1376, 1375, 1374, 1373, 1372, 1371, 1370, 1369, 1368, 1365,
     1364, 1361, 1360, 1359, 1358, 1357, 1356, 1355, 1354, 1353,
     1352, 1351, 1350, 1349, 1348, 1347, 1346, 1345, 1344, 1343,
     1342, 1341, 1340, 1339, 1338, 1327, 1326, 1325, 1324, 1323,
     1322, 1321, 1305, 1304, 1303, 1302, 1301, 1300, 1299, 1298,
     1295, 1294, 1293, 1292, 1290, 1287, 1286, 1283, 1282, 1281,

     1280, 1279, 1276, 1275, 1274, 1273, 1272, 1271, 1270, 1269,
     1268, 1267, 1266, 1265, 1264, 1263, 1262, 1261, 1260, 1259,
     1258,  762,  734,  734, 1209, 1208, 1207, 1206, 1205, 1204,
     1203, 1202, 1201, 1198, 1197, 1196, 1195, 1194, 1193, 1192,
     1191, 1188, 1187, 1186, 1185, 1182, 1181, 1180, 1179, 1178,
     1175, 1174, 1171, 1167, 1166, 1165, 1164, 1163, 1162, 1161,
     1160, 1157, 1156, 1155, 1154, 1153, 1152, 1151, 1150, 1149,
     1148, 1147, 1146, 1145, 1142, 1141, 1140, 1139, 1138, 1135,
     1134, 1133, 1132, 1131, 1130, 1129, 1128, 1127, 1124, 1123,
     1122, 1121, 1118, 1117, 1116, 1115, 1112, 1111, 1110, 1109,

     1108, 1107, 1106, 1105, 1104, 1103, 1102, 1101, 1100, 1099,
     1098, 1097, 1096, 1095, 1094, 1093, 1092, 1091, 1090, 1087,
     1086, 1085, 1084, 1083, 1082, 1081, 1080, 1077, 1076, 1075,
     1074, 1073, 1072, 1069, 1068, 1067, 1066, 1065, 1064, 1063,
     1062, 1056, 1053, 1052, 1051, 1050, 1047, 1046, 1045, 1044,
     1041, 1040, 1037, 1036, 1035, 1029, 1028, 1027, 1026, 1025,
     1024, 1023, 1022, 1021, 1020, 1019, 1018, 1017, 1016, 1015,
     1014, 1013, 1012, 1011, 1010, 1009, 1008, 1007, 1006,  536,
     1005, 1004,  536,  999,  996,  995,  994,  993,  982,  981,
      980,  979,  978,  977,  976,  975,  957,  956,  955,  954,

      953,  948,  947,  946,  940,  939,  938,  934,  930,  929,
      928,  927,  926,  925,  924,  923,  922,  921,  920,  919,
      918,  911,  910,  909,  908,  907,  906,  903,  902,  901,
      899,  898,  896,  895,  892,  891,  890,  889,  888,  887,
      886,  885,  881,  880,  879,  878,  877,  876,  875,  874,
      873,  872,  871,  870,  869,  866,  865,  864,  863,  862,
      861,  849,  846,  845,  844,  843,  828,  825,  824,  823,
      822,  821,  820,  819,  818,  817,  816,  813,  812,  811,
      810,  809,  808,  802,  799,  794,  791,  782,  781,  778,
      777,  776,  764,  734,  734,  734,  734,  734,  734,  732,

      731,  730,  729,  726,  725,  724,  718,  717,  716,  715,
      712,  711,  710,  694,  691,  658,  634,  624,  623,  622,
      621,  620,  617,  616,  615,  580,  373,  370,  369,  368,
      536,  536,  341,  370,  369,  368,  341,  470,  456,  452,
      450,  449,  419,  341,  373,  370,  369,  368,  341, 6277,
      278,  278,   63, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,

     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277
    } ;

static yyconst flex_int16_t yy_chk[9629] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,   79,    0,    1,  185,   96,    0,  207,
      356,    1,   96,   96,   96,  356,    0,   79,    1,  160,
      185,    1,    1,  207,  160,  160,  160,    1,    7,  117,
        7,  122,    7,    9,    9,    8,   11,    8,    7,    8,
        7,    7,  265,    7,  117,    8,  265,    8,    8,  122,
        8,    9,    9,   11,    1,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
        2,    2,    2,    2,    2,    2,    2,    2,   12,  113,

        2,   10,   10,  118,   51,  143,    2,  113,   51,  118,
     1052,   51,  143,    2,   23,   12,    2,    2,   51,   10,
       10,   23,    2,   24,   23,   23,   23,   31,   32,   53,
       24,   53,  217,   24,   24,   24, 1053,  116,   31,   32,
      217,   53,   31,   32,   31,   32,   31,   32,  116,    2,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,

        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,

       17,   17,   17,  107,   17,   17, 1054,   17,  107,  107,
      107,   17,   17,  145,  140,   17,   17,   17,   17,   18,
       18,   18,  103,   18,   18,  145,   18,  103,  103,  103,
       18,   18,  140, 1055,   18,   18,   18,   18,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,  107,   33,   25,   33,   34,  319,   34,  103,   25,
       52,  155,   33,  155,   52,   34,   25,   52,   33,   25,
       25,   34,   35,   35,   52,   25,  319,   35,  119,   35,
       39,   36,   36,   39,   35,   35,   36,   35,   36,   35,

       35,   39,  119,   36,   36,  124,   36,   39,   36,   36,
     1056,  124,   25,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   26,   26,   26,  134,   54,   26,   54,
       37,  214,   40,  214,   26,   40,   37,   37,   37,   54,
       38,   26,   37,   40,   26,   26,   38,   38,   38,   40,
       26,  134,   38,   43,   43,   43,  125,   43,  120,   43,
      123,  114,  249,  123,  114,   43,   43,  114,  120,  114,
       43,   43,  125,   43,  142,  142,  249,   26,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,

       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
       29,   29,   29,   29,   29,   29,   97,  210,   29,  148,
      138,   97,   97,   97,   29,  180,   44,   44,   44,  182,

       44,   29,   44,  210,   29,   29,   45,  148,   44,   44,
       29,   46,   45,   44,   44,  138,   44,   46,   45,   97,
      180,   45,  139,   46,  182,  139,   46,   68,   68,   68,
       68,   68,   68,   68,   68,  256,  256,   29,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   47,  149,   30,   47,   47,   47,   47,  212,   30,
      226,  212,  149,   47,   47,   47,   30,  226,   47,   30,
       30, 1057,  150,   48,  236,   30,   48,   48,   48,   48,
      150,  236,  151,  150,  151,   48,   48,   48,  213,   70,

       48,   70,   70,   70,   70,   70,   70,   70,   70,  151,
      213, 1058,   30,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,   41,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,

       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,

       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,  215,  219,   59,  121,  121,  215,  255,  218,   59,
      255,  219,  268,  268,  271,  271,   59,  121,  121,   59,
       59,  121,  121,  218,   71,   59,   71,   71,   71,   71,
       71,   71,   71,   71,   87,   87,   87,   87,   87,   87,

       87,   87,   91, 1059,   91,   91,   91,   91,   91,   91,
       91,   91,   59,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60, 1061,   61,   60,  266,
      104,   81,   62,  266,   60,  104,  104,  104,  229,  152,
       81,   60,   61,  187,   60,   60,   81,   62,  189,  229,
       60,  154,  152,   81,  152,  152,   81,   81,   92,  231,
       92,   92,   92,   92,   92,   92,   92,   92,  187,  154,
      154,  153,  211,  189,   61,  225,  231,   60,  104,   62,
      748,  136,   61,  136,  153,  191,  153,   62,  225,   61,

      211,  104,   61,   61,   62,  136,   98,   62,   62,   69,
       69,   98,   98,   98,  191,  220,  191,   69,  136,  748,
       69,   69,   69,   69,   69,   69,   69,   69,  186,  262,
      220,   69,  222,   69,   69,   69,   69,   69,   69,   98,
      262,  186,   69,   69,   69,   69,   69,   99,  346,   69,
      222,  346,   99,   99,   99,  100,  234,   69,  270, 1062,
      100,  100,  100,   69,   98,   69,  186,   69,   99,   69,
      270,   69,  101,  234,  100,  102,  105,  101,  101,  101,
      106,  105,  105,  105,  102,  106,  106,  106,  100,  276,
      102,   99,  273,   99,  276,  101,  275,  102,  108,  100,

      102,  102,  109,  108,  108,  108,  273,  109,  109,  109,
      110,  275,  221,  100,  221,  110,  110,  110,  111,  277,
      101,  272,  272,  111,  111,  111,  112,  221,  106,  277,
      163,  112,  112,  112,  165,  163,  163,  163,  105,  165,
      165,  165,  108,  127,  127,  127,  127,  127,  127,  127,
      127,  163,  141,  257,  110,  261,  110,  165,  296,  257,
      109,  261,  111,  128,  128,  128,  128,  128,  128,  128,
      128,  281,  296,  281,  112,  129,  111,  129,  129,  129,
      129,  129,  129,  129,  129,  130,  141,  130,  130,  130,
      130,  130,  130,  130,  130,  141,  141,  146,  146,  233,

      141,  228,  332,  228,  224,  146,  147,  233,  146,  147,
      147,  233,  332,  146,  146,  146,  228,  147,  224,  147,
      352,  224,  147,  352,  224,  158,  147,  158,  158,  158,
      158,  158,  158,  158,  158,  159,  809,  159,  159,  159,
      159,  159,  159,  159,  159,  161,  580,  809,  162,  580,
      161,  161,  161,  162,  162,  162,  164,  166,  269,  269,
      269,  164,  164,  164,  216,  269,  166,  216,  258,  283,
      258,  216,  166,  258,  216,  164,  232,  345,  161,  166,
      232,  162,  166,  166,  345,  310,  232,  232,  283,  164,
      171,  171,  171,  171,  171,  171,  171,  171,  173,  310,

      173,  173,  173,  173,  173,  173,  173,  173,  174,  658,
      174,  174,  174,  174,  174,  174,  174,  174,  183,  188,
      486,  285,  351,  223,  209,  223,  183,  223,  188,  486,
      223,  658,  278,  209,  188,  223,  223,  278,  285,  209,
      351,  188,  466,  183,  188,  188,  209,  331,  466,  209,
      209,  183,  196,  196,  196,  196,  196,  196,  196,  196,
      198,  331,  198,  198,  198,  198,  198,  198,  198,  198,
      199,  330,  199,  199,  199,  199,  199,  199,  199,  199,
      230,  235,  339,  330,  765,  235,  349,  230,  230,  235,
      419,  349,  451,  230,  419,  235,  339,  765,  235,  235,

      238,  238,  238,  238,  238,  238,  238,  238,  239,  239,
      239,  239,  239,  239,  239,  239,  240,  451,  240,  240,
      240,  240,  240,  240,  240,  240,  241,  664,  241,  241,
      241,  241,  241,  241,  241,  241,  242,  664,  242,  242,
      242,  242,  242,  242,  242,  242,  243, 1064,  243,  243,
      243,  243,  243,  243,  243,  243,  244,  454,  244,  244,
      244,  244,  244,  244,  244,  244,  260,  492,  260,  263,
      263,  274,  354,  492,  260,  274,  263,  274,  264,  274,
      264,  263,  454,  260,  274,  263,  264,  264,  274,  274,
      279,  264,  264,  354,  284,  347,  279,  284,  378,  566,

      750,  284,  458,  347,  566, 1065,  284,  284,  279,  458,
      347, 1066,  378,  284,  287,  287,  287,  287,  287,  287,
      287,  287,  288,  288,  288,  288,  288,  288,  288,  288,
      289, 1067,  289,  289,  289,  289,  289,  289,  289,  289,
      290,  750,  290,  290,  290,  290,  290,  290,  290,  290,
      302,  302,  302,  302,  302,  302,  302,  302,  303,  303,
      303,  303,  303,  303,  303,  303,  304, 1069,  304,  304,
      304,  304,  304,  304,  304,  304,  305,  320,  305,  305,
      305,  305,  305,  305,  305,  305,  401,  320,  320,  320,
      320,  320,  320,  320,  320,  321,  321,  569,  480,  482,

      401,  480,  482,  321,  569, 1072,  321,  321,  321,  321,
      321,  321,  321,  321,  480,  482,  357,  321,  491,  321,
      321,  321,  321,  321,  321,  357,  574,  508,  321,  321,
      321,  321,  321,  384,  357,  321,  434,  491,  384,  384,
      384,  574,  434,  321,  508,  434,  526,  528,  322,  321,
      530,  321,  591,  321,  524,  321,  322,  321,  322,  322,
      322,  322,  322,  322,  322,  322,  323,  591,  524,  678,
      678,  526,  528,  531,  323,  530,  323,  323,  323,  323,
      323,  323,  323,  323,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  333,  767,  531,  598,

      767,  532,  694,  694,  327,  327,  327,  598, 1073,  335,
      333,  335,  335,  335,  335,  335,  335,  335,  335,  333,
      532,  385,  532,  745,  386,  333,  385,  385,  385,  386,
      386,  386,  333,  735,  487,  333,  333,  342,  342,  342,
      342,  342,  342,  342,  342,  344,  344,  487,  745,  700,
      638,  700,  385,  344,  638,  735,  386,  487,  327,  328,
      328,  328,  328,  328,  328,  328,  328,  328,  328,  328,
      328,  364,  364,  364,  364,  364,  364,  364,  364,  328,
      328,  328,  365,  643,  365,  365,  365,  365,  365,  365,
      365,  365,  763,  344,  763,  643,  328,  764,  764,  344,

     1074,  344,  772,  344,  743,  344,  366,  344,  366,  366,
      366,  366,  366,  366,  366,  366,  381,  381,  381,  381,
      381,  381,  381,  381,  387,  772,  648, 1075,  743,  387,
      387,  387,  382,  328,  382,  382,  382,  382,  382,  382,
      382,  382,  383,  648,  383,  383,  383,  383,  383,  383,
      383,  383,  388,  465,  465,  389,  691,  388,  388,  388,
      389,  389,  389,  390,  465,  691,  465,  753,  390,  390,
      390,  391,  388,  688,  688,  688,  391,  391,  391,  392,
     1076,  387,  393,  390,  392,  392,  392,  393,  393,  393,
      394,  766,  766,  395,  747,  394,  394,  394,  395,  395,

      395,  389,  912,  391,  912,  396,  755,  756,  403,  392,
      396,  396,  396,  403,  403,  403,  404,  751,  757,  405,
      768,  404,  404,  404,  405,  405,  405,  753,  768,  747,
      406, 1078,  747,  741,  395,  406,  406,  406,  751,  393,
      754,  407, 1079,  751,  408,  394,  407,  407,  407,  408,
      408,  408,  409,  758,  403,  410,  740,  409,  409,  409,
      410,  410,  410,  405,  411,  741,  755,  756,  741,  411,
      411,  411,  396,  404,  412,  746,  749,  513,  757,  412,
      412,  412,  513,  513,  513,  515, 1081,  774,  740,  406,
      515,  515,  515,  406,  754,  740,  746,  749,  407,  758,

      769,  408,  444,  444,  444,  444,  444,  444,  444,  444,
      411,  409,  774, 1082,  746,  769,  410,  515,  749,  412,
      445,  445,  445,  445,  445,  445,  445,  445,  446,  770,
      446,  446,  446,  446,  446,  446,  446,  446,  447,  943,
      447,  447,  447,  447,  447,  447,  447,  447,  498,  943,
      498,  783,  783,  498,  498,  498,  499,  800,  499,  783,
      498,  499,  499,  499,  770,  820,  498,  498,  499,  820,
      498,  771,  800, 1080,  499,  499,  510,  510,  510,  510,
      510,  510,  510,  510,  511, 1080,  511,  511,  511,  511,
      511,  511,  511,  511,  512,  941,  512,  512,  512,  512,

      512,  512,  512,  512,  514,  812,  771,  516,  941,  514,
      514,  514,  516,  516,  516,  517,  742,  744,  518,  812,
      517,  517,  517,  518,  518,  518,  519,  516,  915,  562,
      915,  519,  519,  519,  562,  514,  932,  742,  582,  932,
      562, 1000,  915,  582,  562,  742,  744,  517,  518,  582,
      562,  744,  742,  582,  901, 1083,  922,  832,  901,  582,
      922, 1084,  832,  832,  832, 1086, 1000,  519,  609,  609,
      609,  609,  609,  609,  609,  609,  610,  610,  610,  610,
      610,  610,  610,  610,  611, 1087,  611,  611,  611,  611,
      611,  611,  611,  611,  612,  832,  612,  612,  612,  612,

      612,  612,  612,  612,  613, 1090,  613,  613,  613,  613,
      613,  613,  613,  613,  705,  705,  705,  705,  705,  705,
      705,  705,  706,  706,  706,  706,  706,  706,  706,  706,
      707, 1091,  707,  707,  707,  707,  707,  707,  707,  707,
      708, 1092,  708,  708,  708,  708,  708,  708,  708,  708,
      719,  719,  719,  719,  719,  719,  719,  719,  720,  720,
      720,  720,  720,  720,  720,  720,  721, 1093,  721,  721,
      721,  721,  721,  721,  721,  721,  722,  736,  722,  722,
      722,  722,  722,  722,  722,  722,  752,  736,  736,  736,
      736,  736,  736,  736,  736,  739,  739,  897,  936,  759,

      833,  936,  773,  739, 1095,  833,  833,  833,  752,  759,
      759,  759,  759,  759,  759,  759,  759,  752, 1010,  760,
     1039, 1096,  897,  773, 1098, 1010,  752,  760, 1039,  760,
      760,  760,  760,  760,  760,  760,  760,  773,  833, 1099,
      834,  926, 1101,  739,  897,  834,  834,  834,  761,  739,
      926,  739, 1103,  739, 1104,  739,  761,  739,  761,  761,
      761,  761,  761,  761,  761,  761,  775,  834,  775,  775,
      775,  775,  775,  775,  775,  775,  814,  814,  814,  814,
      814,  814,  814,  814,  815, 1105,  815,  815,  815,  815,
      815,  815,  815,  815,  829,  829,  829,  829,  829,  829,

      829,  829,  830, 1106,  830,  830,  830,  830,  830,  830,
      830,  830,  831, 1107,  934, 1109,  934,  831,  831,  831,
      835,  815,  934,  836, 1110,  835,  835,  835,  836,  836,
      836,  837, 1111, 1114, 1116, 1118,  837,  837,  837,  830,
      835,  838, 1002,  831,  839, 1112,  838,  838,  838,  839,
      839,  839,  840, 1108, 1112,  841,  837,  840,  840,  840,
      841,  841,  841, 1119,  838,  842, 1120, 1002,  838, 1108,
      842,  842,  842,  850, 1122,  836,  851, 1123,  850,  850,
      850,  851,  851,  851,  852, 1124, 1125, 1126, 1127,  852,
      852,  852,  853,  841,  839, 1128,  854,  853,  853,  853,

      840,  854,  854,  854,  840,  855, 1129, 1131,  856, 1132,
      855,  855,  855,  856,  856,  856,  857, 1133, 1134, 1135,
      858,  857,  857,  857,  859,  858,  858,  858,  842,  859,
      859,  859, 1094,  852,  851,  860, 1094,  850, 1136, 1139,
      860,  860,  860,  893,  893,  893,  893,  893,  893,  893,
      893, 1130, 1140,  894,  853,  894,  894,  894,  894,  894,
      894,  894,  894,  855, 1100,  925, 1141, 1130, 1100,  859,
     1142,  856,  925, 1143, 1100,  857,  858,  957,  925,  957,
     1137, 1137,  957,  957,  957, 1144, 1145,  860, 1146, 1147,
      894,  985,  985,  985,  985,  985,  985,  985,  985,  986,

     1148,  986,  986,  986,  986,  986,  986,  986,  986,  987,
     1149, 1150,  988, 1151,  987,  987,  987,  988,  988,  988,
      989, 1153, 1154,  990, 1155,  989,  989,  989,  990,  990,
      990, 1156,  991, 1158, 1159, 1161,  986,  991,  991,  991,
      987, 1163, 1164, 1160, 1165, 1166,  992,  989,  990, 1171,
      988,  992,  992,  992, 1160,  991, 1160, 1172, 1173,  991,
     1088, 1088, 1088, 1088, 1088, 1088, 1088, 1088, 1089, 1174,
     1089, 1089, 1089, 1089, 1089, 1089, 1089, 1089, 1175, 1176,
     1177, 1179, 1181, 1182,  992, 1183, 1184, 1185, 1187, 1188,
     1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189, 1191, 1192,

     1193, 1194, 1196, 1197, 1190, 1089, 1190, 1190, 1190, 1190,
     1190, 1190, 1190, 1190, 1195, 1198, 1201, 1202, 1195, 1199,
     1199, 1199, 1199, 1199, 1199, 1199, 1199, 1200, 1203, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1204, 1205, 1206,
     1207, 1190, 1205, 1208, 1209, 1210, 1211, 1211, 1212, 1213,
     1214, 1215, 1216, 1217, 1211, 1218, 1221, 1219, 1220, 1222,
     1223, 1224, 1225, 1226, 1200, 1227, 1229, 1228, 1230, 1232,
     1210, 1231, 1233, 1234, 1235, 1236, 1237, 1212, 1238, 1214,
     1239, 1240, 1241, 1225, 1250, 1215, 1219, 1244, 1213, 1244,
     1220, 1217, 1216, 1222, 1228, 1245, 1259, 1247, 1250, 1223,

     1245, 1246, 1234, 1242, 1227, 1247, 1252, 1246, 1230, 1228,
     1254, 1231, 1235, 1242, 1242, 1242, 1242, 1242, 1242, 1242,
     1242, 1256, 1248, 1260, 1253, 1238, 1248, 1251, 1237, 1240,
     1249, 1255, 1248, 1261, 1263, 1249, 1264, 1265, 1236, 1237,
     1252, 1243, 1266, 1240, 1254, 1241, 1253, 1267, 1239, 1243,
     1268, 1243, 1243, 1243, 1243, 1243, 1243, 1243, 1243, 1269,
     1251, 1270, 1262, 1255, 1256, 1257, 1262, 1257, 1257, 1257,
     1257, 1257, 1257, 1257, 1257, 1271, 1272, 1273, 1274, 1275,
     1276, 1277, 1279, 1280, 1281, 1282, 1243, 1283, 1284, 1285,
     1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,

     1296, 1297, 1257, 1298, 1299, 1277, 1300, 1301, 1302, 1303,
     1304, 1286, 1305, 1306, 1304, 1307, 1321, 1322, 1308, 1323,
     1307, 1307, 1307, 1308, 1308, 1308, 1309, 1324, 1325, 1310,
     1327, 1309, 1309, 1309, 1310, 1310, 1310, 1311, 1338, 1339,
     1312, 1340, 1311, 1311, 1311, 1312, 1312, 1312, 1307, 1313,
     1343, 1308, 1314, 1344, 1313, 1313, 1313, 1314, 1314, 1314,
     1315, 1346, 1310, 1316, 1347, 1315, 1315, 1315, 1316, 1316,
     1316, 1317, 1313, 1348, 1318, 1350, 1317, 1317, 1317, 1318,
     1318, 1318, 1315, 1326, 1309, 1319, 1351, 1326, 1352, 1311,
     1319, 1319, 1319, 1314, 1320, 1354, 1355, 1328, 1312, 1320,

     1320, 1320, 1328, 1328, 1328, 1356, 1357, 1329, 1358, 1359,
     1330, 1316, 1329, 1329, 1329, 1330, 1330, 1330, 1360, 1361,
     1331, 1318, 1364, 1365, 1366, 1331, 1331, 1331, 1319, 1331,
     1331, 1331, 1367, 1368, 1332, 1369, 1370, 1333, 1317, 1332,
     1332, 1332, 1333, 1333, 1333, 1334, 1371, 1372, 1335, 1377,
     1334, 1334, 1334, 1335, 1335, 1335, 1336, 1373, 1328, 1337,
     1378, 1336, 1336, 1336, 1337, 1337, 1337, 1379, 1374, 1381,
     1373, 1382, 1329, 1330, 1383, 1379, 1384, 1387, 1388, 1389,
     1373, 1374, 1390, 1393, 1394, 1395, 1396, 1397, 1397, 1398,
     1332, 1395, 1335, 1399, 1401, 1333, 1403, 1334, 1404, 1405,

     1406, 1407, 1408, 1403, 1409, 1410, 1411, 1412, 1336, 1403,
     1413, 1414, 1415, 1416, 1417, 1403, 1418, 1337, 1419, 1421,
     1422, 1425, 1426, 1427, 1428, 1431, 1433, 1434, 1435, 1441,
     1442, 1444, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1458,
     1459, 1452, 1460, 1451, 1451, 1451, 1452, 1452, 1452, 1453,
     1461, 1462, 1454, 1464, 1453, 1453, 1453, 1454, 1454, 1454,
     1455, 1465, 1467, 1456, 1468, 1455, 1455, 1455, 1456, 1456,
     1456, 1451, 1457, 1469, 1452, 1454, 1463, 1457, 1457, 1457,
     1463, 1470, 1453, 1471, 1471, 1456, 1465, 1472, 1472, 1473,
     1474, 1476, 1477, 1479, 1482, 1483, 1485, 1486, 1487, 1493,

     1494, 1455, 1495, 1496, 1497, 1499, 1503, 1504, 1505, 1506,
     1507, 1508, 1497, 1509, 1515, 1457, 1516, 1517, 1519, 1520,
     1521, 1522, 1524, 1525, 1528, 1530, 1531, 1532, 1533, 1535,
     1536, 1533, 1533, 1537, 1538, 1539, 1540, 1541, 1542, 1544,
     1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1555,
     1556, 1557, 1558, 1560, 1561, 1563, 1564, 1565, 1566, 1567,
     1568, 1569, 1573, 1574, 1575, 1576, 1577, 1579, 1577, 1580,
     1582, 1584, 1585, 1586, 1577, 1587, 1588, 1590, 1591, 1593,
     1594, 1595, 1596, 1597, 1587, 1598, 1599, 1600, 1601, 1602,
     1604, 1605, 1604, 1606, 1607, 1608, 1595, 1609, 1593, 1601,

     1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
     1621, 1623, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633,
     1636, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1646, 1647,
     1649, 1650, 1648, 1651, 1652, 1653, 1654, 1655, 1660, 1656,
     1657, 1661, 1658, 1663, 1662, 1665, 1666, 1659, 1664, 1669,
     1667, 1670, 1668, 1668, 1651, 1646, 1647, 1648, 1671, 1652,
     1672, 1654, 1655, 1673, 1657, 1658, 1649, 1656, 1659, 1664,
     1674, 1650, 1662, 1668, 1675, 1653, 1663, 1661, 1676, 1677,
     1678, 1680, 1679, 1681, 1682, 1683, 1684, 1685, 1678, 1677,
     1687, 1680, 1659, 1679, 1686, 1688, 1689, 1665, 1690, 1666,

     1667, 1691, 1673, 1692, 1694, 1695, 1672, 1696, 1670, 1697,
     1698, 1669, 1699, 1700, 1685, 1684, 1702, 1682, 1703, 1686,
     1704, 1705, 1707, 1686, 1671, 1683, 1708, 1709, 1681, 1710,
     1687, 1712, 1714, 1715, 1716, 1718, 1719, 1714, 1720, 1721,
     1722, 1723, 1724, 1725, 1726, 1727, 1728, 1725, 1729, 1730,
     1731, 1732, 1733, 1734, 1735, 1716, 1736, 1737, 1738, 1739,
     1752, 1753, 1740, 1754, 1739, 1739, 1739, 1740, 1740, 1740,
     1741, 1755, 1756, 1742, 1757, 1741, 1741, 1741, 1742, 1742,
     1742, 1743, 1758, 1759, 1772, 1773, 1743, 1743, 1743, 1744,
     1774, 1739, 1775, 1776, 1744, 1744, 1744, 1777, 1740, 1742,

     1745, 1778, 1779, 1742, 1746, 1745, 1745, 1745, 1780, 1746,
     1746, 1746, 1781, 1782, 1783, 1744, 1785, 1786, 1787, 1744,
     1747, 1788, 1789, 1746, 1790, 1747, 1747, 1747, 1748, 1792,
     1793, 1741, 1794, 1748, 1748, 1748, 1745, 1749, 1795, 1743,
     1750, 1796, 1749, 1749, 1749, 1750, 1750, 1750, 1751, 1799,
     1800, 1760, 1801, 1751, 1751, 1751, 1760, 1760, 1760, 1761,
     1800, 1802, 1762, 1747, 1761, 1761, 1761, 1762, 1762, 1762,
     1763, 1803, 1806, 1764, 1807, 1763, 1763, 1763, 1764, 1764,
     1764, 1749, 1804, 1791, 1804, 1751, 1765, 1791, 1808, 1748,
     1805, 1765, 1765, 1765, 1766, 1760, 1804, 1767, 1811, 1766,

     1766, 1766, 1767, 1767, 1767, 1768, 1813, 1814, 1769, 1815,
     1768, 1768, 1768, 1769, 1769, 1769, 1770, 1761, 1816, 1817,
     1771, 1770, 1770, 1770, 1805, 1771, 1771, 1771, 1818, 1819,
     1820, 1822, 1823, 1805, 1824, 1825, 1826, 1827, 1805, 1828,
     1829, 1829, 1766, 1827, 1830, 1830, 1831, 1832, 1833, 1827,
     1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1767, 1843,
     1844, 1845, 1768, 1769, 1846, 1847, 1848, 1849, 1850, 1851,
     1852, 1771, 1853, 1857, 1770, 1771, 1855, 1858, 1855, 1859,
     1860, 1864, 1865, 1864, 1866, 1873, 1874, 1867, 1875, 1866,
     1866, 1866, 1867, 1867, 1867, 1868, 1876, 1877, 1869, 1878,

     1868, 1868, 1868, 1869, 1869, 1869, 1879, 1870, 1880, 1882,
     1884, 1890, 1870, 1870, 1870, 1891, 1866, 1892, 1893, 1895,
     1896, 1868, 1871, 1867, 1897, 1868, 1870, 1871, 1871, 1871,
     1872, 1894, 1898, 1899, 1869, 1872, 1872, 1872, 1894, 1901,
     1900, 1894, 1900, 1902, 1903, 1904, 1899, 1905, 1906, 1907,
     1908, 1909, 1910, 1912, 1914, 1915, 1914, 1916, 1917, 1918,
     1919, 1920, 1922, 1923, 1924, 1871, 1925, 1872, 1927, 1928,
     1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1933, 1937,
     1938, 1939, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1951,
     1952, 1953, 1954, 1955, 1956, 1958, 1959, 1960, 1962, 1964,

     1965, 1966, 1967, 1968, 1969, 1970, 1972, 1973, 1974, 1975,
     1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985,
     1986, 1987, 1989, 1990, 1992, 1993, 1994, 1996, 1997, 1998,
     1999, 1990, 2000, 2001, 2002, 2004, 2006, 2008, 2009, 2011,
     2012, 2013, 2014, 2015, 2016, 2017, 2014, 2018, 2019, 2020,
     2021, 2022, 2023, 2024, 2021, 2025, 2026, 2027, 2028, 2030,
     2029, 2031, 2032, 2034, 2033, 2035, 2036, 2037, 2039, 2038,
     2041, 2040, 2042, 2044, 2043, 2046, 2047, 2050, 2048, 2045,
     2049, 2049, 2051, 2052, 2053, 2054, 2027, 2033, 2060, 2055,
     2031, 2041, 2028, 2029, 2064, 2030, 2056, 2056, 2032, 2035,

     2043, 2049, 2060, 2063, 2036, 2040, 2037, 2038, 2045, 2057,
     2061, 2058, 2057, 2042, 2055, 2058, 2059, 2062, 2058, 2059,
     2061, 2062, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2064,
     2053, 2072, 2073, 2047, 2074, 2072, 2076, 2052, 2047, 2048,
     2078, 2079, 2063, 2054, 2080, 2081, 2082, 2083, 2051, 2067,
     2069, 2084, 2085, 2086, 2087, 2088, 2089, 2065, 2066, 2090,
     2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2068, 2099,
     2100, 2101, 2070, 2102, 2103, 2104, 2105, 2106, 2107, 2108,
     2109, 2098, 2110, 2111, 2112, 2113, 2114, 2111, 2115, 2116,
     2117, 2131, 2132, 2118, 2133, 2117, 2117, 2117, 2118, 2118,

     2118, 2119, 2135, 2136, 2120, 2137, 2119, 2119, 2119, 2120,
     2120, 2120, 2121, 2138, 2148, 2122, 2149, 2121, 2121, 2121,
     2122, 2122, 2122, 2123, 2150, 2151, 2152, 2134, 2123, 2123,
     2123, 2134, 2153, 2117, 2154, 2155, 2118, 2124, 2156, 2120,
     2157, 2122, 2124, 2124, 2124, 2122, 2125, 2121, 2158, 2126,
     2160, 2125, 2125, 2125, 2126, 2126, 2126, 2127, 2123, 2161,
     2128, 2162, 2127, 2127, 2127, 2128, 2128, 2128, 2129, 2163,
     2164, 2165, 2124, 2129, 2129, 2129, 2130, 2166, 2167, 2139,
     2168, 2130, 2130, 2130, 2139, 2139, 2139, 2169, 2170, 2125,
     2140, 2171, 2126, 2172, 2127, 2140, 2140, 2140, 2141, 2130,

     2173, 2142, 2174, 2141, 2141, 2141, 2142, 2142, 2142, 2143,
     2175, 2179, 2144, 2178, 2143, 2143, 2143, 2144, 2144, 2144,
     2145, 2178, 2180, 2146, 2181, 2145, 2145, 2145, 2146, 2146,
     2146, 2147, 2182, 2183, 2184, 2185, 2147, 2147, 2147, 2186,
     2187, 2188, 2139, 2190, 2191, 2193, 2194, 2195, 2196, 2197,
     2200, 2201, 2202, 2203, 2204, 2205, 2207, 2208, 2209, 2143,
     2210, 2215, 2217, 2222, 2223, 2224, 2226, 2227, 2228, 2229,
     2230, 2145, 2231, 2233, 2234, 2145, 2235, 2236, 2237, 2238,
     2239, 2240, 2241, 2146, 2250, 2251, 2252, 2242, 2254, 2255,
     2243, 2147, 2242, 2242, 2242, 2243, 2243, 2243, 2256, 2244,

     2257, 2258, 2245, 2259, 2244, 2244, 2244, 2245, 2245, 2245,
     2246, 2260, 2261, 2247, 2262, 2246, 2246, 2246, 2247, 2247,
     2247, 2248, 2263, 2264, 2265, 2253, 2248, 2248, 2248, 2253,
     2242, 2266, 2267, 2243, 2244, 2268, 2249, 2245, 2269, 2270,
     2271, 2249, 2249, 2249, 2272, 2273, 2274, 2275, 2276, 2277,
     2278, 2279, 2280, 2246, 2281, 2282, 2247, 2283, 2248, 2249,
     2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293,
     2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
     2304, 2305, 2306, 2307, 2308, 2309, 2311, 2312, 2313, 2314,
     2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324,

     2325, 2326, 2327, 2328, 2330, 2331, 2332, 2333, 2334, 2335,
     2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345,
     2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355,
     2356, 2357, 2358, 2359, 2360, 2362, 2363, 2364, 2365, 2367,
     2368, 2369, 2370, 2368, 2371, 2372, 2373, 2374, 2375, 2376,
     2377, 2378, 2368, 2368, 2379, 2380, 2381, 2382, 2383, 2368,
     2384, 2385, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394,
     2395, 2396, 2397, 2399, 2398, 2400, 2402, 2401, 2403, 2404,
     2405, 2406, 2407, 2408, 2410, 2409, 2389, 2420, 2425, 2411,
     2394, 2395, 2412, 2391, 2390, 2419, 2387, 2397, 2398, 2411,

     2417, 2413, 2412, 2413, 2417, 2392, 2401, 2399, 2393, 2415,
     2402, 2396, 2414, 2416, 2414, 2400, 2418, 2421, 2422, 2415,
     2419, 2420, 2423, 2416, 2410, 2405, 2418, 2406, 2426, 2428,
     2424, 2429, 2432, 2425, 2433, 2409, 2434, 2436, 2437, 2438,
     2408, 2439, 2440, 2407, 2441, 2404, 2422, 2442, 2403, 2409,
     2422, 2424, 2443, 2445, 2446, 2421, 2447, 2448, 2449, 2450,
     2423, 2451, 2452, 2449, 2453, 2454, 2455, 2426, 2456, 2457,
     2458, 2459, 2460, 2461, 2462, 2449, 2463, 2464, 2465, 2466,
     2467, 2468, 2469, 2470, 2471, 2472, 2454, 2473, 2474, 2486,
     2487, 2475, 2488, 2474, 2474, 2474, 2475, 2475, 2475, 2476,

     2489, 2490, 2477, 2491, 2476, 2476, 2476, 2477, 2477, 2477,
     2492, 2478, 2493, 2494, 2479, 2501, 2478, 2478, 2478, 2479,
     2479, 2479, 2502, 2503, 2480, 2474, 2504, 2481, 2475, 2480,
     2480, 2480, 2481, 2481, 2481, 2505, 2506, 2507, 2508, 2509,
     2510, 2511, 2476, 2512, 2513, 2477, 2478, 2482, 2514, 2479,
     2483, 2515, 2482, 2482, 2482, 2483, 2483, 2483, 2484, 2516,
     2517, 2485, 2518, 2484, 2484, 2484, 2485, 2485, 2485, 2495,
     2519, 2520, 2496, 2521, 2495, 2495, 2495, 2496, 2496, 2496,
     2522, 2484, 2523, 2497, 2482, 2524, 2498, 2483, 2497, 2497,
     2497, 2498, 2498, 2498, 2525, 2499, 2526, 2527, 2500, 2485,

     2499, 2499, 2499, 2500, 2500, 2500, 2528, 2529, 2531, 2533,
     2534, 2535, 2536, 2537, 2538, 2539, 2538, 2495, 2540, 2541,
     2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
     2552, 2557, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
     2567, 2568, 2569, 2497, 2570, 2571, 2498, 2571, 2572, 2573,
     2574, 2575, 2576, 2585, 2586, 2577, 2587, 2570, 2578, 2570,
     2577, 2577, 2577, 2578, 2578, 2578, 2579, 2588, 2589, 2580,
     2590, 2579, 2579, 2579, 2580, 2580, 2580, 2581, 2591, 2592,
     2582, 2593, 2581, 2581, 2581, 2582, 2582, 2582, 2594, 2595,
     2596, 2597, 2577, 2583, 2598, 2578, 2584, 2599, 2583, 2583,

     2583, 2584, 2584, 2584, 2600, 2601, 2602, 2603, 2604, 2579,
     2605, 2606, 2580, 2609, 2581, 2610, 2583, 2582, 2611, 2612,
     2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622,
     2623, 2624, 2625, 2626, 2584, 2627, 2628, 2629, 2630, 2631,
     2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
     2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
     2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
     2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
     2674, 2675, 2676, 2677, 2678, 2679, 2682, 2683, 2684, 2685,
     2686, 2687, 2688, 2689, 2690, 2692, 2693, 2694, 2695, 2696,

     2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706,
     2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716,
     2717, 2718, 2719, 2720, 2721, 2702, 2722, 2723, 2724, 2725,
     2726, 2727, 2729, 2730, 2728, 2731, 2722, 2732, 2734, 2733,
     2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2755,
     2736, 2744, 2744, 2745, 2730, 2754, 2731, 2746, 2748, 2723,
     2749, 2746, 2724, 2733, 2729, 2726, 2727, 2728, 2748, 2747,
     2749, 2750, 2744, 2747, 2735, 2750, 2751, 2752, 2753, 2732,
     2751, 2756, 2757, 2753, 2758, 2759, 2760, 2752, 2761, 2738,
     2762, 2739, 2765, 2745, 2755, 2754, 2739, 2766, 2767, 2768,

     2769, 2742, 2740, 2770, 2772, 2737, 2773, 2741, 2739, 2774,
     2775, 2776, 2777, 2743, 2778, 2762, 2779, 2780, 2781, 2757,
     2782, 2758, 2783, 2784, 2785, 2786, 2756, 2761, 2787, 2789,
     2759, 2760, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797,
     2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2787,
     2807, 2808, 2818, 2819, 2809, 2820, 2808, 2808, 2808, 2809,
     2809, 2809, 2810, 2821, 2822, 2811, 2823, 2810, 2810, 2810,
     2811, 2811, 2811, 2812, 2808, 2824, 2813, 2809, 2812, 2812,
     2812, 2813, 2813, 2813, 2814, 2825, 2826, 2815, 2830, 2814,
     2814, 2814, 2815, 2815, 2815, 2831, 2832, 2833, 2816, 2810,

     2834, 2835, 2811, 2816, 2816, 2816, 2817, 2814, 2836, 2827,
     2815, 2817, 2817, 2817, 2827, 2827, 2827, 2828, 2837, 2838,
     2829, 2839, 2828, 2828, 2828, 2829, 2829, 2829, 2840, 2841,
     2842, 2843, 2844, 2845, 2846, 2847, 2816, 2848, 2849, 2850,
     2851, 2852, 2853, 2854, 2817, 2855, 2856, 2857, 2858, 2860,
     2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870,
     2871, 2872, 2873, 2874, 2874, 2875, 2876, 2877, 2878, 2879,
     2880, 2881, 2876, 2882, 2883, 2884, 2885, 2886, 2887, 2888,
     2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898,
     2899, 2900, 2901, 2902, 2903, 2911, 2912, 2904, 2913, 2903,

     2903, 2903, 2904, 2904, 2904, 2905, 2914, 2915, 2906, 2916,
     2905, 2905, 2905, 2906, 2906, 2906, 2907, 2903, 2917, 2918,
     2904, 2907, 2907, 2907, 2908, 2919, 2920, 2909, 2921, 2908,
     2908, 2908, 2909, 2909, 2909, 2922, 2923, 2924, 2925, 2907,
     2926, 2927, 2905, 2910, 2928, 2906, 2929, 2908, 2910, 2910,
     2910, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938,
     2939, 2940, 2941, 2942, 2943, 2909, 2944, 2945, 2946, 2947,
     2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957,
     2958, 2910, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966,
     2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976,

     2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986,
     2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2997,
     2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007,
     3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017,
     3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027,
     3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037,
     3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047,
     3048, 3049, 3050, 3052, 3051, 3053, 3054, 3055, 3056, 3057,
     3058, 3059, 3060, 3061, 3042, 3062, 3064, 3064, 3063, 3065,
     3045, 3066, 3067, 3044, 3047, 3051, 3050, 3069, 3054, 3053,

     3068, 3069, 3067, 3071, 3070, 3072, 3046, 3064, 3070, 3043,
     3068, 3049, 3073, 3071, 3074, 3072, 3075, 3073, 3052, 3074,
     3066, 3076, 3077, 3078, 3079, 3080, 3081, 3055, 3082, 3057,
     3083, 3084, 3087, 3088, 3090, 3056, 3060, 3061, 3063, 3091,
     3058, 3059, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099,
     3062, 3100, 3101, 3082, 3102, 3103, 3075, 3104, 3105, 3106,
     3076, 3077, 3107, 3108, 3080, 3081, 3109, 3110, 3078, 3079,
     3083, 3103, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118,
     3119, 3120, 3121, 3122, 3123, 3124, 3132, 3133, 3125, 3134,
     3124, 3124, 3124, 3125, 3125, 3125, 3126, 3135, 3136, 3127,

     3137, 3126, 3126, 3126, 3127, 3127, 3127, 3128, 3138, 3139,
     3129, 3140, 3128, 3128, 3128, 3129, 3129, 3129, 3141, 3126,
     3142, 3143, 3127, 3124, 3130, 3144, 3125, 3131, 3145, 3130,
     3130, 3130, 3131, 3131, 3131, 3146, 3147, 3148, 3149, 3150,
     3151, 3152, 3153, 3154, 3155, 3128, 3156, 3157, 3129, 3158,
     3159, 3160, 3161, 3162, 3131, 3150, 3150, 3163, 3164, 3165,
     3166, 3167, 3130, 3168, 3169, 3168, 3170, 3171, 3172, 3173,
     3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183,
     3184, 3185, 3186, 3187, 3188, 3190, 3191, 3191, 3192, 3193,
     3194, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 3203,

     3204, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213,
     3214, 3215, 3223, 3224, 3216, 3225, 3215, 3215, 3215, 3216,
     3216, 3216, 3217, 3226, 3227, 3218, 3228, 3217, 3217, 3217,
     3218, 3218, 3218, 3219, 3229, 3230, 3220, 3231, 3219, 3219,
     3219, 3220, 3220, 3220, 3232, 3217, 3233, 3234, 3218, 3215,
     3221, 3235, 3216, 3222, 3236, 3221, 3221, 3221, 3222, 3222,
     3222, 3237, 3238, 3239, 3240, 3241, 3242, 3243, 3244, 3245,
     3247, 3219, 3246, 3248, 3220, 3249, 3250, 3246, 3251, 3252,
     3222, 3253, 3246, 3254, 3255, 3256, 3257, 3246, 3221, 3258,
     3259, 3260, 3261, 3262, 3263, 3259, 3264, 3265, 3266, 3268,

     3259, 3269, 3270, 3271, 3273, 3259, 3274, 3275, 3276, 3277,
     3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287,
     3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295, 3296, 3297,
     3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 3307,
     3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3317,
     3318, 3319, 3320, 3321, 3322, 3323, 3324, 3325, 3326, 3327,
     3328, 3329, 3330, 3331, 3332, 3333, 3335, 3336, 3337, 3338,
     3339, 3340, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3348,
     3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3353, 3357,
     3358, 3359, 3360, 3362, 3361, 3364, 3363, 3365, 3366, 3367,

     3368, 3369, 3370, 3371, 3374, 3373, 3375, 3372, 3376, 3377,
     3379, 3375, 3356, 3376, 3378, 3379, 3364, 3380, 3381, 3377,
     3359, 3363, 3380, 3381, 3378, 3383, 3384, 3386, 3382, 3390,
     3385, 3360, 3361, 3357, 3382, 3362, 3387, 3393, 3374, 3388,
     3389, 3391, 3395, 3397, 3398, 3399, 3400, 3401, 3402, 3403,
     3404, 3384, 3366, 3405, 3383, 3385, 3406, 3407, 3365, 3369,
     3368, 3372, 3371, 3367, 3388, 3389, 3386, 3370, 3373, 3390,
     3408, 3410, 3411, 3412, 3413, 3387, 3414, 3372, 3415, 3416,
     3417, 3391, 3418, 3419, 3410, 3420, 3421, 3422, 3423, 3424,
     3425, 3426, 3427, 3428, 3429, 3430, 3438, 3439, 3431, 3440,

     3430, 3430, 3430, 3431, 3431, 3431, 3432, 3441, 3442, 3433,
     3443, 3432, 3432, 3432, 3433, 3433, 3433, 3434, 3444, 3445,
     3435, 3446, 3434, 3434, 3434, 3435, 3435, 3435, 3447, 3448,
     3449, 3450, 3436, 3430, 3451, 3437, 3431, 3436, 3436, 3436,
     3437, 3437, 3437, 3452, 3432, 3453, 3455, 3433, 3456, 3457,
     3458, 3459, 3460, 3461, 3462, 3434, 3463, 3464, 3435, 3436,
     3465, 3466, 3467, 3468, 3469, 3470, 3471, 3437, 3472, 3473,
     3474, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3482, 3483,
     3484, 3485, 3486, 3487, 3488, 3489, 3490, 3491, 3492, 3493,
     3494, 3495, 3496, 3497, 3498, 3499, 3500, 3501, 3502, 3503,

     3504, 3505, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3513,
     3514, 3515, 3516, 3517, 3518, 3519, 3520, 3521, 3522, 3523,
     3524, 3532, 3533, 3525, 3534, 3524, 3524, 3524, 3525, 3525,
     3525, 3526, 3535, 3536, 3527, 3537, 3526, 3526, 3526, 3527,
     3527, 3527, 3528, 3538, 3539, 3529, 3540, 3528, 3528, 3528,
     3529, 3529, 3529, 3541, 3542, 3543, 3544, 3530, 3524, 3545,
     3531, 3525, 3530, 3530, 3530, 3531, 3531, 3531, 3546, 3526,
     3547, 3548, 3527, 3549, 3550, 3551, 3552, 3553, 3554, 3555,
     3528, 3556, 3557, 3529, 3530, 3558, 3559, 3560, 3561, 3562,
     3557, 3563, 3531, 3564, 3565, 3566, 3567, 3568, 3569, 3570,

     3571, 3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579, 3580,
     3573, 3581, 3582, 3583, 3584, 3581, 3585, 3586, 3587, 3588,
     3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598,
     3599, 3600, 3601, 3602, 3603, 3605, 3606, 3607, 3608, 3609,
     3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619,
     3620, 3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629,
     3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639,
     3640, 3641, 3642, 3643, 3644, 3645, 3646, 3647, 3648, 3649,
     3650, 3651, 3652, 3653, 3654, 3655, 3656, 3657, 3658, 3659,
     3660, 3661, 3662, 3663, 3664, 3665, 3666, 3667, 3668, 3669,

     3670, 3671, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679,
     3680, 3681, 3682, 3683, 3684, 3685, 3686, 3693, 3687, 3688,
     3685, 3686, 3671, 3687, 3688, 3689, 3673, 3690, 3692, 3692,
     3689, 3701, 3690, 3691, 3670, 3666, 3694, 3668, 3695, 3691,
     3672, 3684, 3696, 3697, 3698, 3699, 3700, 3702, 3703, 3705,
     3707, 3693, 3708, 3709, 3674, 3712, 3677, 3713, 3678, 3714,
     3701, 3681, 3680, 3715, 3683, 3716, 3717, 3696, 3697, 3718,
     3675, 3676, 3719, 3720, 3721, 3722, 3694, 3683, 3695, 3679,
     3723, 3724, 3725, 3726, 3698, 3699, 3700, 3717, 3727, 3728,
     3729, 3730, 3731, 3732, 3733, 3734, 3735, 3736, 3745, 3737,

     3746, 3747, 3738, 3714, 3737, 3737, 3737, 3738, 3738, 3738,
     3739, 3748, 3749, 3740, 3750, 3739, 3739, 3739, 3740, 3740,
     3740, 3751, 3752, 3753, 3754, 3741, 3737, 3755, 3742, 3738,
     3741, 3741, 3741, 3742, 3742, 3742, 3743, 3756, 3757, 3744,
     3758, 3743, 3743, 3743, 3744, 3744, 3744, 3759, 3739, 3760,
     3761, 3740, 3741, 3762, 3763, 3742, 3764, 3765, 3766, 3767,
     3768, 3769, 3770, 3771, 3744, 3772, 3773, 3774, 3743, 3775,
     3776, 3777, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 3778,
     3785, 3786, 3787, 3789, 3790, 3791, 3792, 3793, 3794, 3795,
     3796, 3797, 3798, 3799, 3800, 3801, 3802, 3803, 3804, 3805,

     3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815,
     3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3825,
     3826, 3827, 3828, 3829, 3830, 3838, 3839, 3831, 3840, 3830,
     3830, 3830, 3831, 3831, 3831, 3832, 3841, 3842, 3833, 3843,
     3832, 3832, 3832, 3833, 3833, 3833, 3844, 3845, 3846, 3847,
     3834, 3830, 3848, 3835, 3831, 3834, 3834, 3834, 3835, 3835,
     3835, 3836, 3849, 3850, 3837, 3851, 3836, 3836, 3836, 3837,
     3837, 3837, 3852, 3832, 3853, 3854, 3833, 3834, 3855, 3856,
     3835, 3857, 3858, 3859, 3860, 3861, 3862, 3863, 3864, 3837,
     3865, 3866, 3867, 3836, 3868, 3869, 3870, 3871, 3872, 3873,

     3874, 3875, 3876, 3877, 3878, 3879, 3880, 3881, 3882, 3883,
     3884, 3885, 3886, 3887, 3888, 3889, 3890, 3891, 3892, 3894,
     3895, 3896, 3897, 3898, 3890, 3899, 3900, 3901, 3902, 3903,
     3904, 3905, 3906, 3907, 3908, 3909, 3910, 3911, 3912, 3913,
     3914, 3915, 3916, 3917, 3918, 3920, 3921, 3922, 3923, 3924,
     3925, 3926, 3927, 3928, 3929, 3930, 3931, 3933, 3934, 3935,
     3936, 3937, 3938, 3939, 3940, 3941, 3942, 3944, 3945, 3946,
     3947, 3948, 3949, 3950, 3951, 3952, 3953, 3954, 3955, 3956,
     3957, 3958, 3959, 3960, 3961, 3962, 3963, 3964, 3965, 3966,
     3967, 3968, 3969, 3970, 3971, 3972, 3973, 3974, 3975, 3977,

     3976, 3978, 3979, 3980, 3981, 3982, 3983, 3984, 3985, 3987,
     3986, 3989, 3988, 3988, 3990, 3991, 3998, 3992, 3993, 3994,
     3990, 3991, 3992, 3993, 3995, 3994, 3996, 3996, 3985, 3999,
     3995, 3997, 3978, 3988, 4006, 3973, 4000, 3974, 3976, 3997,
     4001, 4002, 4003, 3998, 4004, 4007, 4005, 4008, 4009, 4010,
     3989, 4011, 4012, 4013, 4014, 4016, 3984, 4018, 4019, 4022,
     4023, 4024, 4025, 3987, 4026, 4027, 4028, 3979, 4006, 3999,
     4029, 3983, 3985, 3980, 3986, 4005, 4000, 4030, 4031, 4019,
     4001, 4002, 4003, 4032, 4004, 4033, 4034, 4035, 4036, 4037,
     4038, 4040, 4048, 4049, 4041, 4050, 4040, 4040, 4040, 4041,

     4041, 4041, 4042, 4051, 4052, 4043, 4053, 4042, 4042, 4042,
     4043, 4043, 4043, 4044, 4054, 4055, 4056, 4057, 4044, 4044,
     4044, 4058, 4059, 4040, 4060, 4061, 4041, 4062, 4045, 4042,
     4063, 4046, 4043, 4045, 4045, 4045, 4046, 4046, 4046, 4064,
     4065, 4047, 4066, 4067, 4068, 4044, 4047, 4047, 4047, 4069,
     4070, 4071, 4072, 4073, 4074, 4075, 4046, 4076, 4077, 4078,
     4045, 4079, 4080, 4081, 4082, 4083, 4084, 4085, 4086, 4087,
     4088, 4089, 4090, 4091, 4092, 4093, 4094, 4095, 4047, 4096,
     4097, 4098, 4099, 4100, 4102, 4103, 4104, 4105, 4106, 4107,
     4108, 4109, 4110, 4110, 4111, 4112, 4113, 4114, 4115, 4116,

     4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4120, 4126,
     4127, 4128, 4129, 4130, 4131, 4133, 4141, 4142, 4134, 4143,
     4133, 4133, 4133, 4134, 4134, 4134, 4135, 4144, 4145, 4136,
     4146, 4135, 4135, 4135, 4136, 4136, 4136, 4137, 4147, 4148,
     4149, 4150, 4137, 4137, 4137, 4151, 4152, 4133, 4153, 4154,
     4134, 4155, 4138, 4135, 4156, 4139, 4136, 4138, 4138, 4138,
     4139, 4139, 4139, 4157, 4158, 4140, 4159, 4160, 4161, 4137,
     4140, 4140, 4140, 4162, 4163, 4164, 4165, 4166, 4167, 4168,
     4139, 4169, 4170, 4171, 4138, 4172, 4173, 4174, 4175, 4176,
     4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186,

     4187, 4188, 4140, 4189, 4190, 4191, 4192, 4193, 4194, 4195,
     4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205,
     4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4215, 4216,
     4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226,
     4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4216, 4235,
     4236, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246,
     4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258,
     4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268,
     4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278,
     4279, 4280, 4281, 4283, 4284, 4282, 4285, 4285, 4286, 4287,

     4288, 4288, 4289, 4289, 4290, 4291, 4292, 4292, 4294, 4276,
     4290, 4291, 4297, 4273, 4274, 4282, 4294, 4285, 4293, 4293,
     4275, 4295, 4296, 4298, 4299, 4295, 4300, 4301, 4302, 4303,
     4305, 4304, 4306, 4308, 4309, 4310, 4311, 4280, 4278, 4312,
     4313, 4297, 4277, 4279, 4314, 4315, 4316, 4317, 4318, 4319,
     4320, 4284, 4298, 4323, 4324, 4325, 4301, 4302, 4304, 4326,
     4327, 4296, 4328, 4303, 4299, 4329, 4300, 4330, 4331, 4340,
     4341, 4332, 4342, 4331, 4331, 4331, 4332, 4332, 4332, 4333,
     4343, 4344, 4334, 4345, 4333, 4333, 4333, 4334, 4334, 4334,
     4346, 4347, 4335, 4331, 4348, 4336, 4332, 4335, 4335, 4335,

     4336, 4336, 4336, 4337, 4349, 4350, 4351, 4352, 4337, 4337,
     4337, 4333, 4353, 4354, 4334, 4355, 4338, 4335, 4356, 4357,
     4336, 4338, 4338, 4338, 4358, 4359, 4360, 4361, 4362, 4363,
     4364, 4357, 4365, 4366, 4357, 4367, 4368, 4369, 4370, 4372,
     4337, 4373, 4374, 4375, 4376, 4377, 4378, 4379, 4380, 4381,
     4382, 4383, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391,
     4392, 4393, 4394, 4395, 4396, 4398, 4399, 4400, 4401, 4402,
     4403, 4404, 4405, 4406, 4407, 4408, 4409, 4410, 4411, 4412,
     4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4421, 4422,
     4423, 4432, 4433, 4424, 4434, 4423, 4423, 4423, 4424, 4424,

     4424, 4425, 4435, 4436, 4426, 4437, 4425, 4425, 4425, 4426,
     4426, 4426, 4438, 4439, 4427, 4423, 4440, 4428, 4424, 4427,
     4427, 4427, 4428, 4428, 4428, 4429, 4441, 4442, 4443, 4444,
     4429, 4429, 4429, 4425, 4442, 4445, 4426, 4446, 4430, 4427,
     4447, 4448, 4428, 4430, 4430, 4430, 4449, 4450, 4451, 4452,
     4453, 4454, 4455, 4456, 4457, 4458, 4459, 4460, 4461, 4462,
     4463, 4464, 4429, 4465, 4466, 4467, 4468, 4469, 4470, 4471,
     4472, 4473, 4474, 4475, 4476, 4477, 4478, 4479, 4465, 4480,
     4481, 4482, 4485, 4486, 4487, 4488, 4489, 4490, 4491, 4492,
     4493, 4494, 4479, 4495, 4497, 4498, 4499, 4500, 4501, 4502,

     4503, 4504, 4505, 4506, 4508, 4509, 4510, 4511, 4512, 4513,
     4514, 4515, 4516, 4517, 4518, 4519, 4520, 4521, 4522, 4523,
     4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 4533, 4534,
     4535, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 4544,
     4545, 4546, 4547, 4548, 4549, 4550, 4552, 4553, 4554, 4555,
     4556, 4557, 4558, 4560, 4561, 4562, 4563, 4564, 4565, 4566,
     4567, 4568, 4569, 4570, 4571, 4571, 4572, 4572, 4573, 4575,
     4569, 4570, 4574, 4575, 4576, 4577, 4573, 4561, 4578, 4580,
     4574, 4579, 4582, 4583, 4585, 4581, 4586, 4560, 4587, 4588,
     4589, 4563, 4584, 4590, 4591, 4592, 4594, 4593, 4595, 4596,

     4597, 4598, 4599, 4601, 4565, 4602, 4603, 4604, 4580, 4605,
     4606, 4568, 4578, 4566, 4581, 4579, 4582, 4583, 4593, 4584,
     4607, 4609, 4564, 4585, 4610, 4567, 4609, 4609, 4609, 4610,
     4610, 4610, 4611, 4616, 4617, 4612, 4618, 4611, 4611, 4611,
     4612, 4612, 4612, 4613, 4619, 4620, 4614, 4621, 4613, 4613,
     4613, 4614, 4614, 4614, 4622, 4624, 4625, 4611, 4609, 4615,
     4612, 4610, 4626, 4627, 4615, 4615, 4615, 4628, 4629, 4630,
     4631, 4632, 4633, 4634, 4635, 4636, 4637, 4638, 4639, 4641,
     4613, 4642, 4643, 4614, 4644, 4645, 4646, 4647, 4649, 4650,
     4651, 4652, 4653, 4654, 4655, 4656, 4657, 4658, 4659, 4660,

     4661, 4662, 4663, 4664, 4666, 4667, 4668, 4669, 4670, 4671,
     4672, 4673, 4674, 4675, 4676, 4677, 4678, 4679, 4680, 4681,
     4682, 4683, 4686, 4687, 4688, 4689, 4690, 4691, 4692, 4691,
     4693, 4695, 4691, 4691, 4691, 4696, 4697, 4698, 4699, 4691,
     4706, 4707, 4708, 4699, 4699, 4699, 4691, 4700, 4709, 4691,
     4710, 4701, 4700, 4700, 4700, 4702, 4701, 4701, 4701, 4703,
     4702, 4702, 4702, 4704, 4703, 4703, 4703, 4705, 4704, 4704,
     4704, 4711, 4705, 4705, 4705, 4699, 4701, 4712, 4714, 4715,
     4702, 4716, 4717, 4718, 4700, 4720, 4721, 4722, 4723, 4724,
     4725, 4726, 4729, 4730, 4731, 4732, 4703, 4733, 4734, 4735,

     4704, 4736, 4737, 4738, 4739, 4740, 4741, 4742, 4743, 4744,
     4745, 4747, 4748, 4749, 4750, 4751, 4752, 4753, 4754, 4755,
     4756, 4757, 4758, 4759, 4760, 4761, 4762, 4763, 4764, 4765,
     4766, 4767, 4768, 4769, 4771, 4772, 4773, 4774, 4775, 4776,
     4777, 4778, 4779, 4780, 4781, 4782, 4784, 4785, 4786, 4787,
     4788, 4789, 4790, 4791, 4792, 4793, 4794, 4795, 4796, 4797,
     4798, 4799, 4800, 4801, 4802, 4786, 4803, 4804, 4806, 4807,
     4808, 4809, 4810, 4811, 4812, 4813, 4814, 4815, 4816, 4817,
     4818, 4819, 4820, 4821, 4823, 4824, 4825, 4826, 4827, 4828,
     4830, 4831, 4832, 4833, 4834, 4835, 4836, 4837, 4837, 4838,

     4839, 4840, 4841, 4838, 4839, 4844, 4845, 4842, 4843, 4840,
     4841, 4842, 4843, 4846, 4847, 4848, 4849, 4830, 4837, 4850,
     4852, 4851, 4855, 4856, 4857, 4858, 4832, 4864, 4865, 4860,
     4831, 4868, 4869, 4845, 4870, 4871, 4872, 4873, 4881, 4882,
     4846, 4883, 4836, 4849, 4884, 4885, 4850, 4833, 4847, 4848,
     4860, 4875, 4886, 4888, 4835, 4890, 4875, 4875, 4875, 4834,
     4851, 4876, 4891, 4892, 4877, 4893, 4876, 4876, 4876, 4877,
     4877, 4877, 4878, 4894, 4895, 4879, 4896, 4878, 4878, 4878,
     4879, 4879, 4879, 4880, 4897, 4898, 4899, 4900, 4880, 4880,
     4880, 4901, 4902, 4903, 4904, 4907, 4908, 4911, 4912, 4913,

     4914, 4877, 4915, 4916, 4917, 4918, 4920, 4921, 4922, 4878,
     4923, 4924, 4925, 4926, 4927, 4928, 4931, 4932, 4933, 4928,
     4934, 4935, 4936, 4937, 4938, 4939, 4940, 4941, 4942, 4943,
     4944, 4945, 4946, 4947, 4948, 4949, 4950, 4951, 4952, 4953,
     4954, 4955, 4957, 4956, 4953, 4956, 4958, 4959, 4960, 4961,
     4962, 4963, 4964, 4970, 4971, 4965, 4972, 4964, 4964, 4964,
     4965, 4965, 4965, 4966, 4973, 4974, 4967, 4975, 4966, 4966,
     4966, 4967, 4967, 4967, 4968, 4977, 4978, 4969, 4979, 4968,
     4968, 4968, 4969, 4969, 4969, 4980, 4981, 4982, 4983, 4984,
     4985, 4986, 4987, 4988, 4989, 4990, 4991, 4992, 4994, 4995,

     4966, 4996, 4997, 4967, 4999, 5000, 5001, 5002, 5003, 5004,
     5005, 5006, 5007, 5008, 5009, 5011, 5012, 5013, 5014, 5015,
     5016, 5017, 5018, 5019, 5021, 5022, 5025, 5026, 5029, 5030,
     5031, 5032, 5033, 5034, 5035, 5036, 5037, 5038, 5040, 5041,
     5042, 5043, 5044, 5045, 5046, 5047, 5048, 5049, 5050, 5051,
     5052, 5053, 5054, 5055, 5056, 5057, 5058, 5059, 5060, 5061,
     5062, 5063, 5061, 5064, 5065, 5066, 5067, 5068, 5069, 5070,
     5071, 5072, 5075, 5076, 5081, 5082, 5085, 5086, 5087, 5088,
     5089, 5090, 5091, 5092, 5092, 5093, 5094, 5095, 5096, 5097,
     5098, 5099, 5096, 5097, 5102, 5100, 5101, 5103, 5104, 5105,

     5106, 5108, 5115, 5087, 5092, 5116, 5119, 5123, 5124, 5120,
     5127, 5119, 5119, 5119, 5120, 5120, 5120, 5128, 5129, 5130,
     5132, 5102, 5133, 5134, 5103, 5135, 5089, 5136, 5137, 5138,
     5139, 5140, 5141, 5090, 5100, 5101, 5142, 5104, 5105, 5145,
     5146, 5147, 5148, 5149, 5150, 5151, 5088, 5152, 5153, 5154,
     5155, 5156, 5157, 5158, 5159, 5160, 5161, 5162, 5163, 5164,
     5165, 5166, 5168, 5169, 5170, 5171, 5172, 5174, 5175, 5177,
     5178, 5179, 5180, 5181, 5182, 5183, 5184, 5185, 5186, 5187,
     5188, 5189, 5190, 5191, 5192, 5193, 5194, 5195, 5196, 5197,
     5198, 5202, 5203, 5199, 5206, 5198, 5198, 5198, 5199, 5199,

     5199, 5207, 5208, 5208, 5209, 5209, 5210, 5211, 5212, 5213,
     5214, 5215, 5216, 5217, 5218, 5219, 5220, 5221, 5222, 5223,
     5224, 5225, 5226, 5227, 5228, 5229, 5231, 5232, 5233, 5234,
     5235, 5236, 5237, 5238, 5239, 5240, 5241, 5242, 5243, 5244,
     5245, 5246, 5247, 5251, 5252, 5253, 5254, 5255, 5257, 5258,
     5259, 5260, 5261, 5262, 5263, 5264, 5265, 5266, 5267, 5268,
     5269, 5270, 5271, 5272, 5273, 5274, 5275, 5276, 5277, 5278,
     5279, 5280, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288,
     5289, 5290, 5291, 5292, 5293, 5298, 5299, 5300, 5301, 5302,
     5303, 5304, 5305, 5306, 5307, 5308, 5309, 5315, 5316, 5317,

     5318, 5320, 5321, 5322, 5323, 5324, 5325, 5326, 5327, 5328,
     5329, 5330, 5331, 5332, 5333, 5334, 5335, 5336, 5337, 5338,
     5339, 5340, 5341, 5342, 5343, 5344, 5345, 5346, 5347, 5349,
     5350, 5351, 5306, 5307, 5352, 5353, 5299, 5354, 5355, 5356,
     5358, 5359, 5360, 5361, 5362, 5363, 5366, 5367, 5368, 5369,
     5372, 5373, 5374, 5375, 5374, 5376, 5377, 5374, 5374, 5374,
     5378, 5379, 5382, 5383, 5374, 5388, 5389, 5390, 5391, 5392,
     5393, 5374, 5394, 5395, 5396, 5397, 5398, 5399, 5400, 5401,
     5404, 5405, 5406, 5408, 5409, 5410, 5411, 5412, 5413, 5414,
     5415, 5416, 5417, 5418, 5419, 5420, 5421, 5423, 5424, 5425,

     5426, 5427, 5429, 5430, 5431, 5432, 5435, 5436, 5437, 5438,
     5439, 5440, 5441, 5442, 5443, 5444, 5445, 5446, 5447, 5448,
     5449, 5450, 5452, 5453, 5454, 5455, 5456, 5457, 5459, 5460,
     5461, 5462, 5463, 5464, 5465, 5467, 5468, 5469, 5470, 5471,
     5472, 5473, 5474, 5476, 5477, 5478, 5479, 5480, 5481, 5482,
     5484, 5485, 5486, 5487, 5489, 5490, 5491, 5492, 5493, 5494,
     5495, 5496, 5497, 5498, 5499, 5500, 5501, 5502, 5503, 5504,
     5506, 5507, 5509, 5511, 5512, 5513, 5514, 5515, 5516, 5517,
     5521, 5522, 5523, 5524, 5525, 5526, 5527, 5528, 5529, 5528,
     5530, 5531, 5532, 5533, 5534, 5535, 5536, 5537, 5538, 5539,

     5541, 5542, 5543, 5544, 5545, 5550, 5551, 5553, 5554, 5555,
     5556, 5559, 5561, 5562, 5564, 5565, 5566, 5568, 5569, 5570,
     5572, 5573, 5574, 5575, 5576, 5577, 5578, 5579, 5580, 5581,
     5582, 5583, 5585, 5586, 5587, 5588, 5589, 5590, 5592, 5593,
     5594, 5595, 5596, 5597, 5598, 5599, 5600, 5601, 5602, 5603,
     5604, 5605, 5606, 5607, 5608, 5610, 5612, 5613, 5614, 5615,
     5616, 5617, 5618, 5619, 5620, 5621, 5622, 5625, 5626, 5627,
     5628, 5630, 5631, 5633, 5634, 5635, 5636, 5637, 5638, 5639,
     5640, 5641, 5643, 5644, 5646, 5647, 5648, 5649, 5650, 5651,
     5652, 5653, 5654, 5655, 5656, 5657, 5658, 5660, 5661, 5662,

     5663, 5664, 5665, 5666, 5667, 5669, 5670, 5671, 5673, 5674,
     5675, 5676, 5677, 5678, 5679, 5680, 5681, 5682, 5683, 5684,
     5685, 5686, 5687, 5688, 5690, 5691, 5692, 5693, 5694, 5695,
     5696, 5697, 5698, 5699, 5700, 5701, 5702, 5703, 5704, 5705,
     5707, 5708, 5709, 5710, 5711, 5712, 5713, 5714, 5715, 5716,
     5717, 5718, 5719, 5720, 5721, 5722, 5724, 5725, 5726, 5727,
     5728, 5729, 5730, 5732, 5733, 5734, 5736, 5738, 5739, 5741,
     5742, 5743, 5745, 5746, 5747, 5748, 5750, 5755, 5750, 5756,
     5757, 5750, 5750, 5750, 5760, 5762, 5763, 5765, 5766, 5767,
     5768, 5769, 5770, 5771, 5772, 5775, 5776, 5777, 5780, 5781,

     5782, 5784, 5787, 5789, 5791, 5792, 5793, 5794, 5795, 5796,
     5797, 5798, 5799, 5800, 5801, 5802, 5803, 5804, 5805, 5806,
     5807, 5808, 5800, 5809, 5810, 5811, 5812, 5813, 5814, 5815,
     5816, 5817, 5818, 5819, 5821, 5822, 5823, 5824, 5825, 5826,
     5827, 5828, 5829, 5830, 5831, 5832, 5834, 5835, 5836, 5837,
     5838, 5839, 5840, 5841, 5842, 5843, 5844, 5845, 5846, 5847,
     5848, 5849, 5852, 5853, 5843, 5854, 5855, 5856, 5857, 5858,
     5859, 5860, 5861, 5863, 5865, 5866, 5868, 5869, 5870, 5871,
     5872, 5873, 5874, 5875, 5876, 5877, 5878, 5879, 5880, 5881,
     5882, 5884, 5885, 5886, 5887, 5889, 5890, 5892, 5893, 5894,

     5895, 5896, 5897, 5898, 5899, 5900, 5901, 5902, 5903, 5905,
     5907, 5908, 5909, 5910, 5912, 5913, 5914, 5915, 5916, 5917,
     5919, 5920, 5921, 5922, 5923, 5924, 5925, 5926, 5927, 5929,
     5930, 5931, 5932, 5933, 5936, 5937, 5938, 5939, 5940, 5941,
     5942, 5943, 5944, 5945, 5946, 5947, 5948, 5949, 5951, 5952,
     5954, 5954, 5955, 5956, 5957, 5958, 5959, 5960, 5961, 5963,
     5964, 5967, 5968, 5970, 5971, 5972, 5973, 5974, 5975, 5976,
     5977, 5978, 5979, 5981, 5982, 5983, 5984, 5985, 5986, 5987,
     5988, 5989, 5991, 5993, 5994, 5995, 5997, 5998, 5999, 6001,
     6002, 6003, 6004, 6006, 6007, 6009, 6010, 6011, 6012, 6014,

     6015, 6017, 6018, 6019, 6020, 6021, 6022, 6023, 6024, 6025,
     6026, 6027, 6028, 6031, 6032, 6035, 6036, 6037, 6038, 6042,
     6043, 6044, 6045, 6046, 6048, 6049, 6050, 6051, 6053, 6054,
     6055, 6056, 6057, 6058, 6059, 6060, 6061, 6062, 6063, 6065,
     6066, 6068, 6069, 6070, 6071, 6072, 6073, 6074, 6075, 6076,
     6077, 6078, 6079, 6080, 6081, 6082, 6084, 6085, 6086, 6087,
     6088, 6089, 6090, 6075, 6092, 6094, 6095, 6096, 6097, 6098,
     6099, 6100, 6101, 6102, 6104, 6105, 6109, 6110, 6111, 6114,
     6115, 6116, 6117, 6118, 6119, 6121, 6122, 6123, 6124, 6125,
     6126, 6127, 6129, 6130, 6131, 6133, 6134, 6135, 6136, 6138,

     6139, 6140, 6142, 6143, 6144, 6145, 6146, 6147, 6148, 6149,
     6151, 6153, 6154, 6155, 6156, 6158, 6160, 6161, 6165, 6166,
     6167, 6168, 6169, 6170, 6171, 6172, 6174, 6175, 6176, 6178,
     6179, 6180, 6182, 6183, 6184, 6185, 6186, 6187, 6188, 6189,
     6190, 6191, 6192, 6193, 6194, 6195, 6196, 6197, 6198, 6199,
     6201, 6204, 6205, 6207, 6208, 6209, 6210, 6211, 6214, 6215,
     6216, 6217, 6218, 6220, 6221, 6222, 6223, 6224, 6227, 6228,
     6229, 6231, 6232, 6233, 6234, 6235, 6238, 6239, 6240, 6241,
     6242, 6243, 6244, 6245, 6246, 6247, 6248, 6249, 6250, 6252,
     6253, 6255, 6256, 6258, 6259, 6261, 6262, 6263, 6264, 6265,

     6266, 6267, 6268, 6269, 6270, 6271, 6272, 6273, 6274, 6275,
     6278, 6278, 6278, 6278, 6279, 6279, 6279, 6279, 6280, 6280,
     6280, 6280, 6281, 6281, 6281, 6281, 6282, 6283, 6283, 6284,
     6284, 6285, 6286, 6286, 6287, 6287, 6288, 6290, 6288, 6288,
     6289, 6291, 6289, 6289, 6292, 6293, 6293, 6293, 6293, 6294,
     6294, 6294, 6294, 1051, 1050, 1046, 1044, 1043, 1042, 1041,
     1040, 1038, 1036, 1035, 1034, 1032, 1031, 1030, 1029, 1028,
     1027, 1026, 1025, 1024, 1022, 1021, 1019, 1018, 1017, 1016,
     1015, 1013, 1012, 1011, 1009, 1008, 1007, 1006,  999,  998,
      997,  996,  995,  994,  993,  984,  983,  982,  981,  980,

      979,  977,  976,  975,  961,  956,  955,  954,  953,  952,
      951,  950,  949,  947,  946,  945,  944,  942,  940,  939,
      938,  937,  935,  933,  931,  930,  929,  928,  927,  924,
      923,  921,  920,  919,  918,  917,  916,  914,  913,  911,
      910,  909,  908,  907,  906,  905,  904,  903,  902,  899,
      898,  896,  895,  891,  890,  889,  887,  886,  885,  882,
      881,  878,  877,  876,  875,  874,  871,  870,  869,  868,
      867,  865,  864,  863,  862,  849,  848,  847,  846,  845,
      844,  843,  828,  827,  826,  825,  824,  823,  822,  821,
      819,  818,  817,  816,  813,  811,  810,  808,  807,  806,

      803,  802,  799,  797,  795,  794,  792,  791,  789,  788,
      787,  786,  785,  784,  782,  781,  780,  779,  778,  777,
      776,  762,  737,  733,  732,  731,  730,  729,  728,  727,
      726,  725,  724,  718,  717,  715,  714,  713,  712,  711,
      710,  704,  703,  702,  701,  699,  698,  697,  696,  695,
      693,  692,  690,  687,  686,  685,  684,  683,  682,  680,
      679,  677,  676,  675,  674,  673,  672,  671,  670,  669,
      668,  667,  666,  665,  663,  662,  661,  660,  659,  657,
      656,  655,  654,  653,  652,  651,  650,  649,  647,  646,
      645,  644,  642,  641,  640,  639,  637,  636,  635,  634,

      633,  632,  631,  630,  629,  628,  627,  626,  625,  624,
      623,  622,  621,  620,  619,  618,  617,  616,  615,  608,
      607,  605,  603,  602,  601,  600,  599,  597,  596,  595,
      594,  593,  592,  590,  589,  588,  587,  586,  585,  584,
      583,  581,  579,  578,  576,  575,  573,  572,  571,  570,
      568,  567,  565,  564,  563,  561,  560,  559,  558,  557,
      556,  555,  554,  553,  552,  551,  550,  549,  547,  546,
      545,  544,  543,  542,  541,  540,  539,  538,  537,  536,
      535,  534,  533,  525,  523,  522,  521,  520,  507,  506,
      505,  504,  503,  502,  501,  500,  497,  496,  495,  494,

      493,  490,  489,  488,  485,  484,  483,  481,  479,  478,
      477,  476,  475,  474,  473,  472,  471,  470,  469,  468,
      467,  464,  463,  462,  461,  460,  459,  457,  456,  455,
      453,  452,  450,  449,  443,  442,  440,  439,  438,  437,
      436,  435,  433,  432,  431,  430,  429,  428,  427,  425,
      424,  423,  422,  421,  420,  418,  417,  416,  415,  414,
      413,  402,  400,  399,  398,  397,  379,  377,  376,  375,
      374,  373,  372,  371,  370,  369,  368,  363,  362,  361,
      360,  359,  358,  355,  353,  350,  348,  341,  340,  338,
      337,  336,  329,  326,  325,  324,  318,  316,  315,  314,

      313,  312,  311,  309,  308,  307,  300,  299,  298,  297,
      295,  294,  293,  282,  280,  267,  259,  254,  253,  252,
      251,  250,  248,  247,  246,  227,  208,  206,  205,  204,
      202,  200,  195,  184,  181,  179,  170,  144,  137,  135,
      133,  132,  115,   86,   80,   78,   77,   76,   67,   63,
       50,   49, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,

     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277,
     6277, 6277, 6277, 6277, 6277, 6277, 6277, 6277
    } ;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "parameters_flexer.ll"
#line 8 "parameters_flexer.ll"
/*
 * Written by Bastien Chevreux (BaCh)
 *
 * Copyright (C) 1997-2000 by the German Cancer Research Center (Deutsches
 *   Krebsforschungszentrum, DKFZ Heidelberg) and Bastien Chevreux
 * Copyright (C) 2000 and later by Bastien Chevreux
 *
 * All rights reserved.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the
 * Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA
 *
 */

#include <fstream>
#include "parameters_tokens.h"

#include "enums.H"

using namespace std;

#if defined(__sgi) && !defined(__GNUC__) && (_MIPS_SIM != _MIPS_SIM_ABI32)
#pragma set woff 1110
#endif

  int filenameid=0;
  int singlechar_id=0;































#line 4684 "parameters_flexer.cc"

#define INITIAL 0
#define JOB_MODE 1
#define GET_UNTIL_NEWLINE 2
#define GE_MODE 3
#define SB_MODE 4
#define LR_MODE 5
#define LR_EQMODE 6
#define LR_RNSMODE 7
#define CL_MODE 8
#define SR_MODE 9
#define FILE_MODE 10
#define OUTPUT_MODE 11
#define FN_MODE 12
#define ASK_YN_MODE 13
#define GET_SINGLECHAR_STRING_MODE 14
#define PAF_MODE 15
#define EDIT_MODE 16
#define SKIM_MODE 17
#define HASHSTAT_MODE 18
#define ALIGN_MODE 19
#define AL_GPLMODE 20
#define AS_MODE 21
#define DP_MODE 22
#define CO_MODE 23
#define DIR_MODE 24
#define MI_MODE 25
#define NW_MODE 26
#define NW_CHOICEMODE 27
#define CO_VALMODE 28
#define COMMENT_MODE 29
#define ASKFORTECH_NOCLIPPING 30

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
#include <unistd.h>
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy (char *,yyconst char *,int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * );
#endif

#ifndef YY_NO_INPUT

#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
#define ECHO LexerOutput( yytext, yyleng )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
\
	if ( (result = LexerInput( (char *) buf, max_size )) < 0 ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) LexerError( msg )
#endif

/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
#define YY_DECL int yyFlexLexer::yylex()
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

/** The main scanner function which does all the work.
 */
YY_DECL
{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;
    
#line 85 "parameters_flexer.ll"


#line 4822 "parameters_flexer.cc"

	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! yyin )
			yyin = & std::cin;

		if ( ! yyout )
			yyout = & std::cout;

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE );
		}

		yy_load_buffer_state(  );
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = (yy_c_buf_p);

		/* Support of yytext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = (yy_start);
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 6278 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 9553 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;

case 1:
#line 88 "parameters_flexer.ll"
case 2:
YY_RULE_SETUP
#line 88 "parameters_flexer.ll"
{return MP_as_numthreads;}
	YY_BREAK
case 3:
#line 90 "parameters_flexer.ll"
case 4:
YY_RULE_SETUP
#line 90 "parameters_flexer.ll"
{return MP_as_amm_keeppercentfree;}
	YY_BREAK
case 5:
#line 92 "parameters_flexer.ll"
case 6:
YY_RULE_SETUP
#line 92 "parameters_flexer.ll"
{return MP_as_amm_maxprocesssize;}
	YY_BREAK
case 7:
#line 94 "parameters_flexer.ll"
case 8:
YY_RULE_SETUP
#line 94 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_automemmanagement;}
	YY_BREAK
case 9:
#line 97 "parameters_flexer.ll"
case 10:
YY_RULE_SETUP
#line 97 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_cleanup_tmp_files;}
	YY_BREAK
case 11:
#line 100 "parameters_flexer.ll"
case 12:
YY_RULE_SETUP
#line 100 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_nodateoutput;}
	YY_BREAK
case 13:
#line 102 "parameters_flexer.ll"
case 14:
YY_RULE_SETUP
#line 102 "parameters_flexer.ll"
{ return MP_sp_est_startstep;}
	YY_BREAK
case 15:
#line 104 "parameters_flexer.ll"
case 16:
YY_RULE_SETUP
#line 104 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_buntify_reads;}
	YY_BREAK
case 17:
#line 108 "parameters_flexer.ll"
case 18:
YY_RULE_SETUP
#line 108 "parameters_flexer.ll"
{yy_push_state(ASK_YN_MODE); return MP_as_wants_qualityfile;}
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 110 "parameters_flexer.ll"
{ BEGIN(LR_MODE); return E_QUAL_NONE;}
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 111 "parameters_flexer.ll"
{ BEGIN(LR_MODE); return E_QUAL_SCF;}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 112 "parameters_flexer.ll"
{ BEGIN(0); return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 113 "parameters_flexer.ll"
{ BEGIN(0); return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 114 "parameters_flexer.ll"
{ BEGIN(0); return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 24:
/* rule 24 can match eol */
YY_RULE_SETUP
#line 115 "parameters_flexer.ll"
{ BEGIN(0); return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 25:
#line 117 "parameters_flexer.ll"
case 26:
YY_RULE_SETUP
#line 117 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_filecheck_only;}
	YY_BREAK
case 27:
#line 121 "parameters_flexer.ll"
case 28:
YY_RULE_SETUP
#line 121 "parameters_flexer.ll"
{ return MP_as_backbone_raillength;}
	YY_BREAK
case 29:
#line 123 "parameters_flexer.ll"
case 30:
YY_RULE_SETUP
#line 123 "parameters_flexer.ll"
{ return MP_as_backbone_railoverlap;}
	YY_BREAK
case 31:
#line 125 "parameters_flexer.ll"
case 32:
YY_RULE_SETUP
#line 125 "parameters_flexer.ll"
{ filenameid=MP_as_backbone_rail_fromstrain; yy_push_state(FN_MODE);}
	YY_BREAK
case 33:
#line 127 "parameters_flexer.ll"
case 34:
YY_RULE_SETUP
#line 127 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_backbone_strainname_forceforall;}
	YY_BREAK
case 35:
#line 129 "parameters_flexer.ll"
case 36:
YY_RULE_SETUP
#line 129 "parameters_flexer.ll"
{ return MP_as_backbone_basequals;}
	YY_BREAK
case 37:
#line 131 "parameters_flexer.ll"
case 38:
YY_RULE_SETUP
#line 131 "parameters_flexer.ll"
{ return MP_as_startbackboneusage_inpass;}
	YY_BREAK
case 39:
#line 133 "parameters_flexer.ll"
case 40:
YY_RULE_SETUP
#line 133 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_backbone_alsobuildnewcontigs;}
	YY_BREAK
case 41:
#line 135 "parameters_flexer.ll"
case 42:
YY_RULE_SETUP
#line 135 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_backbone_trimoverhangingreads;}
	YY_BREAK
case 43:
#line 137 "parameters_flexer.ll"
case 44:
YY_RULE_SETUP
#line 137 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_backbone_bootstrapnewbackbone;}
	YY_BREAK
case 45:
#line 141 "parameters_flexer.ll"
case 46:
YY_RULE_SETUP
#line 141 "parameters_flexer.ll"
{ return MP_as_clip_ssahamerge_strictfrontclip;}
	YY_BREAK
case 47:
#line 143 "parameters_flexer.ll"
case 48:
YY_RULE_SETUP
#line 143 "parameters_flexer.ll"
{ return MP_as_clip_ssahamerge_strictendclip;}
	YY_BREAK
case 49:
#line 145 "parameters_flexer.ll"
case 50:
YY_RULE_SETUP
#line 145 "parameters_flexer.ll"
{ return MP_as_clip_ssahamerge_gapsize;}
	YY_BREAK
case 51:
#line 147 "parameters_flexer.ll"
case 52:
YY_RULE_SETUP
#line 147 "parameters_flexer.ll"
{ return MP_as_clip_ssahamerge_maxfrontgap;}
	YY_BREAK
case 53:
#line 149 "parameters_flexer.ll"
case 54:
YY_RULE_SETUP
#line 149 "parameters_flexer.ll"
{ return MP_as_clip_ssahamerge_maxendgap;}
	YY_BREAK
case 55:
#line 151 "parameters_flexer.ll"
case 56:
YY_RULE_SETUP
#line 151 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_possible_vectors;}
	YY_BREAK
case 57:
#line 153 "parameters_flexer.ll"
case 58:
YY_RULE_SETUP
#line 153 "parameters_flexer.ll"
{ return MP_as_clip_vector_maxlenallowed;}
	YY_BREAK
case 59:
#line 155 "parameters_flexer.ll"
case 60:
YY_RULE_SETUP
#line 155 "parameters_flexer.ll"
{ return MP_as_clip_badstretchquality_minqual;}
	YY_BREAK
case 61:
#line 157 "parameters_flexer.ll"
case 62:
YY_RULE_SETUP
#line 157 "parameters_flexer.ll"
{ return MP_as_clip_badstretchquality_winlen;}
	YY_BREAK
case 63:
#line 159 "parameters_flexer.ll"
case 64:
YY_RULE_SETUP
#line 159 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_badstretchquality;}
	YY_BREAK
case 65:
#line 161 "parameters_flexer.ll"
case 66:
YY_RULE_SETUP
#line 161 "parameters_flexer.ll"
{ return MP_as_clip_quality_minqual;}
	YY_BREAK
case 67:
#line 163 "parameters_flexer.ll"
case 68:
YY_RULE_SETUP
#line 163 "parameters_flexer.ll"
{ return MP_as_clip_quality_winlen;}
	YY_BREAK
case 69:
#line 165 "parameters_flexer.ll"
case 70:
YY_RULE_SETUP
#line 165 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_quality;}
	YY_BREAK
case 71:
#line 167 "parameters_flexer.ll"
case 72:
YY_RULE_SETUP
#line 167 "parameters_flexer.ll"
{ return MP_as_clip_maskedbases_gapsize;}
	YY_BREAK
case 73:
#line 169 "parameters_flexer.ll"
case 74:
YY_RULE_SETUP
#line 169 "parameters_flexer.ll"
{ return MP_as_clip_maskedbases_maxfrontgap;}
	YY_BREAK
case 75:
#line 171 "parameters_flexer.ll"
case 76:
YY_RULE_SETUP
#line 171 "parameters_flexer.ll"
{ return MP_as_clip_maskedbases_maxendgap;}
	YY_BREAK
case 77:
#line 173 "parameters_flexer.ll"
case 78:
YY_RULE_SETUP
#line 173 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_maskedbases;}
	YY_BREAK
case 79:
#line 175 "parameters_flexer.ll"
case 80:
YY_RULE_SETUP
#line 175 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_lowercase_front;}
	YY_BREAK
case 81:
#line 177 "parameters_flexer.ll"
case 82:
YY_RULE_SETUP
#line 177 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_lowercase_back;}
	YY_BREAK
case 83:
#line 179 "parameters_flexer.ll"
case 84:
YY_RULE_SETUP
#line 179 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_ensureminimumleftclip;}
	YY_BREAK
case 85:
#line 181 "parameters_flexer.ll"
case 86:
YY_RULE_SETUP
#line 181 "parameters_flexer.ll"
{ return MP_as_clip_minimumleftcliprequired;}
	YY_BREAK
case 87:
#line 183 "parameters_flexer.ll"
case 88:
YY_RULE_SETUP
#line 183 "parameters_flexer.ll"
{ return MP_as_clip_setminimumleftclip;}
	YY_BREAK
case 89:
YY_RULE_SETUP
#line 184 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_ensureminimumrightclip;}
	YY_BREAK
case 90:
#line 186 "parameters_flexer.ll"
case 91:
YY_RULE_SETUP
#line 186 "parameters_flexer.ll"
{ return MP_as_clip_minimumrightcliprequired;}
	YY_BREAK
case 92:
#line 188 "parameters_flexer.ll"
case 93:
YY_RULE_SETUP
#line 188 "parameters_flexer.ll"
{ return MP_as_clip_setminimumrightclip;}
	YY_BREAK
case 94:
#line 190 "parameters_flexer.ll"
case 95:
YY_RULE_SETUP
#line 190 "parameters_flexer.ll"
{ return MP_as_clip_quality_numminthreshold;}
	YY_BREAK
case 96:
#line 192 "parameters_flexer.ll"
case 97:
YY_RULE_SETUP
#line 192 "parameters_flexer.ll"
{ return MP_as_clip_quality_minthreshold;}
	YY_BREAK
case 98:
#line 195 "parameters_flexer.ll"
case 99:
YY_RULE_SETUP
#line 195 "parameters_flexer.ll"
{yy_push_state(ASK_YN_MODE); return MP_as_clip_3ppolybase;}
	YY_BREAK
case 100:
#line 197 "parameters_flexer.ll"
case 101:
YY_RULE_SETUP
#line 197 "parameters_flexer.ll"
{return MP_as_clip_3ppolybase_len;}
	YY_BREAK
case 102:
#line 199 "parameters_flexer.ll"
case 103:
YY_RULE_SETUP
#line 199 "parameters_flexer.ll"
{return MP_as_clip_3ppolybase_maxerrors;}
	YY_BREAK
case 104:
#line 201 "parameters_flexer.ll"
case 105:
YY_RULE_SETUP
#line 201 "parameters_flexer.ll"
{return MP_as_clip_3ppolybase_maxgap;}
	YY_BREAK
case 106:
#line 204 "parameters_flexer.ll"
case 107:
YY_RULE_SETUP
#line 204 "parameters_flexer.ll"
{yy_push_state(ASK_YN_MODE); return MP_as_clip_polyat;}
	YY_BREAK
case 108:
#line 206 "parameters_flexer.ll"
case 109:
YY_RULE_SETUP
#line 206 "parameters_flexer.ll"
{yy_push_state(ASK_YN_MODE); return MP_as_clip_polyat_keeppolystretch;}
	YY_BREAK
case 110:
#line 208 "parameters_flexer.ll"
case 111:
YY_RULE_SETUP
#line 208 "parameters_flexer.ll"
{return MP_as_clip_polyat_len;}
	YY_BREAK
case 112:
#line 210 "parameters_flexer.ll"
case 113:
YY_RULE_SETUP
#line 210 "parameters_flexer.ll"
{return MP_as_clip_polyat_maxerrors;}
	YY_BREAK
case 114:
#line 212 "parameters_flexer.ll"
case 115:
YY_RULE_SETUP
#line 212 "parameters_flexer.ll"
{return MP_as_clip_polyat_maxgap;}
	YY_BREAK
case 116:
#line 215 "parameters_flexer.ll"
case 117:
YY_RULE_SETUP
#line 215 "parameters_flexer.ll"
{ return MP_as_clip_pec_basesperhash;}
	YY_BREAK
case 118:
#line 217 "parameters_flexer.ll"
case 119:
YY_RULE_SETUP
#line 217 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_proposeendclips;}
	YY_BREAK
case 120:
#line 219 "parameters_flexer.ll"
case 121:
YY_RULE_SETUP
#line 219 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_pec_sxaggcxg;}
	YY_BREAK
case 122:
YY_RULE_SETUP
#line 220 "parameters_flexer.ll"
{ return MP_as_clip_pec_ffreq;}
	YY_BREAK
case 123:
YY_RULE_SETUP
#line 221 "parameters_flexer.ll"
{ return MP_as_clip_pec_bfreq;}
	YY_BREAK
case 124:
YY_RULE_SETUP
#line 222 "parameters_flexer.ll"
{ return MP_as_clip_pec_mkfr;}
	YY_BREAK
case 125:
YY_RULE_SETUP
#line 223 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_pec_ffr;}
	YY_BREAK
case 126:
YY_RULE_SETUP
#line 224 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_pec_bfr;}
	YY_BREAK
case 127:
YY_RULE_SETUP
#line 225 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_pec_fcmst;}
	YY_BREAK
case 128:
YY_RULE_SETUP
#line 226 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_pec_bcmst;}
	YY_BREAK
case 129:
YY_RULE_SETUP
#line 227 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_pec_fsalp;}
	YY_BREAK
case 130:
YY_RULE_SETUP
#line 228 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_pec_bsalp;}
	YY_BREAK
case 131:
#line 230 "parameters_flexer.ll"
case 132:
YY_RULE_SETUP
#line 230 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_skimchimeradetection;}
	YY_BREAK
case 133:
#line 232 "parameters_flexer.ll"
case 134:
YY_RULE_SETUP
#line 232 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_skimjunkdetection;}
	YY_BREAK
case 135:
#line 234 "parameters_flexer.ll"
case 136:
YY_RULE_SETUP
#line 234 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_badsolexaends;}
	YY_BREAK
case 137:
#line 236 "parameters_flexer.ll"
case 138:
YY_RULE_SETUP
#line 236 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_search_phix174;}
	YY_BREAK
case 139:
#line 238 "parameters_flexer.ll"
case 140:
YY_RULE_SETUP
#line 238 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_filter_phix174;}
	YY_BREAK
case 141:
#line 240 "parameters_flexer.ll"
case 142:
YY_RULE_SETUP
#line 240 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_clip_knownadaptorsright;}
	YY_BREAK
case 143:
#line 242 "parameters_flexer.ll"
case 144:
YY_RULE_SETUP
#line 242 "parameters_flexer.ll"
{ return MP_as_clipmask_rarekmers;}
	YY_BREAK
case 145:
#line 248 "parameters_flexer.ll"
case 146:
YY_RULE_SETUP
#line 248 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_savesimplesingletsinproject;}
	YY_BREAK
case 147:
#line 250 "parameters_flexer.ll"
case 148:
YY_RULE_SETUP
#line 250 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_savesimplesingletsinproject;}
	YY_BREAK
case 149:
#line 252 "parameters_flexer.ll"
case 150:
YY_RULE_SETUP
#line 252 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_removerollovertmps;}
	YY_BREAK
case 151:
#line 254 "parameters_flexer.ll"
case 152:
YY_RULE_SETUP
#line 254 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_removetmpdir;}
	YY_BREAK
case 153:
#line 257 "parameters_flexer.ll"
case 154:
YY_RULE_SETUP
#line 257 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_tmp_html;}
	YY_BREAK
case 155:
#line 259 "parameters_flexer.ll"
case 156:
YY_RULE_SETUP
#line 259 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_tmp_text;}
	YY_BREAK
case 157:
#line 261 "parameters_flexer.ll"
case 158:
YY_RULE_SETUP
#line 261 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_tmp_tcs;}
	YY_BREAK
case 159:
#line 263 "parameters_flexer.ll"
case 160:
YY_RULE_SETUP
#line 263 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_tmp_caf;}
	YY_BREAK
case 161:
#line 265 "parameters_flexer.ll"
case 162:
YY_RULE_SETUP
#line 265 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_tmp_maf;}
	YY_BREAK
case 163:
#line 267 "parameters_flexer.ll"
case 164:
YY_RULE_SETUP
#line 267 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_tmp_ace;}
	YY_BREAK
case 165:
#line 269 "parameters_flexer.ll"
case 166:
YY_RULE_SETUP
#line 269 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_tmp_gap4da;}
	YY_BREAK
case 167:
#line 271 "parameters_flexer.ll"
case 168:
YY_RULE_SETUP
#line 271 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_tmp_fasta;}
	YY_BREAK
case 169:
#line 274 "parameters_flexer.ll"
case 170:
YY_RULE_SETUP
#line 274 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_exttmp_alsosinglets;}
	YY_BREAK
case 171:
#line 276 "parameters_flexer.ll"
case 172:
YY_RULE_SETUP
#line 276 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_exttmp_html;}
	YY_BREAK
case 173:
#line 278 "parameters_flexer.ll"
case 174:
YY_RULE_SETUP
#line 278 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_exttmp_caf;}
	YY_BREAK
case 175:
#line 280 "parameters_flexer.ll"
case 176:
YY_RULE_SETUP
#line 280 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_exttmp_ace;}
	YY_BREAK
case 177:
#line 282 "parameters_flexer.ll"
case 178:
YY_RULE_SETUP
#line 282 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_exttmp_gap4da;}
	YY_BREAK
case 179:
#line 284 "parameters_flexer.ll"
case 180:
YY_RULE_SETUP
#line 284 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_exttmp_fasta;}
	YY_BREAK
case 181:
#line 287 "parameters_flexer.ll"
case 182:
YY_RULE_SETUP
#line 287 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_caf;}
	YY_BREAK
case 183:
#line 289 "parameters_flexer.ll"
case 184:
YY_RULE_SETUP
#line 289 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_maf;}
	YY_BREAK
case 185:
#line 291 "parameters_flexer.ll"
case 186:
YY_RULE_SETUP
#line 291 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_html;}
	YY_BREAK
case 187:
#line 293 "parameters_flexer.ll"
case 188:
YY_RULE_SETUP
#line 293 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_text;}
	YY_BREAK
case 189:
#line 295 "parameters_flexer.ll"
case 190:
YY_RULE_SETUP
#line 295 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_ace;}
	YY_BREAK
case 191:
#line 297 "parameters_flexer.ll"
case 192:
YY_RULE_SETUP
#line 297 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_wiggle;}
	YY_BREAK
case 193:
#line 299 "parameters_flexer.ll"
case 194:
YY_RULE_SETUP
#line 299 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_tcs;}
	YY_BREAK
case 195:
#line 301 "parameters_flexer.ll"
case 196:
YY_RULE_SETUP
#line 301 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_gff3;}
	YY_BREAK
case 197:
#line 303 "parameters_flexer.ll"
case 198:
YY_RULE_SETUP
#line 303 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_gap4da;}
	YY_BREAK
case 199:
#line 305 "parameters_flexer.ll"
case 200:
YY_RULE_SETUP
#line 305 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_output_fasta;}
	YY_BREAK
case 201:
#line 308 "parameters_flexer.ll"
case 202:
YY_RULE_SETUP
#line 308 "parameters_flexer.ll"
{ return MP_con_output_html_cpl;}
	YY_BREAK
case 203:
#line 310 "parameters_flexer.ll"
case 204:
YY_RULE_SETUP
#line 310 "parameters_flexer.ll"
{ return MP_con_output_text_cpl;}
	YY_BREAK
case 205:
#line 312 "parameters_flexer.ll"
case 206:
YY_RULE_SETUP
#line 312 "parameters_flexer.ll"
{ singlechar_id=MP_con_output_html_gapfill; yy_push_state(GET_SINGLECHAR_STRING_MODE);}
	YY_BREAK
case 207:
#line 314 "parameters_flexer.ll"
case 208:
YY_RULE_SETUP
#line 314 "parameters_flexer.ll"
{ singlechar_id=MP_con_output_text_gapfill;yy_push_state(GET_SINGLECHAR_STRING_MODE);}
	YY_BREAK
case 209:
YY_RULE_SETUP
#line 316 "parameters_flexer.ll"

	YY_BREAK
case 210:
YY_RULE_SETUP
#line 317 "parameters_flexer.ll"
{yy_pop_state(); return singlechar_id;}
	YY_BREAK
case 211:
YY_RULE_SETUP
#line 318 "parameters_flexer.ll"
{yy_pop_state(); return singlechar_id;}
	YY_BREAK
case 212:
YY_RULE_SETUP
#line 319 "parameters_flexer.ll"

	YY_BREAK
case 213:
YY_RULE_SETUP
#line 320 "parameters_flexer.ll"
{yy_pop_state(); return singlechar_id;}
	YY_BREAK
case 214:
YY_RULE_SETUP
#line 323 "parameters_flexer.ll"
{yy_pop_state(); return 1;}
	YY_BREAK
case 215:
YY_RULE_SETUP
#line 324 "parameters_flexer.ll"
{yy_pop_state(); return 0;}
	YY_BREAK
case 216:
YY_RULE_SETUP
#line 325 "parameters_flexer.ll"
{yy_pop_state(); return 1;}
	YY_BREAK
case 217:
YY_RULE_SETUP
#line 326 "parameters_flexer.ll"
{yy_pop_state(); return 0;}
	YY_BREAK
case 218:
YY_RULE_SETUP
#line 327 "parameters_flexer.ll"
{yy_pop_state(); return 1;}
	YY_BREAK
case 219:
YY_RULE_SETUP
#line 328 "parameters_flexer.ll"
{yy_pop_state(); return 0;}
	YY_BREAK
case 220:
YY_RULE_SETUP
#line 329 "parameters_flexer.ll"
{yy_pop_state(); return 1;}
	YY_BREAK
case 221:
YY_RULE_SETUP
#line 330 "parameters_flexer.ll"
{yy_pop_state(); return 0;}
	YY_BREAK
case 222:
YY_RULE_SETUP
#line 331 "parameters_flexer.ll"
{}
	YY_BREAK
case 223:
YY_RULE_SETUP
#line 332 "parameters_flexer.ll"
{yy_pop_state(); return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 224:
#line 335 "parameters_flexer.ll"
case 225:
YY_RULE_SETUP
#line 335 "parameters_flexer.ll"
{filenameid=MP_dir_tmp_redirectedto; yy_push_state(FN_MODE); }
	YY_BREAK
case 226:
YY_RULE_SETUP
#line 336 "parameters_flexer.ll"
{filenameid=MP_dir_tmp; yy_push_state(FN_MODE); }
	YY_BREAK
case 227:
YY_RULE_SETUP
#line 338 "parameters_flexer.ll"
{ yy_pop_state(); return filenameid;}
	YY_BREAK
case 228:
#line 342 "parameters_flexer.ll"
case 229:
YY_RULE_SETUP
#line 342 "parameters_flexer.ll"
{ return MP_as_minimum_readlength;}
	YY_BREAK
case 230:
#line 344 "parameters_flexer.ll"
case 231:
YY_RULE_SETUP
#line 344 "parameters_flexer.ll"
{ return MP_as_minimum_readspercontig;}
	YY_BREAK
case 232:
#line 346 "parameters_flexer.ll"
case 233:
YY_RULE_SETUP
#line 346 "parameters_flexer.ll"
{ return(MP_as_numpasses);}
	YY_BREAK
case 234:
#line 348 "parameters_flexer.ll"
case 235:
YY_RULE_SETUP
#line 348 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return(MP_as_skimeachpass);}
	YY_BREAK
case 236:
#line 350 "parameters_flexer.ll"
case 237:
YY_RULE_SETUP
#line 350 "parameters_flexer.ll"
{ return MP_as_numrmbbreakloops;}
	YY_BREAK
case 238:
#line 352 "parameters_flexer.ll"
case 239:
YY_RULE_SETUP
#line 352 "parameters_flexer.ll"
{ return MP_as_maxcontigsperpass;}
	YY_BREAK
case 240:
#line 354 "parameters_flexer.ll"
case 241:
YY_RULE_SETUP
#line 354 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_spoiler_detection;}
	YY_BREAK
case 242:
#line 356 "parameters_flexer.ll"
case 243:
YY_RULE_SETUP
#line 356 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_sd_lastpassonly;}
	YY_BREAK
case 244:
#line 358 "parameters_flexer.ll"
case 245:
YY_RULE_SETUP
#line 358 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_automatic_repeat_detection;}
	YY_BREAK
case 246:
#line 360 "parameters_flexer.ll"
case 247:
YY_RULE_SETUP
#line 360 "parameters_flexer.ll"
{ return MP_as_ard_multicopythreshold;}
	YY_BREAK
case 248:
#line 362 "parameters_flexer.ll"
case 249:
YY_RULE_SETUP
#line 362 "parameters_flexer.ll"
{ return MP_as_ard_multicopyminlen;}
	YY_BREAK
case 250:
#line 364 "parameters_flexer.ll"
case 251:
YY_RULE_SETUP
#line 364 "parameters_flexer.ll"
{ return MP_as_ard_multicopygrace;}
	YY_BREAK
case 252:
#line 366 "parameters_flexer.ll"
case 253:
YY_RULE_SETUP
#line 366 "parameters_flexer.ll"
{ return MP_as_urd_cutoffmultiplier;}
	YY_BREAK
case 254:
#line 368 "parameters_flexer.ll"
case 255:
YY_RULE_SETUP
#line 368 "parameters_flexer.ll"
{ return MP_as_urd_startinpass;}
	YY_BREAK
case 256:
#line 370 "parameters_flexer.ll"
case 257:
YY_RULE_SETUP
#line 370 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_uniform_read_distribution;}
	YY_BREAK
case 258:
#line 372 "parameters_flexer.ll"
case 259:
YY_RULE_SETUP
#line 372 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_paf_use_genomic_pathfinder;}
	YY_BREAK
case 260:
#line 374 "parameters_flexer.ll"
case 261:
YY_RULE_SETUP
#line 374 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_paf_use_emergency_search_stop;}
	YY_BREAK
case 262:
#line 376 "parameters_flexer.ll"
case 263:
YY_RULE_SETUP
#line 376 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_paf_use_emergency_blacklist;}
	YY_BREAK
case 264:
#line 378 "parameters_flexer.ll"
case 265:
YY_RULE_SETUP
#line 378 "parameters_flexer.ll"
{return MP_paf_ess_partnerdepth;}
	YY_BREAK
case 266:
#line 380 "parameters_flexer.ll"
case 267:
YY_RULE_SETUP
#line 380 "parameters_flexer.ll"
{yy_push_state(ASK_YN_MODE); return MP_paf_use_max_contig_buildtime;}
	YY_BREAK
case 268:
#line 382 "parameters_flexer.ll"
case 269:
YY_RULE_SETUP
#line 382 "parameters_flexer.ll"
{return MP_paf_buildtime_inseconds;}
	YY_BREAK
case 270:
#line 384 "parameters_flexer.ll"
case 271:
YY_RULE_SETUP
#line 384 "parameters_flexer.ll"
{yy_push_state(ASK_YN_MODE); return MP_as_enforce_qualsinreads;}
	YY_BREAK
case 272:
#line 388 "parameters_flexer.ll"
case 273:
YY_RULE_SETUP
#line 388 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_extend_reads;}
	YY_BREAK
case 274:
#line 390 "parameters_flexer.ll"
case 275:
YY_RULE_SETUP
#line 390 "parameters_flexer.ll"
{return MP_as_readextension_window_len;}
	YY_BREAK
case 276:
#line 392 "parameters_flexer.ll"
case 277:
YY_RULE_SETUP
#line 392 "parameters_flexer.ll"
{return MP_as_readextension_window_maxerrors;}
	YY_BREAK
case 278:
#line 394 "parameters_flexer.ll"
case 279:
YY_RULE_SETUP
#line 394 "parameters_flexer.ll"
{return MP_as_readextension_firstpassnum;}
	YY_BREAK
case 280:
#line 396 "parameters_flexer.ll"
case 281:
YY_RULE_SETUP
#line 396 "parameters_flexer.ll"
{return MP_as_readextension_lastpassnum;}
	YY_BREAK
case 282:
#line 400 "parameters_flexer.ll"
case 283:
YY_RULE_SETUP
#line 400 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_ed_mira_automatic_contig_editing;}
	YY_BREAK
case 284:
YY_RULE_SETUP
#line 401 "parameters_flexer.ll"

	YY_BREAK
case 285:
YY_RULE_SETUP
#line 402 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_ed_kmer_singlets;}
	YY_BREAK
case 286:
YY_RULE_SETUP
#line 403 "parameters_flexer.ll"

	YY_BREAK
case 287:
YY_RULE_SETUP
#line 404 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_ed_homopolymer_overcalls;}
	YY_BREAK
case 288:
#line 407 "parameters_flexer.ll"
case 289:
YY_RULE_SETUP
#line 407 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_ed_edit_automatic_contig_editing;}
	YY_BREAK
case 290:
#line 409 "parameters_flexer.ll"
case 291:
YY_RULE_SETUP
#line 409 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_ed_strict;}
	YY_BREAK
case 292:
#line 411 "parameters_flexer.ll"
case 293:
YY_RULE_SETUP
#line 411 "parameters_flexer.ll"
{ return MP_ed_confirmation_threshold;}
	YY_BREAK
case 294:
#line 414 "parameters_flexer.ll"
case 295:
YY_RULE_SETUP
#line 414 "parameters_flexer.ll"
{return MP_sk_numthreads;}
	YY_BREAK
case 296:
YY_RULE_SETUP
#line 415 "parameters_flexer.ll"
{return MP_sk_bph_increasestep;}
	YY_BREAK
case 297:
YY_RULE_SETUP
#line 416 "parameters_flexer.ll"
{return MP_sk_bph_coveragethreshold;}
	YY_BREAK
case 298:
#line 418 "parameters_flexer.ll"
case 299:
YY_RULE_SETUP
#line 418 "parameters_flexer.ll"
{return MP_sk_basesperhash;}
	YY_BREAK
case 300:
#line 420 "parameters_flexer.ll"
case 301:
YY_RULE_SETUP
#line 420 "parameters_flexer.ll"
{return MP_sk_hashsavestepping;}
	YY_BREAK
case 302:
#line 422 "parameters_flexer.ll"
case 303:
YY_RULE_SETUP
#line 422 "parameters_flexer.ll"
{return MP_sk_percentrequired;}
	YY_BREAK
case 304:
#line 424 "parameters_flexer.ll"
case 305:
YY_RULE_SETUP
#line 424 "parameters_flexer.ll"
{return MP_sk_maxhitsperread;}
	YY_BREAK
case 306:
#line 426 "parameters_flexer.ll"
case 307:
YY_RULE_SETUP
#line 426 "parameters_flexer.ll"
{return MP_sk_maxhashesinmemory;}
	YY_BREAK
case 308:
#line 428 "parameters_flexer.ll"
case 309:
YY_RULE_SETUP
#line 428 "parameters_flexer.ll"
{return MP_sk_memcaphitreduction;}
	YY_BREAK
case 310:
#line 430 "parameters_flexer.ll"
case 311:
YY_RULE_SETUP
#line 430 "parameters_flexer.ll"
{yy_push_state(ASK_YN_MODE); return MP_sk_alsoskimrevcomp;}
	YY_BREAK
case 312:
#line 432 "parameters_flexer.ll"
case 313:
YY_RULE_SETUP
#line 432 "parameters_flexer.ll"
{yy_push_state(ASK_YN_MODE); return MP_sk_swcheckonbackbones;}
	YY_BREAK
case 314:
#line 434 "parameters_flexer.ll"
case 315:
YY_RULE_SETUP
#line 434 "parameters_flexer.ll"
{return MP_sk_maxmegahubratio;}
	YY_BREAK
case 316:
#line 437 "parameters_flexer.ll"
case 317:
YY_RULE_SETUP
#line 437 "parameters_flexer.ll"
{return MP_ERROR_MOVED_SECTION_HS;}
	YY_BREAK
case 318:
#line 439 "parameters_flexer.ll"
case 319:
YY_RULE_SETUP
#line 439 "parameters_flexer.ll"
{return MP_ERROR_MOVED_SECTION_HS;}
	YY_BREAK
case 320:
#line 441 "parameters_flexer.ll"
case 321:
YY_RULE_SETUP
#line 441 "parameters_flexer.ll"
{return MP_ERROR_MOVED_SECTION_HS;}
	YY_BREAK
case 322:
#line 443 "parameters_flexer.ll"
case 323:
YY_RULE_SETUP
#line 443 "parameters_flexer.ll"
{ return MP_ERROR_MOVED_SECTION_HS;}
	YY_BREAK
case 324:
#line 445 "parameters_flexer.ll"
case 325:
YY_RULE_SETUP
#line 445 "parameters_flexer.ll"
{return MP_ERROR_MOVED_SECTION_HS;}
	YY_BREAK
case 326:
#line 447 "parameters_flexer.ll"
case 327:
YY_RULE_SETUP
#line 447 "parameters_flexer.ll"
{return MP_ERROR_MOVED_SECTION_HS;}
	YY_BREAK
case 328:
#line 449 "parameters_flexer.ll"
case 329:
YY_RULE_SETUP
#line 449 "parameters_flexer.ll"
{return MP_ERROR_MOVED_SECTION_HS;}
	YY_BREAK
case 330:
#line 451 "parameters_flexer.ll"
case 331:
YY_RULE_SETUP
#line 451 "parameters_flexer.ll"
{return MP_ERROR_MOVED_SECTION_HS;}
	YY_BREAK
case 332:
#line 453 "parameters_flexer.ll"
case 333:
YY_RULE_SETUP
#line 453 "parameters_flexer.ll"
{return MP_ERROR_MOVED_SECTION_HS;}
	YY_BREAK
case 334:
#line 455 "parameters_flexer.ll"
case 335:
YY_RULE_SETUP
#line 455 "parameters_flexer.ll"
{return MP_ERROR_MOVED_SECTION_HS;}
	YY_BREAK
case 336:
#line 459 "parameters_flexer.ll"
case 337:
YY_RULE_SETUP
#line 459 "parameters_flexer.ll"
{return MP_hs_nastyrepeatratio;}
	YY_BREAK
case 338:
#line 461 "parameters_flexer.ll"
case 339:
YY_RULE_SETUP
#line 461 "parameters_flexer.ll"
{return MP_hs_nastyrepeatcoverage;}
	YY_BREAK
case 340:
#line 463 "parameters_flexer.ll"
case 341:
YY_RULE_SETUP
#line 463 "parameters_flexer.ll"
{return MP_hs_repeatlevel_in_infofile;}
	YY_BREAK
case 342:
#line 465 "parameters_flexer.ll"
case 343:
YY_RULE_SETUP
#line 465 "parameters_flexer.ll"
{yy_push_state(ASK_YN_MODE); return MP_hs_masknastyrepeats;}
	YY_BREAK
case 344:
#line 467 "parameters_flexer.ll"
case 345:
YY_RULE_SETUP
#line 467 "parameters_flexer.ll"
{return MP_hs_freq_covestmin;}
	YY_BREAK
case 346:
#line 469 "parameters_flexer.ll"
case 347:
YY_RULE_SETUP
#line 469 "parameters_flexer.ll"
{return MP_hs_freqest_minnormal;}
	YY_BREAK
case 348:
#line 471 "parameters_flexer.ll"
case 349:
YY_RULE_SETUP
#line 471 "parameters_flexer.ll"
{return MP_hs_freqest_maxnormal;}
	YY_BREAK
case 350:
#line 473 "parameters_flexer.ll"
case 351:
YY_RULE_SETUP
#line 473 "parameters_flexer.ll"
{return MP_hs_freqest_repeat;}
	YY_BREAK
case 352:
#line 475 "parameters_flexer.ll"
case 353:
YY_RULE_SETUP
#line 475 "parameters_flexer.ll"
{return MP_hs_freqest_heavyrepeat;}
	YY_BREAK
case 354:
#line 477 "parameters_flexer.ll"
case 355:
YY_RULE_SETUP
#line 477 "parameters_flexer.ll"
{return MP_hs_freqest_crazyrepeat;}
	YY_BREAK
case 356:
#line 479 "parameters_flexer.ll"
case 357:
YY_RULE_SETUP
#line 479 "parameters_flexer.ll"
{yy_push_state(ASK_YN_MODE); return MP_hs_applydigitalnormalisation;}
	YY_BREAK
case 358:
#line 481 "parameters_flexer.ll"
case 359:
YY_RULE_SETUP
#line 481 "parameters_flexer.ll"
{yy_push_state(ASK_YN_MODE); return MP_hs_rare_kmer_early_kill;}
	YY_BREAK
case 360:
#line 483 "parameters_flexer.ll"
case 361:
YY_RULE_SETUP
#line 483 "parameters_flexer.ll"
{return MP_hs_million_hashes_per_buffer;}
	YY_BREAK
case 362:
#line 488 "parameters_flexer.ll"
case 363:
YY_RULE_SETUP
#line 488 "parameters_flexer.ll"
{return MP_al_bip;}
	YY_BREAK
case 364:
#line 490 "parameters_flexer.ll"
case 365:
YY_RULE_SETUP
#line 490 "parameters_flexer.ll"
{return MP_al_bmax;}
	YY_BREAK
case 366:
#line 492 "parameters_flexer.ll"
case 367:
YY_RULE_SETUP
#line 492 "parameters_flexer.ll"
{return MP_al_bmin;}
	YY_BREAK
case 368:
#line 494 "parameters_flexer.ll"
case 369:
YY_RULE_SETUP
#line 494 "parameters_flexer.ll"
{return MP_al_min_score;}
	YY_BREAK
case 370:
#line 496 "parameters_flexer.ll"
case 371:
YY_RULE_SETUP
#line 496 "parameters_flexer.ll"
{return MP_al_min_overlap;}
	YY_BREAK
case 372:
#line 498 "parameters_flexer.ll"
case 373:
YY_RULE_SETUP
#line 498 "parameters_flexer.ll"
{return MP_al_min_relscore;}
	YY_BREAK
case 374:
#line 500 "parameters_flexer.ll"
case 375:
YY_RULE_SETUP
#line 500 "parameters_flexer.ll"
{BEGIN(AL_GPLMODE); return MP_ads_gp_level;}
	YY_BREAK
case 376:
#line 502 "parameters_flexer.ll"
case 377:
YY_RULE_SETUP
#line 502 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_ads_extra_gap_penalty;}
	YY_BREAK
case 378:
#line 504 "parameters_flexer.ll"
case 379:
YY_RULE_SETUP
#line 504 "parameters_flexer.ll"
{return MP_ads_max_gppercent;}
	YY_BREAK
case 380:
#line 506 "parameters_flexer.ll"
case 381:
YY_RULE_SETUP
#line 506 "parameters_flexer.ll"
{return MP_al_solexahack_maxerrors;}
	YY_BREAK
case 382:
#line 508 "parameters_flexer.ll"
case 383:
YY_RULE_SETUP
#line 508 "parameters_flexer.ll"
{BEGIN(ALIGN_MODE); return 10;}
	YY_BREAK
case 384:
#line 510 "parameters_flexer.ll"
case 385:
YY_RULE_SETUP
#line 510 "parameters_flexer.ll"
{BEGIN(ALIGN_MODE); return 0;}
	YY_BREAK
case 386:
#line 512 "parameters_flexer.ll"
case 387:
YY_RULE_SETUP
#line 512 "parameters_flexer.ll"
{BEGIN(ALIGN_MODE); return 1;}
	YY_BREAK
case 388:
#line 514 "parameters_flexer.ll"
case 389:
YY_RULE_SETUP
#line 514 "parameters_flexer.ll"
{BEGIN(ALIGN_MODE); return 2;}
	YY_BREAK
case 390:
YY_RULE_SETUP
#line 515 "parameters_flexer.ll"
{BEGIN(ALIGN_MODE); return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 391:
YY_RULE_SETUP
#line 516 "parameters_flexer.ll"
{BEGIN(ALIGN_MODE); return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 392:
YY_RULE_SETUP
#line 517 "parameters_flexer.ll"
{BEGIN(ALIGN_MODE); return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 393:
/* rule 393 can match eol */
YY_RULE_SETUP
#line 518 "parameters_flexer.ll"
{BEGIN(ALIGN_MODE); return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 394:
#line 521 "parameters_flexer.ll"
case 395:
YY_RULE_SETUP
#line 521 "parameters_flexer.ll"
{BEGIN(CO_VALMODE); return MP_con_analyse_mode;}
	YY_BREAK
case 396:
YY_RULE_SETUP
#line 522 "parameters_flexer.ll"
{BEGIN(CO_MODE); return 0;}
	YY_BREAK
case 397:
YY_RULE_SETUP
#line 523 "parameters_flexer.ll"
{BEGIN(CO_MODE); return 1;}
	YY_BREAK
case 398:
YY_RULE_SETUP
#line 524 "parameters_flexer.ll"
{BEGIN(CO_MODE); return 2;}
	YY_BREAK
case 399:
YY_RULE_SETUP
#line 525 "parameters_flexer.ll"
{BEGIN(CO_MODE); return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 400:
YY_RULE_SETUP
#line 526 "parameters_flexer.ll"
{BEGIN(CO_MODE); return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 401:
YY_RULE_SETUP
#line 527 "parameters_flexer.ll"
{BEGIN(CO_MODE); return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 402:
/* rule 402 can match eol */
YY_RULE_SETUP
#line 528 "parameters_flexer.ll"
{BEGIN(CO_MODE); return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 403:
#line 530 "parameters_flexer.ll"
case 404:
YY_RULE_SETUP
#line 530 "parameters_flexer.ll"
{return MP_con_rodirs;}
	YY_BREAK
case 405:
#line 532 "parameters_flexer.ll"
case 406:
YY_RULE_SETUP
#line 532 "parameters_flexer.ll"
{return MP_con_danger_max_error_rate;}
	YY_BREAK
case 407:
#line 534 "parameters_flexer.ll"
case 408:
YY_RULE_SETUP
#line 534 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_mark_repeats;}
	YY_BREAK
case 409:
#line 536 "parameters_flexer.ll"
case 410:
#line 537 "parameters_flexer.ll"
case 411:
YY_RULE_SETUP
#line 537 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_as_mark_repeats_only_in_result;}
	YY_BREAK
case 412:
#line 539 "parameters_flexer.ll"
case 413:
YY_RULE_SETUP
#line 539 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_con_assume_snp_insteadof_rmb;}
	YY_BREAK
case 414:
#line 541 "parameters_flexer.ll"
case 415:
#line 542 "parameters_flexer.ll"
case 416:
YY_RULE_SETUP
#line 542 "parameters_flexer.ll"
{return MP_con_min_rmb_neighbourqual;}
	YY_BREAK
case 417:
#line 544 "parameters_flexer.ll"
case 418:
YY_RULE_SETUP
#line 544 "parameters_flexer.ll"
{return MP_con_min_readspergroup;}
	YY_BREAK
case 419:
#line 546 "parameters_flexer.ll"
case 420:
YY_RULE_SETUP
#line 546 "parameters_flexer.ll"
{return MP_con_min_groupqual_for_rmb_tagging;}
	YY_BREAK
case 421:
#line 548 "parameters_flexer.ll"
case 422:
YY_RULE_SETUP
#line 548 "parameters_flexer.ll"
{return MP_con_emea_setzero_on_clipping_pec;}
	YY_BREAK
case 423:
#line 550 "parameters_flexer.ll"
case 424:
YY_RULE_SETUP
#line 550 "parameters_flexer.ll"
{return MP_con_endread_mark_exclusion_area;}
	YY_BREAK
case 425:
#line 552 "parameters_flexer.ll"
case 426:
YY_RULE_SETUP
#line 552 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_con_also_mark_gap_bases_evenmc;}
	YY_BREAK
case 427:
#line 554 "parameters_flexer.ll"
case 428:
YY_RULE_SETUP
#line 554 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_con_also_mark_gap_bases_needbothstrands;}
	YY_BREAK
case 429:
#line 556 "parameters_flexer.ll"
case 430:
YY_RULE_SETUP
#line 556 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_con_also_mark_gap_bases;}
	YY_BREAK
case 431:
#line 558 "parameters_flexer.ll"
case 432:
#line 559 "parameters_flexer.ll"
case 433:
YY_RULE_SETUP
#line 559 "parameters_flexer.ll"
{filenameid=MP_con_name_prefix; yy_push_state(FN_MODE);}
	YY_BREAK
case 434:
#line 561 "parameters_flexer.ll"
case 435:
YY_RULE_SETUP
#line 561 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_con_force_nonIUPACconsensus_perseqtype;}
	YY_BREAK
case 436:
#line 563 "parameters_flexer.ll"
case 437:
YY_RULE_SETUP
#line 563 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_con_force_nonIUPACconsensus_amongseqtypes;}
	YY_BREAK
case 438:
#line 565 "parameters_flexer.ll"
case 439:
YY_RULE_SETUP
#line 565 "parameters_flexer.ll"
{ return MP_con_msr_maxerrors;}
	YY_BREAK
case 440:
#line 567 "parameters_flexer.ll"
case 441:
YY_RULE_SETUP
#line 567 "parameters_flexer.ll"
{ return MP_con_msr_keependsunmapped;}
	YY_BREAK
case 442:
#line 569 "parameters_flexer.ll"
case 443:
YY_RULE_SETUP
#line 569 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_con_mergeshortreads;}
	YY_BREAK
case 444:
#line 571 "parameters_flexer.ll"
case 445:
YY_RULE_SETUP
#line 571 "parameters_flexer.ll"
{return MP_con_gap_override_ratio;}
	YY_BREAK
case 446:
#line 574 "parameters_flexer.ll"
case 447:
YY_RULE_SETUP
#line 574 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_mi_extendedlog;}
	YY_BREAK
case 448:
#line 576 "parameters_flexer.ll"
case 449:
YY_RULE_SETUP
#line 576 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_mi_iknowwhatido;}
	YY_BREAK
case 450:
#line 578 "parameters_flexer.ll"
case 451:
YY_RULE_SETUP
#line 578 "parameters_flexer.ll"
{ return MP_mi_as_largecontigsize4stats;}
	YY_BREAK
case 452:
#line 580 "parameters_flexer.ll"
case 453:
YY_RULE_SETUP
#line 580 "parameters_flexer.ll"
{ return MP_mi_as_largecontigsize;}
	YY_BREAK
case 454:
YY_RULE_SETUP
#line 581 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_mi_extra_flag1;}
	YY_BREAK
case 455:
YY_RULE_SETUP
#line 582 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_mi_extra_flag2;}
	YY_BREAK
case 456:
YY_RULE_SETUP
#line 583 "parameters_flexer.ll"
{ yy_push_state(ASK_YN_MODE); return MP_mi_extra_flag3;}
	YY_BREAK
case 457:
YY_RULE_SETUP
#line 584 "parameters_flexer.ll"
{ return MP_ERROR_MOVED_SECTION_NW;}
	YY_BREAK
case 458:
YY_RULE_SETUP
#line 585 "parameters_flexer.ll"
{ return MP_ERROR_MOVED_SECTION_NW;}
	YY_BREAK
case 459:
#line 588 "parameters_flexer.ll"
case 460:
YY_RULE_SETUP
#line 588 "parameters_flexer.ll"
{ yy_push_state(NW_CHOICEMODE); return MP_nw_check_nfs;}
	YY_BREAK
case 461:
#line 590 "parameters_flexer.ll"
case 462:
YY_RULE_SETUP
#line 590 "parameters_flexer.ll"
{ yy_push_state(NW_CHOICEMODE); return MP_nw_check_templateproblems;}
	YY_BREAK
case 463:
#line 592 "parameters_flexer.ll"
case 464:
YY_RULE_SETUP
#line 592 "parameters_flexer.ll"
{ yy_push_state(NW_CHOICEMODE); return MP_nw_check_duplicatereadnames;}
	YY_BREAK
case 465:
#line 594 "parameters_flexer.ll"
case 466:
YY_RULE_SETUP
#line 594 "parameters_flexer.ll"
{ yy_push_state(NW_CHOICEMODE); return MP_nw_check_maxreadnamelength;}
	YY_BREAK
case 467:
#line 596 "parameters_flexer.ll"
case 468:
YY_RULE_SETUP
#line 596 "parameters_flexer.ll"
{ return MP_nw_check_mrnlvalue;}
	YY_BREAK
case 469:
#line 598 "parameters_flexer.ll"
case 470:
YY_RULE_SETUP
#line 598 "parameters_flexer.ll"
{ yy_push_state(NW_CHOICEMODE); return MP_nw_check_multipassmapping;}
	YY_BREAK
case 471:
#line 600 "parameters_flexer.ll"
case 472:
YY_RULE_SETUP
#line 600 "parameters_flexer.ll"
{ yy_push_state(NW_CHOICEMODE); return MP_nw_check_coverage;}
	YY_BREAK
case 473:
#line 602 "parameters_flexer.ll"
case 474:
YY_RULE_SETUP
#line 602 "parameters_flexer.ll"
{ return MP_nw_check_covvalue;}
	YY_BREAK
case 475:
YY_RULE_SETUP
#line 604 "parameters_flexer.ll"
{yy_pop_state(); return 0;}
	YY_BREAK
case 476:
YY_RULE_SETUP
#line 605 "parameters_flexer.ll"
{yy_pop_state(); return 1;}
	YY_BREAK
case 477:
YY_RULE_SETUP
#line 606 "parameters_flexer.ll"
{yy_pop_state(); return 2;}
	YY_BREAK
case 478:
YY_RULE_SETUP
#line 607 "parameters_flexer.ll"
{}
	YY_BREAK
case 479:
YY_RULE_SETUP
#line 608 "parameters_flexer.ll"
{ BEGIN(0); return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 480:
YY_RULE_SETUP
#line 609 "parameters_flexer.ll"
{ BEGIN(0); return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 481:
YY_RULE_SETUP
#line 610 "parameters_flexer.ll"
{ BEGIN(0); return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 482:
#line 614 "parameters_flexer.ll"
case 483:
YY_RULE_SETUP
#line 614 "parameters_flexer.ll"
{ return MP_paf_skip_whole_contig_scan;}
	YY_BREAK
case 484:
#line 616 "parameters_flexer.ll"
case 485:
YY_RULE_SETUP
#line 616 "parameters_flexer.ll"
{ return MP_paf_use_quick_rule;}
	YY_BREAK
case 486:
#line 618 "parameters_flexer.ll"
case 487:
YY_RULE_SETUP
#line 618 "parameters_flexer.ll"
{ return MP_paf_quickrule_minlen1;}
	YY_BREAK
case 488:
#line 620 "parameters_flexer.ll"
case 489:
YY_RULE_SETUP
#line 620 "parameters_flexer.ll"
{ return MP_paf_quickrule_minsim1;}
	YY_BREAK
case 490:
#line 622 "parameters_flexer.ll"
case 491:
YY_RULE_SETUP
#line 622 "parameters_flexer.ll"
{ return MP_paf_quickrule_minlen2;}
	YY_BREAK
case 492:
#line 624 "parameters_flexer.ll"
case 493:
YY_RULE_SETUP
#line 624 "parameters_flexer.ll"
{ return MP_paf_quickrule_minsim2;}
	YY_BREAK
case 494:
#line 626 "parameters_flexer.ll"
case 495:
YY_RULE_SETUP
#line 626 "parameters_flexer.ll"
{ return MP_paf_bbquickoverlap_minlen;}
	YY_BREAK
case 496:
#line 628 "parameters_flexer.ll"
case 497:
YY_RULE_SETUP
#line 628 "parameters_flexer.ll"
{return MP_paf_max_startcache_filltime;}
	YY_BREAK
case 498:
YY_RULE_SETUP
#line 631 "parameters_flexer.ll"
{ return MP_jobdef_draft;}
	YY_BREAK
case 499:
YY_RULE_SETUP
#line 632 "parameters_flexer.ll"
{ return MP_jobdef_normal   ;}
	YY_BREAK
case 500:
YY_RULE_SETUP
#line 633 "parameters_flexer.ll"
{ return MP_jobdef_accurate ;}
	YY_BREAK
case 501:
YY_RULE_SETUP
#line 634 "parameters_flexer.ll"
{ return MP_jobdef_genome   ;}
	YY_BREAK
case 502:
YY_RULE_SETUP
#line 635 "parameters_flexer.ll"
{ return MP_jobdef_est      ;}
	YY_BREAK
case 503:
YY_RULE_SETUP
#line 636 "parameters_flexer.ll"
{ return MP_jobdef_estsnppipeline1 ;}
	YY_BREAK
case 504:
YY_RULE_SETUP
#line 637 "parameters_flexer.ll"
{ return MP_jobdef_estsnppipeline2 ;}
	YY_BREAK
case 505:
YY_RULE_SETUP
#line 638 "parameters_flexer.ll"
{ return MP_jobdef_estsnppipeline3 ;}
	YY_BREAK
case 506:
YY_RULE_SETUP
#line 639 "parameters_flexer.ll"
{ return MP_jobdef_denovo   ;}
	YY_BREAK
case 507:
YY_RULE_SETUP
#line 640 "parameters_flexer.ll"
{ return MP_jobdef_mapping  ;}
	YY_BREAK
case 508:
YY_RULE_SETUP
#line 641 "parameters_flexer.ll"
{ return MP_jobdef_sanger   ;}
	YY_BREAK
case 509:
YY_RULE_SETUP
#line 642 "parameters_flexer.ll"
{ return MP_jobdef_454	;}
	YY_BREAK
case 510:
#line 644 "parameters_flexer.ll"
case 511:
YY_RULE_SETUP
#line 644 "parameters_flexer.ll"
{ return MP_jobdef_iontor	;}
	YY_BREAK
case 512:
#line 646 "parameters_flexer.ll"
case 513:
#line 647 "parameters_flexer.ll"
case 514:
#line 648 "parameters_flexer.ll"
case 515:
YY_RULE_SETUP
#line 648 "parameters_flexer.ll"
{ return MP_jobdef_pacbiolq	;}
	YY_BREAK
case 516:
#line 650 "parameters_flexer.ll"
case 517:
#line 651 "parameters_flexer.ll"
case 518:
#line 652 "parameters_flexer.ll"
case 519:
YY_RULE_SETUP
#line 652 "parameters_flexer.ll"
{ return MP_jobdef_pacbiohq	;}
	YY_BREAK
case 520:
YY_RULE_SETUP
#line 653 "parameters_flexer.ll"
{ return MP_jobdef_text   ;}
	YY_BREAK
case 521:
YY_RULE_SETUP
#line 654 "parameters_flexer.ll"
{ return MP_jobdef_solexa   ;}
	YY_BREAK
case 522:
YY_RULE_SETUP
#line 655 "parameters_flexer.ll"
{ return MP_jobdef_solid	;}
	YY_BREAK
case 523:
YY_RULE_SETUP
#line 656 "parameters_flexer.ll"

	YY_BREAK
case 524:
YY_RULE_SETUP
#line 657 "parameters_flexer.ll"
{ return MP_UNRECOGNISED_STRING;}
	YY_BREAK
case 525:
/* rule 525 can match eol */
YY_RULE_SETUP
#line 658 "parameters_flexer.ll"
{ BEGIN(0); return MP_jobdefend;}
	YY_BREAK
case 526:
#line 660 "parameters_flexer.ll"
case YY_STATE_EOF(JOB_MODE):
#line 660 "parameters_flexer.ll"
{ BEGIN(0); return MP_jobdefend;}
	YY_BREAK
case 527:
YY_RULE_SETUP
#line 661 "parameters_flexer.ll"
{ BEGIN(JOB_MODE); return MP_jobdefstart;}
	YY_BREAK
case 528:
YY_RULE_SETUP
#line 664 "parameters_flexer.ll"
{ return MP_quickmode_noclipping_all;}
	YY_BREAK
case 529:
YY_RULE_SETUP
#line 665 "parameters_flexer.ll"
{ return MP_quickmode_noclipping_sanger;}
	YY_BREAK
case 530:
YY_RULE_SETUP
#line 666 "parameters_flexer.ll"
{ return MP_quickmode_noclipping_454;}
	YY_BREAK
case 531:
YY_RULE_SETUP
#line 667 "parameters_flexer.ll"
{ return MP_quickmode_noclipping_iontor;}
	YY_BREAK
case 532:
YY_RULE_SETUP
#line 668 "parameters_flexer.ll"
{ return MP_quickmode_noclipping_pacbiohq;}
	YY_BREAK
case 533:
YY_RULE_SETUP
#line 669 "parameters_flexer.ll"
{ return MP_quickmode_noclipping_pacbiolq;}
	YY_BREAK
case 534:
YY_RULE_SETUP
#line 670 "parameters_flexer.ll"
{ return MP_quickmode_noclipping_text;}
	YY_BREAK
case 535:
YY_RULE_SETUP
#line 671 "parameters_flexer.ll"
{ return MP_quickmode_noclipping_solexa;}
	YY_BREAK
case 536:
YY_RULE_SETUP
#line 672 "parameters_flexer.ll"
{ return MP_quickmode_noclipping_solid;}
	YY_BREAK
case 537:
YY_RULE_SETUP
#line 673 "parameters_flexer.ll"
{ BEGIN(0); }
	YY_BREAK
case 538:
#line 677 "parameters_flexer.ll"
case 539:
YY_RULE_SETUP
#line 677 "parameters_flexer.ll"
{BEGIN(GE_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 540:
#line 679 "parameters_flexer.ll"
case 541:
YY_RULE_SETUP
#line 679 "parameters_flexer.ll"
{BEGIN(LR_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 542:
#line 681 "parameters_flexer.ll"
case 543:
YY_RULE_SETUP
#line 681 "parameters_flexer.ll"
{BEGIN(SB_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 544:
#line 683 "parameters_flexer.ll"
case 545:
YY_RULE_SETUP
#line 683 "parameters_flexer.ll"
{BEGIN(CL_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 546:
#line 685 "parameters_flexer.ll"
case 547:
#line 686 "parameters_flexer.ll"
case 548:
YY_RULE_SETUP
#line 686 "parameters_flexer.ll"
{BEGIN(OUTPUT_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 549:
#line 688 "parameters_flexer.ll"
case 550:
YY_RULE_SETUP
#line 688 "parameters_flexer.ll"
{ BEGIN(FILE_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 551:
#line 690 "parameters_flexer.ll"
case 552:
YY_RULE_SETUP
#line 690 "parameters_flexer.ll"
{BEGIN(AS_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 553:
#line 692 "parameters_flexer.ll"
case 554:
YY_RULE_SETUP
#line 692 "parameters_flexer.ll"
{BEGIN(DP_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 555:
#line 694 "parameters_flexer.ll"
case 556:
YY_RULE_SETUP
#line 694 "parameters_flexer.ll"
{BEGIN(EDIT_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 557:
#line 696 "parameters_flexer.ll"
case 558:
YY_RULE_SETUP
#line 696 "parameters_flexer.ll"
{BEGIN(SKIM_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 559:
#line 698 "parameters_flexer.ll"
case 560:
#line 699 "parameters_flexer.ll"
case 561:
YY_RULE_SETUP
#line 699 "parameters_flexer.ll"
{BEGIN(HASHSTAT_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 562:
#line 701 "parameters_flexer.ll"
case 563:
YY_RULE_SETUP
#line 701 "parameters_flexer.ll"
{BEGIN(ALIGN_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 564:
#line 703 "parameters_flexer.ll"
case 565:
YY_RULE_SETUP
#line 703 "parameters_flexer.ll"
{BEGIN(CO_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 566:
#line 705 "parameters_flexer.ll"
case 567:
#line 706 "parameters_flexer.ll"
case 568:
YY_RULE_SETUP
#line 706 "parameters_flexer.ll"
{BEGIN(DIR_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 569:
#line 708 "parameters_flexer.ll"
case 570:
YY_RULE_SETUP
#line 708 "parameters_flexer.ll"
{BEGIN(MI_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 571:
#line 710 "parameters_flexer.ll"
case 572:
#line 711 "parameters_flexer.ll"
case 573:
#line 712 "parameters_flexer.ll"
case 574:
YY_RULE_SETUP
#line 712 "parameters_flexer.ll"
{BEGIN(NW_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 575:
#line 714 "parameters_flexer.ll"
case 576:
YY_RULE_SETUP
#line 714 "parameters_flexer.ll"
{ BEGIN(PAF_MODE); return MP_PARSING_SECTIONCHANGE;}
	YY_BREAK
case 577:
YY_RULE_SETUP
#line 716 "parameters_flexer.ll"
{ return MP_params_for_common;}
	YY_BREAK
case 578:
YY_RULE_SETUP
#line 717 "parameters_flexer.ll"
{ return MP_params_for_sanger;}
	YY_BREAK
case 579:
YY_RULE_SETUP
#line 718 "parameters_flexer.ll"
{ return MP_params_for_454;}
	YY_BREAK
case 580:
YY_RULE_SETUP
#line 719 "parameters_flexer.ll"
{ return MP_params_for_iontor;}
	YY_BREAK
case 581:
YY_RULE_SETUP
#line 720 "parameters_flexer.ll"
{ return MP_params_for_pacbiolq;}
	YY_BREAK
case 582:
YY_RULE_SETUP
#line 721 "parameters_flexer.ll"
{ return MP_params_for_pacbiohq;}
	YY_BREAK
case 583:
YY_RULE_SETUP
#line 722 "parameters_flexer.ll"
{ return MP_params_for_text;}
	YY_BREAK
case 584:
YY_RULE_SETUP
#line 723 "parameters_flexer.ll"
{ return MP_params_for_solexa;}
	YY_BREAK
case 585:
YY_RULE_SETUP
#line 724 "parameters_flexer.ll"
{ return MP_params_for_solid;}
	YY_BREAK
case 586:
YY_RULE_SETUP
#line 726 "parameters_flexer.ll"
{ return MP_silentparams_for_common;}
	YY_BREAK
case 587:
YY_RULE_SETUP
#line 727 "parameters_flexer.ll"
{ return MP_silentparams_for_sanger;}
	YY_BREAK
case 588:
YY_RULE_SETUP
#line 728 "parameters_flexer.ll"
{ return MP_silentparams_for_454;}
	YY_BREAK
case 589:
YY_RULE_SETUP
#line 729 "parameters_flexer.ll"
{ return MP_silentparams_for_iontor;}
	YY_BREAK
case 590:
YY_RULE_SETUP
#line 730 "parameters_flexer.ll"
{ return MP_silentparams_for_pacbiolq;}
	YY_BREAK
case 591:
YY_RULE_SETUP
#line 731 "parameters_flexer.ll"
{ return MP_silentparams_for_pacbiohq;}
	YY_BREAK
case 592:
YY_RULE_SETUP
#line 732 "parameters_flexer.ll"
{ return MP_silentparams_for_text;}
	YY_BREAK
case 593:
YY_RULE_SETUP
#line 733 "parameters_flexer.ll"
{ return MP_silentparams_for_solexa;}
	YY_BREAK
case 594:
YY_RULE_SETUP
#line 734 "parameters_flexer.ll"
{ return MP_silentparams_for_solid;}
	YY_BREAK
case 595:
YY_RULE_SETUP
#line 737 "parameters_flexer.ll"
{ return MP_quickmode_borg;}
	YY_BREAK
case 596:
#line 740 "parameters_flexer.ll"
case 597:
#line 741 "parameters_flexer.ll"
case 598:
YY_RULE_SETUP
#line 741 "parameters_flexer.ll"
{ filenameid=MP_quickmode_loadparam; yy_push_state(FN_MODE);}
	YY_BREAK
case 599:
YY_RULE_SETUP
#line 743 "parameters_flexer.ll"
{ return MP_quickmode_hirep_something;}
	YY_BREAK
case 600:
YY_RULE_SETUP
#line 744 "parameters_flexer.ll"
{ return MP_quickmode_hirep_good;}
	YY_BREAK
case 601:
YY_RULE_SETUP
#line 745 "parameters_flexer.ll"
{ return MP_quickmode_hirep_best;}
	YY_BREAK
case 602:
YY_RULE_SETUP
#line 746 "parameters_flexer.ll"
{ return MP_quickmode_highlyrepetitive;}
	YY_BREAK
case 603:
YY_RULE_SETUP
#line 747 "parameters_flexer.ll"
{ return MP_quickmode_highqualitydata;}
	YY_BREAK
case 604:
YY_RULE_SETUP
#line 748 "parameters_flexer.ll"
{ return MP_quickmode_lowqualitydata;}
	YY_BREAK
case 605:
YY_RULE_SETUP
#line 751 "parameters_flexer.ll"
{ BEGIN(ASKFORTECH_NOCLIPPING);}
	YY_BREAK
case 606:
YY_RULE_SETUP
#line 753 "parameters_flexer.ll"
{ return MP_quickmode_noclipping_all;}
	YY_BREAK
case 607:
#line 756 "parameters_flexer.ll"
case 608:
YY_RULE_SETUP
#line 756 "parameters_flexer.ll"
{ return MP_quickmode_noquality_all;}
	YY_BREAK
case 609:
YY_RULE_SETUP
#line 758 "parameters_flexer.ll"
{BEGIN(0); return MP_PARSING_SECTIONRESET;} /*Hack for
							     parsing command
							     lines
                                   where each blank resets the state */
	YY_BREAK
case 610:
YY_RULE_SETUP
#line 762 "parameters_flexer.ll"
{return MP_ANID;}
	YY_BREAK
case 611:
YY_RULE_SETUP
#line 763 "parameters_flexer.ll"
{return MP_FLOAT;}
	YY_BREAK
case 612:
YY_RULE_SETUP
#line 764 "parameters_flexer.ll"
{return MP_INT;}
	YY_BREAK
case 613:
YY_RULE_SETUP
#line 766 "parameters_flexer.ll"

	YY_BREAK
case 614:
YY_RULE_SETUP
#line 767 "parameters_flexer.ll"

	YY_BREAK
case 615:
YY_RULE_SETUP
#line 768 "parameters_flexer.ll"

	YY_BREAK
case 616:
YY_RULE_SETUP
#line 770 "parameters_flexer.ll"
{yy_push_state(COMMENT_MODE);} /* munch commentline, # is start of comment */
	YY_BREAK
case 617:
/* rule 617 can match eol */
YY_RULE_SETUP
#line 771 "parameters_flexer.ll"
{ yy_pop_state();}
	YY_BREAK
case 618:
/* rule 618 can match eol */
YY_RULE_SETUP
#line 773 "parameters_flexer.ll"
{/* munch these, if not recognised earlier */ }
	YY_BREAK
case 619:
/* rule 619 can match eol */
YY_RULE_SETUP
#line 775 "parameters_flexer.ll"
{return MP_ERROR_DASHES;}
	YY_BREAK
case 620:
YY_RULE_SETUP
#line 776 "parameters_flexer.ll"
{return MP_ERROR;}
	YY_BREAK
case 621:
YY_RULE_SETUP
#line 778 "parameters_flexer.ll"
ECHO;
	YY_BREAK
#line 7268 "parameters_flexer.cc"
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(GET_UNTIL_NEWLINE):
case YY_STATE_EOF(GE_MODE):
case YY_STATE_EOF(SB_MODE):
case YY_STATE_EOF(LR_MODE):
case YY_STATE_EOF(LR_EQMODE):
case YY_STATE_EOF(LR_RNSMODE):
case YY_STATE_EOF(CL_MODE):
case YY_STATE_EOF(SR_MODE):
case YY_STATE_EOF(FILE_MODE):
case YY_STATE_EOF(OUTPUT_MODE):
case YY_STATE_EOF(FN_MODE):
case YY_STATE_EOF(ASK_YN_MODE):
case YY_STATE_EOF(GET_SINGLECHAR_STRING_MODE):
case YY_STATE_EOF(PAF_MODE):
case YY_STATE_EOF(EDIT_MODE):
case YY_STATE_EOF(SKIM_MODE):
case YY_STATE_EOF(HASHSTAT_MODE):
case YY_STATE_EOF(ALIGN_MODE):
case YY_STATE_EOF(AL_GPLMODE):
case YY_STATE_EOF(AS_MODE):
case YY_STATE_EOF(DP_MODE):
case YY_STATE_EOF(CO_MODE):
case YY_STATE_EOF(DIR_MODE):
case YY_STATE_EOF(MI_MODE):
case YY_STATE_EOF(NW_MODE):
case YY_STATE_EOF(NW_CHOICEMODE):
case YY_STATE_EOF(CO_VALMODE):
case YY_STATE_EOF(COMMENT_MODE):
case YY_STATE_EOF(ASKFORTECH_NOCLIPPING):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = (yy_c_buf_p);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( yywrap(  ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
} /* end of yylex */

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::yyFlexLexer( std::istream* arg_yyin, std::ostream* arg_yyout )
{
	yyin = arg_yyin;
	yyout = arg_yyout;
	yy_c_buf_p = 0;
	yy_init = 0;
	yy_start = 0;
	yy_flex_debug = 0;
	yylineno = 1;	// this will only get updated if %option yylineno

	yy_did_buffer_switch_on_eof = 0;

	yy_looking_for_trail_begin = 0;
	yy_more_flag = 0;
	yy_more_len = 0;
	yy_more_offset = yy_prev_more_offset = 0;

	yy_start_stack_ptr = yy_start_stack_depth = 0;
	yy_start_stack = NULL;

	yy_buffer_stack = 0;
	yy_buffer_stack_top = 0;
	yy_buffer_stack_max = 0;

	yy_state_buf = 0;

}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::~yyFlexLexer()
{
	delete [] yy_state_buf;
	MPfree(yy_start_stack  );
	yy_delete_buffer( YY_CURRENT_BUFFER );
	MPfree(yy_buffer_stack  );
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream* new_in, std::ostream* new_out )
{
	if ( new_in )
		{
		yy_delete_buffer( YY_CURRENT_BUFFER );
		yy_switch_to_buffer( yy_create_buffer( new_in, YY_BUF_SIZE  ) );
		}

	if ( new_out )
		yyout = new_out;
}

#ifdef YY_INTERACTIVE
int yyFlexLexer::LexerInput( char* buf, int /* max_size */ )
#else
int yyFlexLexer::LexerInput( char* buf, int max_size )
#endif
{
	if ( yyin->eof() || yyin->fail() )
		return 0;

#ifdef YY_INTERACTIVE
	yyin->get( buf[0] );

	if ( yyin->eof() )
		return 0;

	if ( yyin->bad() )
		return -1;

	return 1;

#else
	(void) yyin->read( buf, max_size );

	if ( yyin->bad() )
		return -1;
	else
		return yyin->gcount();
#endif
}

void yyFlexLexer::LexerOutput( const char* buf, int size )
{
	(void) yyout->write( buf, size );
}

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
int yyFlexLexer::yy_get_next_buffer()
{
    	register char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	register char *source = (yytext_ptr);
	register int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER;

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					MPrealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), (size_t) num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		yy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) MPrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
	}

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

    yy_state_type yyFlexLexer::yy_get_previous_state()
{
	register yy_state_type yy_current_state;
	register char *yy_cp;
    
	yy_current_state = (yy_start);

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 6278 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    yy_state_type yyFlexLexer::yy_try_NUL_trans( yy_state_type yy_current_state )
{
	register int yy_is_jam;
    	register char *yy_cp = (yy_c_buf_p);

	register YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		(yy_last_accepting_state) = yy_current_state;
		(yy_last_accepting_cpos) = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 6278 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 6277);

	return yy_is_jam ? 0 : yy_current_state;
}

    void yyFlexLexer::yyunput( int c, register char* yy_bp)
{
	register char *yy_cp;
    
    yy_cp = (yy_c_buf_p);

	/* undo effects of setting up yytext */
	*yy_cp = (yy_hold_char);

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = (yy_n_chars) + 2;
		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		register char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

	(yytext_ptr) = yy_bp;
	(yy_hold_char) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
}

    int yyFlexLexer::yyinput()
{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			int offset = (yy_c_buf_p) - (yytext_ptr);
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap(  ) )
						return EOF;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve yytext */
	(yy_hold_char) = *++(yy_c_buf_p);

	return c;
}

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
    void yyFlexLexer::yyrestart( std::istream* input_file )
{
    
	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE );
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
	yy_load_buffer_state(  );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
    void yyFlexLexer::yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state(  );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

    void yyFlexLexer::yy_load_buffer_state()
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
    YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream* file, int size )
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) MPalloc(sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) MPalloc(b->yy_buf_size + 2  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * 
 */
    void yyFlexLexer::yy_delete_buffer( YY_BUFFER_STATE b )
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		MPfree((void *) b->yy_ch_buf  );

	MPfree((void *) b  );
}

extern "C" int isatty (int );

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
    void yyFlexLexer::yy_init_buffer( YY_BUFFER_STATE b, std::istream* file )

{
	int oerrno = errno;
    
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

	b->yy_is_interactive = 0;
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
    void yyFlexLexer::yy_flush_buffer( YY_BUFFER_STATE b )
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state(  );
}

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
void yyFlexLexer::yypush_buffer_state (YY_BUFFER_STATE new_buffer)
{
    	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack();

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state(  );
	(yy_did_buffer_switch_on_eof) = 1;
}

/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
void yyFlexLexer::yypop_buffer_state (void)
{
    	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state(  );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}

/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
void yyFlexLexer::yyensure_buffer_stack(void)
{
	int num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
		num_to_alloc = 1;
		(yy_buffer_stack) = (struct yy_buffer_state**)MPalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
								  
		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
				
		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		int grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)MPrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}

    void yyFlexLexer::yy_push_state( int new_state )
{
    	if ( (yy_start_stack_ptr) >= (yy_start_stack_depth) )
		{
		yy_size_t new_size;

		(yy_start_stack_depth) += YY_START_STACK_INCR;
		new_size = (yy_start_stack_depth) * sizeof( int );

		if ( ! (yy_start_stack) )
			(yy_start_stack) = (int *) MPalloc(new_size  );

		else
			(yy_start_stack) = (int *) MPrealloc((void *) (yy_start_stack),new_size  );

		if ( ! (yy_start_stack) )
			YY_FATAL_ERROR( "out of memory expanding start-condition stack" );
		}

	(yy_start_stack)[(yy_start_stack_ptr)++] = YY_START;

	BEGIN(new_state);
}

    void yyFlexLexer::yy_pop_state()
{
    	if ( --(yy_start_stack_ptr) < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN((yy_start_stack)[(yy_start_stack_ptr)]);
}

    int yyFlexLexer::yy_top_state()
{
    	return (yy_start_stack)[(yy_start_stack_ptr) - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

void yyFlexLexer::LexerError( yyconst char msg[] )
{
    	std::cerr << msg << std::endl;
	exit( YY_EXIT_FAILURE );
}

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = (yy_hold_char); \
		(yy_c_buf_p) = yytext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * s )
{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *MPalloc (yy_size_t  size )
{
	return (void *) malloc( size );
}

void *MPrealloc  (void * ptr, yy_size_t  size )
{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
}

void MPfree (void * ptr )
{
	free( (char *) ptr );	/* see MPrealloc() for (char *) cast */
}

#define YYTABLES_NAME "yytables"

#line 778 "parameters_flexer.ll"



#if defined(__sgi) && !defined(__GNUC__) && (_MIPS_SIM != _MIPS_SIM_ABI32)
#pragma reset woff 1110
#endif

/* deprecated

<*>-{1,2}horrid         { return MP_quickmode_horrid;}
<*>-{1,2}estmode        { return MP_quickmode_estmode;}
<*>-{1,2}genomedraft    { return MP_quickmode_genomedraft;}
<*>-{1,2}genomenormal   { return MP_quickmode_genomenormal;}
<*>-{1,2}genomeaccurate { return MP_quickmode_genomeaccurate;}
<*>-{1,2}mappingdraft   { return MP_quickmode_mappingdraft;}
<*>-{1,2}mappingnormal  { return MP_quickmode_mappingnormal;}
<*>-{1,2}mappingaccurate { return MP_quickmode_mappingaccurate;}

<GE_MODE>"projectinname" |
<GE_MODE>"projectin" |
<GE_MODE>"proin"                 { filenameid=MP_as_projectname_in; yy_push_state(FN_MODE);}
<GE_MODE>"projectoutname" |
<GE_MODE>"projectout" |
<GE_MODE>"proout"                 { filenameid=MP_as_projectname_out; yy_push_state(FN_MODE);}
<GE_MODE>"projectname" |
<GE_MODE>"project" |
<GE_MODE>"pro"                 { filenameid=MP_as_projectname; yy_push_state(FN_MODE);}

<*>-{1,2}proin[\t ]*= |
<*>-{1,2}projectin[\t ]*= |
<*>-{1,2}projectinname[\t ]*=  { filenameid=MP_as_projectname_in; yy_push_state(FN_MODE);}
<*>-{1,2}proout[\t ]*= |
<*>-{1,2}projectout[\t ]*= |
<*>-{1,2}projectoutname[\t ]*=  { filenameid=MP_as_projectname_out; yy_push_state(FN_MODE);}
<*>-{1,2}project[\t ]*= |
<*>-{1,2}projectname[\t ]*=  { filenameid=MP_as_projectname; yy_push_state(FN_MODE);}
 */

